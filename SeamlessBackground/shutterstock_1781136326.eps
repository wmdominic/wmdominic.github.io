%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1000-black19_64.eps
%%Creator: Adobe Illustrator(R) 23.1
%%For: Oleg
%%CreationDate: 7/21/2020
%%BoundingBox: 0 0 2450 2450
%%HiResBoundingBox: 0 0 2450 2450
%%CropBox: 0 0 2450 2450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.1.0 x670 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=0 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Typewriter Vector Seamless Pattern</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:headline>
            <rdf:Alt>
               <rdf:li>Typewriter Vector Seamless Pattern Thin Line Illustration</rdf:li>
            </rdf:Alt>
         </dc:headline>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Typewriter Vector Seamless Pattern Thin Line Illustration</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>typewriter</rdf:li>
               <rdf:li>elements</rdf:li>
               <rdf:li>icons</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>thin</rdf:li>
               <rdf:li>line</rdf:li>
               <rdf:li>retro</rdf:li>
               <rdf:li>ancient</rdf:li>
               <rdf:li>machine</rdf:li>
               <rdf:li>writer</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>linear</rdf:li>
               <rdf:li>pictograms</rdf:li>
               <rdf:li>vintage</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>contour</rdf:li>
               <rdf:li>illustrations</rdf:li>
               <rdf:li>signs</rdf:li>
               <rdf:li>items</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>lined</rdf:li>
               <rdf:li>symbol</rdf:li>
               <rdf:li>white</rdf:li>
               <rdf:li>paper</rdf:li>
               <rdf:li>text</rdf:li>
               <rdf:li>old</rdf:li>
               <rdf:li>type</rdf:li>
               <rdf:li>office</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>equipment</rdf:li>
               <rdf:li>author</rdf:li>
               <rdf:li>journalism</rdf:li>
               <rdf:li>keyboard</rdf:li>
               <rdf:li>story</rdf:li>
               <rdf:li>letter</rdf:li>
               <rdf:li>message</rdf:li>
               <rdf:li>print</rdf:li>
               <rdf:li>sheet</rdf:li>
               <rdf:li>classic</rdf:li>
               <rdf:li>create</rdf:li>
               <rdf:li>creation</rdf:li>
               <rdf:li>secretary</rdf:li>
               <rdf:li>publish</rdf:li>
               <rdf:li>seamless</rdf:li>
               <rdf:li>pattern</rdf:li>
               <rdf:li>wallpaper</rdf:li>
               <rdf:li>texture</rdf:li>
               <rdf:li>outline</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2019-05-18T09:11:40+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2020-07-21T14:49:31.407+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-05-18T09:11:39+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FWIfm&#xA;5F5Vk/LfX/8AFUbyaGlqzXIiAaYMCPSaGpA9UScSlduVK7Yq8W0XRbX86/J8fkTzndzaV598mukh&#xA;uD6cs0lrKihZJYw5UsyFFmXlyVwK0qVxVRvPJev+SPzhv7X8udaOp+ZPNFoxvbC4UulgJXVpNQvp&#xA;KlDxarRKV5EtShGzqs9H5XectChtfLnkqa302G/R7rzP5+uiLjVprmV/3ywxEbPJQEMW4gf5Qqyr&#xA;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&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F87F117407206811822AB2A6B75D99AD</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stRef:instanceID>
            <stRef:documentID>xmp.did:0880117407206811822A8072EAEFE205</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC3D3EC9D6DEE611ADF3FA58164AFD71</stEvt:instanceID>
                  <stEvt:when>2017-01-20T09:07:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T18:36:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T21:11:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:577FABBD61206811822AA8872E1D75D1</stEvt:instanceID>
                  <stEvt:when>2019-04-07T19:22:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stEvt:instanceID>
                  <stEvt:when>2019-05-11T00:15:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</stEvt:instanceID>
                  <stEvt:when>2019-05-18T09:11:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2450.000000</stDim:w>
            <stDim:h>2450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2450 li
2450 2450 li
2450 0 li
cp
clp
gsave
2450 2450 mo
2.16689e-05 2450 li
2.16689e-05 -.000176362 li
2450 -.000176362 li
2450 2450 li
cp
clp
1300.21 1405.33 mo
1314.22 1377.84 1328.23 1350.36 1342.23 1322.87 cv
1346.44 1314.62 1359.24 1321.15 1355.04 1329.39 cv
1341.03 1356.88 1327.03 1384.37 1313.02 1411.86 cv
1308.81 1420.11 1296.02 1413.57 1300.21 1405.33 cv
cp
1326.36 1418.65 mo
1340.37 1391.16 1354.37 1363.68 1368.38 1336.19 cv
1372.58 1327.94 1385.38 1334.48 1381.18 1342.72 cv
1367.18 1370.2 1353.17 1397.69 1339.16 1425.18 cv
1334.96 1433.43 1322.16 1426.89 1326.36 1418.65 cv
cp
1352.5 1431.97 mo
1366.51 1404.48 1380.51 1377 1394.52 1349.51 cv
1398.72 1341.25 1411.52 1347.8 1407.32 1356.04 cv
1393.32 1383.52 1379.31 1411.01 1365.31 1438.5 cv
1361.1 1446.75 1348.3 1440.21 1352.5 1431.97 cv
cp
1145.3 1362.65 mo
1150.87 1351.73 1156.43 1340.81 1161.99 1329.89 cv
1166.2 1321.64 1179 1328.17 1174.8 1336.41 cv
1169.24 1347.33 1163.67 1358.25 1158.11 1369.17 cv
1153.9 1377.42 1141.1 1370.89 1145.3 1362.65 cv
cp
1172.21 1309.83 mo
1177.78 1298.9 1183.34 1287.99 1188.91 1277.07 cv
1193.11 1268.81 1205.91 1275.35 1201.71 1283.59 cv
1196.15 1294.51 1190.58 1305.43 1185.02 1316.35 cv
1180.82 1324.6 1168.02 1318.06 1172.21 1309.83 cv
cp
1199.13 1257 mo
1204.69 1246.08 1210.26 1235.16 1215.82 1224.24 cv
1220.03 1215.99 1232.82 1222.53 1228.63 1230.77 cv
1223.06 1241.69 1217.5 1252.61 1211.94 1263.53 cv
1207.73 1271.78 1194.93 1265.24 1199.13 1257 cv
cp
1158.51 1403.59 mo
1164.08 1392.67 1169.64 1381.75 1175.2 1370.83 cv
1179.41 1362.58 1192.2 1369.12 1188 1377.36 cv
1182.44 1388.28 1176.88 1399.19 1171.31 1410.11 cv
1167.11 1418.37 1154.31 1411.83 1158.51 1403.59 cv
cp
1214.92 1324.54 mo
1209.36 1335.45 1203.79 1346.37 1198.23 1357.29 cv
1194.02 1365.54 1181.23 1359.01 1185.43 1350.77 cv
1190.99 1339.85 1196.55 1328.93 1202.11 1318.01 cv
1206.32 1309.76 1219.12 1316.29 1214.92 1324.54 cv
cp
1241.83 1271.71 mo
1236.27 1282.63 1230.71 1293.55 1225.14 1304.47 cv
1220.94 1312.72 1208.14 1306.19 1212.34 1297.95 cv
1217.9 1287.03 1223.47 1276.11 1229.03 1265.19 cv
1233.23 1256.94 1246.03 1263.47 1241.83 1271.71 cv
cp
1239.6 1244.44 mo
1245.16 1233.52 1250.73 1222.6 1256.29 1211.68 cv
1260.5 1203.43 1273.29 1209.97 1269.1 1218.21 cv
1263.53 1229.13 1257.97 1240.05 1252.41 1250.97 cv
1248.2 1259.22 1235.4 1252.68 1239.6 1244.44 cv
cp
1198.51 1389.76 mo
1204.07 1378.84 1209.64 1367.92 1215.2 1357 cv
1219.41 1348.74 1232.21 1355.29 1228.01 1363.53 cv
1222.44 1374.44 1216.88 1385.36 1211.31 1396.28 cv
1207.11 1404.54 1194.31 1398 1198.51 1389.76 cv
cp
1225.42 1336.94 mo
1230.99 1326.02 1236.55 1315.1 1242.11 1304.18 cv
1246.32 1295.93 1259.12 1302.46 1254.92 1310.7 cv
1249.36 1321.62 1243.79 1332.54 1238.23 1343.46 cv
1234.02 1351.71 1221.23 1345.18 1225.42 1336.94 cv
cp
1252.34 1284.11 mo
1257.9 1273.19 1263.46 1262.28 1269.03 1251.35 cv
1273.23 1243.1 1286.03 1249.64 1281.83 1257.88 cv
1276.27 1268.8 1270.71 1279.72 1265.14 1290.64 cv
1260.94 1298.89 1248.14 1292.35 1252.34 1284.11 cv
cp
1211.72 1430.7 mo
1217.28 1419.78 1222.85 1408.86 1228.41 1397.94 cv
1232.62 1389.69 1245.41 1396.23 1241.22 1404.47 cv
1235.65 1415.39 1230.09 1426.31 1224.52 1437.23 cv
1220.32 1445.48 1207.52 1438.94 1211.72 1430.7 cv
cp
1268.13 1351.65 mo
1262.57 1362.57 1257 1373.48 1251.44 1384.4 cv
1247.23 1392.66 1234.44 1386.12 1238.63 1377.88 cv
1244.2 1366.96 1249.76 1356.04 1255.32 1345.12 cv
1259.53 1336.87 1272.33 1343.41 1268.13 1351.65 cv
cp
1295.04 1298.83 mo
1289.48 1309.74 1283.92 1320.66 1278.35 1331.58 cv
1274.15 1339.84 1261.35 1333.29 1265.55 1325.06 cv
1271.11 1314.14 1276.68 1303.22 1282.24 1292.3 cv
1286.44 1284.05 1299.24 1290.59 1295.04 1298.83 cv
cp
1322.31 1245.32 mo
1316.74 1256.24 1311.18 1267.16 1305.61 1278.08 cv
1301.41 1286.33 1288.61 1279.79 1292.81 1271.55 cv
1298.37 1260.64 1303.94 1249.71 1309.5 1238.8 cv
1313.7 1230.54 1326.5 1237.08 1322.31 1245.32 cv
cp
1043.48 1422.7 mo
1043.18 1422.55 1043.07 1422.19 1043.21 1421.9 cv
1203.33 1107.65 li
1203.48 1107.35 1203.84 1107.24 1204.14 1107.39 cv
1224.66 1117.84 li
1224.96 1117.99 1225.07 1118.35 1224.92 1118.65 cv
1219.9 1128.51 li
1218.81 1127.96 li
1068.74 1422.48 li
1069.83 1423.03 li
1064.8 1432.9 li
1064.65 1433.2 1064.29 1433.31 1064 1433.16 cv
1043.48 1422.7 li
cp
1307.41 1189.23 mo
1336.24 1203.92 1347.74 1239.33 1333.05 1268.16 cv
1328.67 1276.74 li
1253.69 1423.91 li
1249.31 1432.5 li
1234.62 1461.33 1199.22 1472.83 1170.39 1458.14 cv
1089.16 1416.75 li
1226.18 1147.84 li
1307.41 1189.23 li
cp
1369.64 1228 mo
1396.39 1241.63 li
1374.76 1284.1 li
1348 1270.46 li
1369.64 1228 li
cp
1381.04 1303.42 mo
1446.13 1336.59 li
1371.15 1483.75 li
1306.06 1450.59 li
1266.5 1430.43 li
1341.48 1283.27 li
1381.04 1303.42 li
cp
1286.73 1456.87 mo
1267.95 1493.73 li
1241.19 1480.1 li
1259.97 1443.24 li
1286.73 1456.87 li
cp
1366.46 1208.73 mo
1371.55 1198.73 li
1420.37 1223.61 li
1415.27 1233.6 li
1366.46 1208.73 li
cp
1270.31 1518.12 mo
1265.21 1528.11 li
1216.4 1503.24 li
1221.49 1493.24 li
1270.31 1518.12 li
cp
1077.61 1439.42 mo
1082.64 1429.56 li
1163.87 1470.95 li
1185.3 1481.87 1209.61 1481.08 1229.65 1471.1 cv
1225.51 1479.22 li
1219.64 1476.56 1212.65 1478.92 1209.7 1484.72 cv
1202.57 1498.71 li
1199.53 1504.67 1201.91 1511.98 1207.87 1515.02 cv
1260.69 1541.93 li
1266.65 1544.97 1273.96 1542.6 1277 1536.64 cv
1284.13 1522.64 li
1287.17 1516.68 1284.79 1509.37 1278.83 1506.33 cv
1277.9 1505.86 li
1299.53 1463.39 li
1367.7 1498.12 li
1373.06 1500.86 1379.65 1498.72 1382.39 1493.35 cv
1460.5 1340.04 li
1463.24 1334.67 1461.09 1328.09 1455.73 1325.35 cv
1387.56 1290.62 li
1409.81 1246.95 li
1410.75 1247.42 li
1416.71 1250.46 1424.02 1248.08 1427.06 1242.13 cv
1434.19 1228.13 li
1437.23 1222.17 1434.85 1214.86 1428.89 1211.82 cv
1376.07 1184.91 li
1370.11 1181.87 1362.8 1184.25 1359.76 1190.2 cv
1352.63 1204.2 li
1349.68 1210 1351.87 1217.04 1357.47 1220.22 cv
1352.72 1229.55 li
1349.02 1207.47 1335.36 1187.34 1313.93 1176.42 cv
1232.71 1135.04 li
1237.73 1125.17 li
1241.48 1117.82 1238.54 1108.78 1231.19 1105.04 cv
1210.67 1094.58 li
1203.31 1090.83 1194.27 1093.77 1190.53 1101.12 cv
1030.41 1415.37 li
1026.66 1422.73 1029.6 1431.76 1036.95 1435.51 cv
1057.47 1445.97 li
1064.83 1449.71 1073.86 1446.78 1077.61 1439.42 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
1254.75 1711.28 mo
1257.44 1725.14 li
1247.23 1727.27 1237.03 1729.36 1226.84 1731.34 cv
1226.84 1731.34 1226.84 1731.34 1226.84 1731.34 cv
1226.68 1731.37 1226.51 1731.41 1226.35 1731.44 cv
1223.61 1717.33 li
1254.75 1711.28 li
cp
1440.23 1727.42 mo
1445.08 1752.37 1449.93 1777.33 1454.78 1802.28 cv
1467.36 1867.01 1479.94 1931.73 1492.53 1996.45 cv
1493.3 2000.44 1495.97 2006.94 1495.36 2011.04 cv
1494.61 2016.1 1487.23 2025.85 1482.13 2028.18 cv
1478.8 2029.69 1473.83 2029.79 1470.25 2030.49 cv
1437.56 2036.84 1404.87 2043.19 1372.19 2049.55 cv
1354.11 2053.06 1336.03 2056.58 1317.95 2060.09 cv
1317.93 2060.09 1317.91 2060.1 1317.89 2060.1 cv
1291.83 2065.17 li
1291.83 2065.17 1291.82 2065.17 1291.82 2065.17 cv
1278.05 2065.63 1273.59 2051.72 1271.28 2038.22 cv
1272.05 2027.66 1267.5 2014.69 1265.64 2005.11 cv
1264.21 1997.77 1262.79 1990.43 1261.36 1983.09 cv
1297.8 1971.24 1322.08 1935.25 1314.46 1896.07 cv
1314.42 1895.87 1314.36 1895.68 1314.32 1895.49 cv
1314.28 1895.29 1314.27 1895.1 1314.23 1894.9 cv
1306.62 1855.72 1270.63 1831.44 1232.4 1834.11 cv
1230.09 1822.2 1227.77 1810.29 1225.46 1798.38 cv
1225.25 1797.32 1225.04 1796.25 1224.84 1795.19 cv
1223.69 1789.28 1223.19 1780.72 1219.99 1774.85 cv
1217.72 1761.93 1217.99 1748.85 1229.58 1745.45 cv
1229.58 1745.45 1229.58 1745.45 1229.59 1745.45 cv
1274.34 1736.75 li
1274.34 1736.75 li
1315.66 1728.72 1356.97 1720.68 1398.29 1712.65 cv
1415.56 1709.3 1435.65 1703.85 1440.23 1727.42 cv
cp
1235.39 1849.47 mo
1265.67 1847.99 1293.89 1867.31 1300.21 1898.23 cv
1305.93 1929.26 1287 1957.76 1258.37 1967.73 cv
1250.71 1928.31 1243.05 1888.89 1235.39 1849.47 cv
cp
1230.89 2045.9 mo
1221.5 2046.69 1222.42 2043.9 1220.63 2034.7 cv
1219.68 2029.84 1218.74 2024.98 1217.79 2020.12 cv
1223.59 2018.99 1229.38 2017.87 1235.18 2016.74 cv
1238.99 2016 1241.61 2012.14 1240.86 2008.31 cv
1228.48 1944.62 1216.1 1880.93 1203.72 1817.23 cv
1202.98 1813.42 1199.11 1810.81 1195.29 1811.55 cv
1189.37 1812.7 1183.44 1813.85 1177.51 1815.01 cv
1174.9 1805.21 1171.08 1790.12 1175.55 1787.02 cv
1183.49 1785.06 1202.9 1778.27 1207.72 1782.47 cv
1208.67 1787.33 1209.61 1792.18 1210.55 1797.04 cv
1213.55 1812.47 1216.55 1827.9 1219.55 1843.33 cv
1219.62 1843.71 1219.7 1844.1 1219.78 1844.49 cv
1221.82 1855.03 1223.88 1865.57 1225.92 1876.11 cv
1232.31 1908.97 1238.7 1941.82 1245.08 1974.67 cv
1245.31 1975.84 1245.54 1977.02 1245.77 1978.19 cv
1245.84 1978.58 1245.92 1978.97 1245.99 1979.35 cv
1248.21 1990.77 1250.43 2002.18 1252.65 2013.59 cv
1253.28 2016.83 1253.91 2020.07 1254.53 2023.31 cv
1255.38 2027.66 1256.02 2032.46 1256.72 2037.35 cv
1254.16 2044.45 1238.87 2045.23 1230.89 2045.9 cv
cp
1207.99 2007.38 mo
1189.28 2011.02 1170.57 2014.66 1151.85 2018.3 cv
1140.38 1959.31 1128.92 1900.31 1117.45 1841.32 cv
1136.17 1837.69 1154.88 1834.05 1173.59 1830.41 cv
1179.39 1829.28 1185.19 1828.16 1190.98 1827.03 cv
1202.45 1886.02 1213.92 1945.01 1225.38 2004 cv
1219.59 2005.13 1213.79 2006.26 1207.99 2007.38 cv
cp
1294.48 2079.29 mo
1295.22 2079.15 li
1305.25 2078.59 1315.89 2075.86 1325.18 2073.61 cv
1326.96 2082.75 li
1295.81 2088.81 li
1293.98 2079.39 li
1294.15 2079.36 1294.32 2079.32 1294.48 2079.29 cv
cp
1353.09 2093.23 mo
1356 2108.22 li
1278.42 2123.3 li
1275.5 2108.31 li
1353.09 2093.23 li
cp
1209.25 1718.8 mo
1213.13 1738.76 li
1205.65 1745.84 1204.34 1755.92 1205.31 1766.86 cv
1193.94 1766.3 1179.66 1771.62 1171.34 1773.24 cv
1171.33 1773.24 1171.33 1773.24 1171.32 1773.24 cv
1171.04 1773.3 1170.76 1773.4 1170.47 1773.5 cv
1169.63 1773.76 1168.9 1774.12 1168.3 1774.58 cv
1153.6 1783 1159.62 1802.52 1163.53 1817.73 cv
1144.91 1821.35 1126.28 1824.97 1107.65 1828.59 cv
1105.58 1828.99 1104.16 1830.05 1103.25 1831.4 cv
1103.18 1831.49 1103.12 1831.58 1103.05 1831.67 cv
1103.02 1831.73 1102.98 1831.78 1102.95 1831.84 cv
1102.02 1833.19 1101.56 1834.92 1101.97 1837.01 cv
1114.35 1900.71 1126.73 1964.4 1139.11 2028.09 cv
1139.85 2031.91 1143.72 2034.52 1147.54 2033.77 cv
1166.15 2030.16 1184.76 2026.54 1203.37 2022.92 cv
1204.78 2034.46 1205.97 2049.53 1213.05 2056.76 cv
1222.6 2066.49 1246.34 2058.52 1257.4 2055.39 cv
1258.36 2055.12 1259.18 2054.76 1260.02 2054.42 cv
1261.04 2058.07 1262.29 2061.56 1263.97 2064.69 cv
1267.59 2071.46 1272.84 2075.32 1278.95 2077.36 cv
1281.88 2092.43 li
1269.82 2094.77 li
1263.66 2095.97 1259.63 2101.95 1260.82 2108.11 cv
1264.88 2128.98 li
1266.07 2135.14 1272.06 2139.17 1278.21 2137.97 cv
1361.68 2121.75 li
1367.84 2120.55 1371.88 2114.57 1370.68 2108.41 cv
1366.62 2087.54 li
1365.43 2081.39 1359.44 2077.35 1353.28 2078.55 cv
1341.23 2080.89 li
1339.23 2070.59 li
1376.16 2063.41 1413.08 2056.24 1450.01 2049.06 cv
1472.04 2044.77 1510.11 2044.18 1509.88 2013.36 cv
1509.73 1993.9 1502.59 1972.93 1498.91 1953.99 cv
1491.29 1914.76 1483.66 1875.54 1476.04 1836.31 cv
1469.57 1803.05 1463.1 1769.78 1456.64 1736.52 cv
1452.47 1715.06 1447.72 1690.06 1418.75 1694.04 cv
1369.51 1700.8 1320.42 1711.83 1271.51 1722.19 cv
1268.61 1707.27 li
1267.23 1700.18 1260.36 1695.54 1253.28 1696.92 cv
1219.6 1703.47 li
1212.51 1704.85 1207.88 1711.72 1209.25 1718.8 cv
cp
1374.4 1776.58 mo
1375.29 1781.12 1373.04 1785.53 1369.5 1786.21 cv
1365.96 1786.9 1362.22 1783.66 1361.34 1779.12 cv
1360.46 1774.59 1362.71 1770.18 1366.25 1769.49 cv
1369.79 1768.8 1373.52 1772.05 1374.4 1776.58 cv
cp
1347.24 1781.87 mo
1349.64 1794.25 1360.86 1802.53 1372.24 1800.32 cv
1383.62 1798.11 1390.92 1786.23 1388.51 1773.84 cv
1386.1 1761.45 1374.89 1753.17 1363.51 1755.38 cv
1352.12 1757.59 1344.83 1769.47 1347.24 1781.87 cv
cp
1384.28 1827.39 mo
1385.16 1831.93 1382.92 1836.34 1379.38 1837.03 cv
1375.84 1837.72 1372.1 1834.47 1371.22 1829.93 cv
1370.34 1825.4 1372.59 1820.99 1376.13 1820.3 cv
1379.67 1819.61 1383.4 1822.86 1384.28 1827.39 cv
cp
1373.38 1806.19 mo
1362 1808.41 1354.7 1820.29 1357.11 1832.67 cv
1359.52 1845.07 1370.74 1853.35 1382.12 1851.14 cv
1393.5 1848.92 1400.8 1837.04 1398.39 1824.65 cv
1395.98 1812.26 1384.76 1803.98 1373.38 1806.19 cv
cp
1394.3 1878.95 mo
1395.18 1883.48 1392.94 1887.9 1389.4 1888.59 cv
1385.86 1889.27 1382.12 1886.02 1381.24 1881.49 cv
1380.36 1876.96 1382.61 1872.55 1386.15 1871.86 cv
1389.69 1871.17 1393.42 1874.42 1394.3 1878.95 cv
cp
1383.4 1857.75 mo
1372.02 1859.97 1364.73 1871.85 1367.13 1884.23 cv
1369.54 1896.62 1380.76 1904.9 1392.14 1902.69 cv
1403.52 1900.48 1410.82 1888.6 1408.41 1876.21 cv
1406 1863.82 1394.79 1855.54 1383.4 1857.75 cv
cp
1404.33 1930.51 mo
1405.21 1935.04 1402.96 1939.45 1399.42 1940.14 cv
1395.88 1940.83 1392.14 1937.59 1391.26 1933.05 cv
1390.38 1928.52 1392.63 1924.1 1396.17 1923.41 cv
1399.71 1922.73 1403.44 1925.97 1404.33 1930.51 cv
cp
1393.43 1909.31 mo
1382.04 1911.52 1374.75 1923.4 1377.15 1935.79 cv
1379.57 1948.18 1390.78 1956.46 1402.16 1954.25 cv
1413.54 1952.04 1420.84 1940.16 1418.43 1927.77 cv
1416.02 1915.38 1404.81 1907.1 1393.43 1909.31 cv
cp
1414.35 1982.07 mo
1415.23 1986.6 1412.98 1991.01 1409.44 1991.7 cv
1405.9 1992.38 1402.16 1989.14 1401.28 1984.61 cv
1400.4 1980.07 1402.65 1975.66 1406.19 1974.97 cv
1409.73 1974.29 1413.46 1977.53 1414.35 1982.07 cv
cp
1403.45 1960.86 mo
1392.07 1963.08 1384.77 1974.96 1387.18 1987.35 cv
1389.59 1999.74 1400.8 2008.02 1412.19 2005.81 cv
1423.56 2003.59 1430.86 1991.71 1428.46 1979.33 cv
1426.05 1966.93 1414.83 1958.65 1403.45 1960.86 cv
cp
1431.64 1791.44 mo
1432.52 1795.97 1430.27 1800.38 1426.73 1801.07 cv
1423.19 1801.76 1419.45 1798.51 1418.57 1793.98 cv
1417.69 1789.44 1419.94 1785.03 1423.48 1784.34 cv
1427.02 1783.65 1430.76 1786.9 1431.64 1791.44 cv
cp
1404.46 1796.72 mo
1406.87 1809.11 1418.09 1817.39 1429.47 1815.18 cv
1440.85 1812.97 1448.15 1801.09 1445.74 1788.7 cv
1443.33 1776.31 1432.12 1768.03 1420.74 1770.24 cv
1409.35 1772.45 1402.06 1784.33 1404.46 1796.72 cv
cp
1441.66 1843 mo
1442.54 1847.53 1440.29 1851.94 1436.75 1852.62 cv
1433.21 1853.31 1429.47 1850.07 1428.59 1845.54 cv
1427.71 1841 1429.96 1836.59 1433.5 1835.9 cv
1437.04 1835.21 1440.78 1838.46 1441.66 1843 cv
cp
1414.49 1848.28 mo
1416.9 1860.66 1428.11 1868.95 1439.5 1866.73 cv
1450.88 1864.52 1458.17 1852.64 1455.77 1840.25 cv
1453.36 1827.86 1442.14 1819.58 1430.76 1821.79 cv
1419.38 1824.01 1412.08 1835.89 1414.49 1848.28 cv
cp
1451.68 1894.55 mo
1452.56 1899.08 1450.32 1903.5 1446.78 1904.18 cv
1443.23 1904.87 1439.5 1901.62 1438.62 1897.09 cv
1437.73 1892.56 1439.98 1888.15 1443.53 1887.46 cv
1447.07 1886.77 1450.8 1890.02 1451.68 1894.55 cv
cp
1424.51 1899.84 mo
1426.92 1912.22 1438.13 1920.5 1449.52 1918.29 cv
1460.9 1916.08 1468.19 1904.2 1465.79 1891.81 cv
1463.38 1879.42 1452.16 1871.14 1440.78 1873.35 cv
1429.4 1875.57 1422.1 1887.45 1424.51 1899.84 cv
cp
1461.7 1946.11 mo
1462.58 1950.64 1460.34 1955.05 1456.8 1955.74 cv
1453.25 1956.43 1449.52 1953.18 1448.64 1948.65 cv
1447.76 1944.11 1450.01 1939.7 1453.55 1939.02 cv
1457.09 1938.33 1460.82 1941.58 1461.7 1946.11 cv
cp
1434.53 1951.39 mo
1436.94 1963.78 1448.16 1972.06 1459.54 1969.85 cv
1470.92 1967.64 1478.22 1955.76 1475.81 1943.36 cv
1473.4 1930.98 1462.18 1922.7 1450.8 1924.91 cv
1439.42 1927.12 1432.12 1939 1434.53 1951.39 cv
cp
1315.33 1814.05 mo
1314.45 1809.51 1316.7 1805.1 1320.24 1804.41 cv
1323.78 1803.72 1327.51 1806.97 1328.4 1811.51 cv
1329.28 1816.04 1327.03 1820.45 1323.49 1821.14 cv
1319.95 1821.83 1316.22 1818.58 1315.33 1814.05 cv
cp
1342.5 1808.76 mo
1340.09 1796.37 1328.88 1788.09 1317.5 1790.31 cv
1306.12 1792.52 1298.82 1804.4 1301.23 1816.79 cv
1303.64 1829.18 1314.85 1837.46 1326.23 1835.25 cv
1337.61 1833.04 1344.91 1821.15 1342.5 1808.76 cv
cp
1325.36 1865.6 mo
1324.48 1861.07 1326.72 1856.66 1330.26 1855.97 cv
1333.8 1855.28 1337.53 1858.53 1338.42 1863.06 cv
1339.3 1867.6 1337.05 1872.01 1333.51 1872.69 cv
1329.97 1873.38 1326.24 1870.13 1325.36 1865.6 cv
cp
1352.52 1860.32 mo
1350.12 1847.93 1338.9 1839.65 1327.52 1841.86 cv
1316.14 1844.07 1308.84 1855.95 1311.25 1868.35 cv
1313.66 1880.73 1324.87 1889.01 1336.25 1886.8 cv
1347.63 1884.59 1354.93 1872.71 1352.52 1860.32 cv
cp
1335.38 1917.16 mo
1334.5 1912.63 1336.74 1908.21 1340.28 1907.53 cv
1343.83 1906.84 1347.56 1910.09 1348.44 1914.62 cv
1349.32 1919.15 1347.08 1923.56 1343.53 1924.25 cv
1339.99 1924.94 1336.26 1921.69 1335.38 1917.16 cv
cp
1362.55 1911.88 mo
1360.14 1899.49 1348.92 1891.21 1337.54 1893.42 cv
1326.16 1895.63 1318.86 1907.51 1321.27 1919.9 cv
1323.68 1932.29 1334.9 1940.57 1346.27 1938.36 cv
1357.66 1936.15 1364.95 1924.27 1362.55 1911.88 cv
cp
1345.4 1968.71 mo
1344.52 1964.18 1346.77 1959.77 1350.3 1959.08 cv
1353.85 1958.39 1357.58 1961.64 1358.46 1966.18 cv
1359.34 1970.71 1357.1 1975.12 1353.55 1975.81 cv
1350.01 1976.5 1346.28 1973.25 1345.4 1968.71 cv
cp
1372.57 1963.43 mo
1370.16 1951.05 1358.94 1942.76 1347.56 1944.98 cv
1336.18 1947.19 1328.88 1959.07 1331.29 1971.46 cv
1333.7 1983.85 1344.92 1992.13 1356.3 1989.92 cv
1367.68 1987.7 1374.98 1975.82 1372.57 1963.43 cv
cp
f
505.602 -182.361 mo
508.076 -178.693 510.644 -176.545 512.415 -175.471 cv
512.084 -177.515 511.053 -180.702 508.581 -184.367 cv
506.106 -188.037 503.539 -190.184 501.767 -191.257 cv
502.101 -189.214 503.127 -186.029 505.602 -182.361 cv
cp
520.495 -192.406 mo
528.742 -180.18 529.09 -167.504 521.323 -162.266 cv
513.557 -157.028 501.934 -162.097 493.687 -174.322 cv
485.44 -186.548 485.093 -199.224 492.859 -204.462 cv
500.626 -209.7 512.249 -204.632 520.495 -192.406 cv
cp
539.265 -132.454 mo
541.737 -128.789 544.307 -126.64 546.078 -125.565 cv
545.745 -127.611 544.716 -130.796 542.241 -134.464 cv
539.767 -138.131 537.199 -140.277 535.43 -141.35 cv
535.761 -139.307 536.79 -136.125 539.265 -132.454 cv
cp
526.522 -154.558 mo
534.286 -159.797 545.912 -154.725 554.158 -142.499 cv
562.402 -130.274 562.75 -117.597 554.984 -112.36 cv
547.217 -107.121 535.594 -112.193 527.348 -124.418 cv
519.104 -136.644 518.756 -149.32 526.522 -154.558 cv
cp
573.417 -81.82 mo
575.892 -78.1525 578.459 -76.0041 580.231 -74.9308 cv
579.9 -76.9743 578.869 -80.1589 576.395 -83.8293 cv
573.92 -87.4968 571.354 -89.6408 569.583 -90.716 cv
569.917 -88.6706 570.943 -85.4904 573.417 -81.82 cv
cp
560.675 -103.922 mo
568.441 -109.16 580.064 -104.091 588.311 -91.8654 cv
596.555 -79.6398 596.903 -66.9636 589.137 -61.7253 cv
581.373 -56.487 569.748 -61.5588 561.503 -73.7844 cv
553.256 -86.0099 552.911 -98.6838 560.675 -103.922 cv
cp
607.573 -31.1838 mo
610.045 -27.5182 612.613 -25.3698 614.387 -24.2941 cv
614.053 -26.34 613.022 -29.5251 610.55 -33.1926 cv
608.075 -36.86 605.508 -39.0065 603.739 -40.0798 cv
604.069 -38.0363 605.099 -34.8537 607.573 -31.1838 cv
cp
594.831 -53.2873 mo
602.595 -58.5256 614.22 -53.4543 622.464 -41.2287 cv
630.711 -29.0031 631.059 -16.3268 623.292 -11.0886 cv
615.526 -5.85076 603.903 -10.9221 595.656 -23.1476 cv
587.41 -35.3732 587.064 -48.0495 594.831 -53.2873 cv
cp
641.726 19.4505 mo
644.201 23.118 646.768 25.2669 648.54 26.3402 cv
648.208 24.2967 647.177 21.1116 644.703 17.4417 cv
642.229 13.7737 639.663 11.6302 637.892 10.5545 cv
638.225 12.6004 639.251 15.7806 641.726 19.4505 cv
cp
628.983 -2.65106 mo
636.75 -7.88885 648.373 -2.82 656.62 9.40559 cv
664.864 21.6312 665.212 34.3074 657.445 39.5452 cv
649.679 44.7835 638.056 39.7122 629.809 27.4866 cv
621.565 15.2611 621.217 2.58723 628.983 -2.65106 cv
cp
493.479 -138.41 mo
495.954 -134.743 498.523 -132.594 500.295 -131.518 cv
499.962 -133.564 498.933 -136.752 496.456 -140.419 cv
493.984 -144.087 491.416 -146.233 489.645 -147.306 cv
489.978 -145.263 491.007 -142.078 493.479 -138.41 cv
cp
508.373 -148.458 mo
516.619 -136.232 516.967 -123.551 509.201 -118.313 cv
501.434 -113.075 489.809 -118.149 481.564 -130.374 cv
473.318 -142.6 472.973 -155.274 480.739 -160.512 cv
488.503 -165.75 500.126 -160.683 508.373 -148.458 cv
cp
527.634 -87.7736 mo
530.106 -84.1086 532.677 -81.9596 534.448 -80.8845 cv
534.115 -82.9299 533.085 -86.1174 530.611 -89.7829 cv
528.137 -93.4528 525.571 -95.5964 523.8 -96.6696 cv
524.133 -94.6262 525.16 -91.444 527.634 -87.7736 cv
cp
542.528 -97.821 mo
550.772 -85.5959 551.12 -72.9167 543.354 -67.6789 cv
535.589 -62.4406 523.964 -67.5124 515.718 -79.7375 cv
507.473 -91.9631 507.128 -104.637 514.892 -109.875 cv
522.659 -115.113 534.281 -110.047 542.528 -97.821 cv
cp
561.788 -37.1393 mo
564.262 -33.4719 566.83 -31.3234 568.604 -30.2477 cv
568.27 -32.2936 567.239 -35.4811 564.764 -39.1486 cv
562.292 -42.8161 559.725 -44.9626 557.953 -46.0353 cv
558.287 -43.9899 559.315 -40.8073 561.788 -37.1393 cv
cp
576.681 -47.1872 mo
584.928 -34.9616 585.275 -22.2804 577.509 -17.0422 cv
569.743 -11.8039 558.117 -16.8781 549.873 -29.1037 cv
541.626 -41.3293 541.281 -54.0031 549.045 -59.2409 cv
556.812 -64.4792 568.434 -59.4123 576.681 -47.1872 cv
cp
595.943 13.4969 mo
598.415 17.1624 600.985 19.3109 602.756 20.3865 cv
602.423 18.3406 601.392 15.1531 598.919 11.4881 cv
596.445 7.81818 593.88 5.67414 592.108 4.6009 cv
592.442 6.6468 593.468 9.82697 595.943 13.4969 cv
cp
610.834 3.44953 mo
619.081 15.6751 619.429 28.3538 611.662 33.5921 cv
603.896 38.8299 592.273 33.7586 584.026 21.533 cv
575.782 9.30744 575.434 -3.36639 583.2 -8.60418 cv
590.967 -13.8425 602.59 -8.77361 610.834 3.44953 cv
cp
553.048 -178.593 mo
550.576 -182.258 548.009 -184.404 546.237 -185.48 cv
546.573 -183.436 547.597 -180.249 550.071 -176.584 cv
552.546 -172.914 555.116 -170.767 556.885 -169.692 cv
556.554 -171.735 555.523 -174.923 553.048 -178.593 cv
cp
538.157 -168.548 mo
529.913 -180.773 529.565 -193.445 537.329 -198.685 cv
545.096 -203.924 556.718 -198.854 564.965 -186.629 cv
573.209 -174.403 573.56 -161.724 565.793 -156.487 cv
558.027 -151.248 546.404 -156.322 538.157 -168.548 cv
cp
587.204 -127.954 mo
584.729 -131.624 582.164 -133.768 580.393 -134.843 cv
580.726 -132.8 581.752 -129.615 584.227 -125.947 cv
586.699 -122.279 589.269 -120.133 591.041 -119.058 cv
590.707 -121.101 589.676 -124.288 587.204 -127.954 cv
cp
572.313 -117.911 mo
564.066 -130.136 563.718 -142.808 571.484 -148.049 cv
579.251 -153.287 590.874 -148.217 599.118 -135.992 cv
607.365 -123.767 607.713 -111.091 599.946 -105.852 cv
592.18 -100.614 580.56 -105.686 572.313 -117.911 cv
cp
621.357 -77.3195 mo
618.885 -80.987 616.317 -83.1335 614.546 -84.2092 cv
614.881 -82.1633 615.905 -78.9782 618.38 -75.3132 cv
620.854 -71.6428 623.424 -69.4968 625.193 -68.4211 cv
624.863 -70.4645 623.831 -73.652 621.357 -77.3195 cv
cp
606.466 -67.277 mo
598.221 -79.5026 597.871 -92.174 605.638 -97.4142 cv
613.404 -102.653 625.027 -97.5837 633.271 -85.3581 cv
641.518 -73.1325 641.868 -60.4538 634.102 -55.2155 cv
626.335 -49.9777 614.712 -55.0514 606.466 -67.277 cv
cp
655.512 -26.6828 mo
653.038 -30.3532 650.473 -32.4968 648.701 -33.5724 cv
649.034 -31.5265 650.059 -28.3439 652.533 -24.6764 cv
655.007 -21.009 657.578 -18.8625 659.346 -17.7868 cv
659.016 -19.8303 657.984 -23.0178 655.512 -26.6828 cv
cp
640.621 -16.6403 mo
632.375 -28.8659 632.026 -41.5373 639.793 -46.7756 cv
647.56 -52.0158 659.18 -46.947 667.427 -34.7214 cv
675.673 -22.4958 676.021 -9.81951 668.254 -4.58172 cv
660.488 .656562 648.868 -4.41473 640.621 -16.6403 cv
cp
412.548 -180.229 mo
412.019 -178.546 412.318 -176.694 413.371 -175.133 cv
434.39 -143.972 li
458.912 -107.616 li
554.932 34.741 li
579.457 71.0989 li
600.476 102.261 li
601.529 103.821 603.134 104.794 604.893 104.933 cv
605.763 104.997 607.416 104.902 608.744 103.471 cv
705.747 -.54168 li
707.413 -2.32977 707.523 -5.25994 706.007 -7.50945 cv
554.68 -231.863 li
553.164 -234.11 550.402 -235.107 548.121 -234.23 cv
415.349 -183.255 li
413.523 -182.557 412.813 -181.06 412.548 -180.229 cv
cp
411.953 -111.505 mo
411.678 -111.32 411.61 -110.946 411.793 -110.672 cv
419.575 -99.1369 li
419.758 -98.8625 420.128 -98.7912 420.403 -98.9777 cv
438.959 -111.495 li
430.509 -124.022 li
411.953 -111.505 li
cp
532.495 67.2083 mo
532.221 67.3948 532.152 67.7669 532.338 68.0413 cv
540.117 79.576 li
540.303 79.8504 540.671 79.9212 540.945 79.7376 cv
559.504 67.2205 li
551.054 54.6912 li
532.495 67.2083 li
cp
751.92 -26.176 mo
754.11 -27.653 754.688 -30.6349 753.211 -32.8249 cv
709.346 -97.8581 li
697.929 -90.1574 li
689.719 -84.6183 678.532 -86.7912 672.993 -95.0036 cv
623.101 -168.971 li
617.564 -177.181 619.737 -188.371 627.95 -193.91 cv
639.364 -201.611 li
595.835 -266.146 li
594.358 -268.334 591.376 -268.917 589.186 -267.44 cv
564.862 -251.032 li
562.672 -249.554 562.091 -246.57 563.568 -244.38 cv
566.592 -239.897 li
717.921 -15.5451 li
720.944 -11.0617 li
722.422 -8.87127 725.406 -8.2907 727.596 -9.76824 cv
751.92 -26.176 li
cp
647.403 -189.694 mo
635.986 -181.993 li
634.344 -180.886 633.908 -178.652 635.016 -177.008 cv
684.91 -103.04 li
686.017 -101.398 688.251 -100.962 689.896 -102.072 cv
701.31 -109.77 li
647.403 -189.694 li
cp
790.948 -119.3 mo
757.349 -169.113 723.75 -218.927 690.15 -268.74 cv
672.113 -256.574 654.079 -244.409 636.04 -232.24 cv
669.639 -182.429 703.238 -132.616 736.837 -82.8024 cv
754.877 -94.9694 772.911 -107.136 790.948 -119.3 cv
cp
410.196 -196.674 mo
542.974 -247.649 li
544.802 -248.349 546.681 -248.697 548.558 -248.832 cv
549.077 -254.349 551.885 -259.612 556.826 -262.944 cv
581.152 -279.351 li
589.909 -285.258 601.842 -282.941 607.75 -274.182 cv
628.003 -244.155 li
648.027 -257.659 668.051 -271.166 688.073 -284.671 cv
689.819 -285.849 691.579 -286.111 693.176 -285.795 cv
693.286 -285.785 693.396 -285.758 693.507 -285.743 cv
693.57 -285.726 693.632 -285.716 693.695 -285.702 cv
695.305 -285.401 696.858 -284.499 698.046 -282.735 cv
734.326 -228.95 770.604 -175.165 806.883 -121.381 cv
809.054 -118.161 808.172 -113.582 804.942 -111.404 cv
784.921 -97.8996 764.9 -84.3952 744.874 -70.8884 cv
752.743 -59.2214 760.612 -47.5544 768.481 -35.8874 cv
775.687 -25.2057 789.003 -11.819 792.034 .974921 cv
795.27 14.6463 776.229 22.4349 767.07 28.6112 cv
753.615 37.6859 740.162 46.7606 726.704 55.8377 cv
719.038 61.0101 710.99 49.1029 718.668 43.9237 cv
729.737 36.4583 740.807 28.991 751.875 21.5257 cv
758.694 16.9246 765.512 12.326 772.335 7.72492 cv
773.703 6.80109 776.988 5.3924 777.968 3.96174 cv
777.951 3.89045 777.931 3.8758 777.914 3.79523 cv
776.946 -.597833 770.958 -6.51922 768.469 -10.2116 cv
766.828 -12.6418 765.189 -15.0724 763.55 -17.5026 cv
762.494 -16.3097 761.337 -15.1926 759.958 -14.2614 cv
735.632 2.14631 li
730.69 5.48078 724.759 6.10773 719.45 4.52521 cv
718.622 6.21564 717.595 7.82795 716.26 9.25861 cv
619.257 113.278 li
615.278 117.539 609.631 119.722 603.763 119.256 cv
597.619 118.774 592.074 115.508 588.561 110.299 cv
567.54 79.1351 li
548.984 91.6522 li
542.144 96.2654 532.821 94.4549 528.205 87.6121 cv
520.424 76.0775 li
515.808 69.2322 517.619 59.91 524.462 55.2943 cv
543.018 42.7796 li
446.998 -99.5778 li
428.439 -87.0607 li
421.599 -82.4474 412.276 -84.2604 407.66 -91.1032 cv
399.882 -102.638 li
395.263 -109.483 397.076 -118.805 403.917 -123.419 cv
422.473 -135.936 li
401.455 -167.097 li
397.941 -172.306 396.991 -178.669 398.845 -184.549 cv
400.612 -190.164 404.752 -194.579 410.196 -196.674 cv
cp
f
505.602 2267.64 mo
508.076 2271.31 510.644 2273.46 512.415 2274.53 cv
512.084 2272.49 511.053 2269.3 508.581 2265.63 cv
506.106 2261.96 503.539 2259.82 501.767 2258.74 cv
502.101 2260.79 503.127 2263.97 505.602 2267.64 cv
cp
520.495 2257.59 mo
528.742 2269.82 529.09 2282.5 521.323 2287.73 cv
513.557 2292.97 501.934 2287.9 493.687 2275.68 cv
485.44 2263.45 485.093 2250.78 492.859 2245.54 cv
500.626 2240.3 512.249 2245.37 520.495 2257.59 cv
cp
539.265 2317.55 mo
541.737 2321.21 544.307 2323.36 546.078 2324.43 cv
545.745 2322.39 544.716 2319.2 542.241 2315.54 cv
539.767 2311.87 537.199 2309.72 535.43 2308.65 cv
535.761 2310.69 536.79 2313.88 539.265 2317.55 cv
cp
526.522 2295.44 mo
534.286 2290.2 545.912 2295.27 554.158 2307.5 cv
562.402 2319.73 562.75 2332.4 554.984 2337.64 cv
547.217 2342.88 535.594 2337.81 527.348 2325.58 cv
519.104 2313.36 518.756 2300.68 526.522 2295.44 cv
cp
573.417 2368.18 mo
575.892 2371.85 578.459 2374 580.231 2375.07 cv
579.9 2373.03 578.869 2369.84 576.395 2366.17 cv
573.92 2362.5 571.354 2360.36 569.583 2359.28 cv
569.917 2361.33 570.943 2364.51 573.417 2368.18 cv
cp
560.675 2346.08 mo
568.441 2340.84 580.064 2345.91 588.311 2358.14 cv
596.555 2370.36 596.903 2383.04 589.137 2388.27 cv
581.373 2393.51 569.748 2388.44 561.503 2376.22 cv
553.256 2363.99 552.911 2351.32 560.675 2346.08 cv
cp
607.573 2418.82 mo
610.045 2422.48 612.613 2424.63 614.387 2425.71 cv
614.053 2423.66 613.022 2420.47 610.55 2416.81 cv
608.075 2413.14 605.508 2410.99 603.739 2409.92 cv
604.069 2411.96 605.099 2415.15 607.573 2418.82 cv
cp
594.831 2396.71 mo
602.595 2391.47 614.22 2396.55 622.464 2408.77 cv
630.711 2421 631.059 2433.67 623.292 2438.91 cv
615.526 2444.15 603.903 2439.08 595.656 2426.85 cv
587.41 2414.63 587.064 2401.95 594.831 2396.71 cv
cp
641.726 2469.45 mo
644.201 2473.12 646.768 2475.27 648.54 2476.34 cv
648.208 2474.3 647.177 2471.11 644.703 2467.44 cv
642.229 2463.77 639.663 2461.63 637.892 2460.55 cv
638.225 2462.6 639.251 2465.78 641.726 2469.45 cv
cp
628.983 2447.35 mo
636.75 2442.11 648.373 2447.18 656.62 2459.41 cv
664.864 2471.63 665.212 2484.31 657.445 2489.55 cv
649.679 2494.78 638.056 2489.71 629.809 2477.49 cv
621.565 2465.26 621.217 2452.59 628.983 2447.35 cv
cp
493.479 2311.59 mo
495.954 2315.26 498.523 2317.41 500.295 2318.48 cv
499.962 2316.44 498.933 2313.25 496.456 2309.58 cv
493.984 2305.91 491.416 2303.77 489.645 2302.69 cv
489.978 2304.74 491.007 2307.92 493.479 2311.59 cv
cp
508.373 2301.54 mo
516.619 2313.77 516.967 2326.45 509.201 2331.69 cv
501.434 2336.93 489.809 2331.85 481.564 2319.63 cv
473.318 2307.4 472.973 2294.73 480.739 2289.49 cv
488.503 2284.25 500.126 2289.32 508.373 2301.54 cv
cp
527.634 2362.23 mo
530.106 2365.89 532.677 2368.04 534.448 2369.12 cv
534.115 2367.07 533.085 2363.88 530.611 2360.22 cv
528.137 2356.55 525.571 2354.4 523.8 2353.33 cv
524.133 2355.37 525.16 2358.56 527.634 2362.23 cv
cp
542.528 2352.18 mo
550.772 2364.4 551.12 2377.08 543.354 2382.32 cv
535.589 2387.56 523.964 2382.49 515.718 2370.26 cv
507.473 2358.04 507.128 2345.36 514.892 2340.13 cv
522.659 2334.89 534.281 2339.95 542.528 2352.18 cv
cp
561.788 2412.86 mo
564.262 2416.53 566.83 2418.68 568.604 2419.75 cv
568.27 2417.71 567.239 2414.52 564.764 2410.85 cv
562.292 2407.18 559.725 2405.04 557.953 2403.96 cv
558.287 2406.01 559.315 2409.19 561.788 2412.86 cv
cp
576.681 2402.81 mo
584.928 2415.04 585.275 2427.72 577.509 2432.96 cv
569.743 2438.2 558.117 2433.12 549.873 2420.9 cv
541.626 2408.67 541.281 2396 549.045 2390.76 cv
556.812 2385.52 568.434 2390.59 576.681 2402.81 cv
cp
595.943 2463.5 mo
598.415 2467.16 600.985 2469.31 602.756 2470.39 cv
602.423 2468.34 601.392 2465.15 598.919 2461.49 cv
596.445 2457.82 593.88 2455.67 592.108 2454.6 cv
592.442 2456.65 593.468 2459.83 595.943 2463.5 cv
cp
610.834 2453.45 mo
619.081 2465.68 619.429 2478.35 611.662 2483.59 cv
603.896 2488.83 592.273 2483.76 584.026 2471.53 cv
575.782 2459.31 575.434 2446.63 583.2 2441.4 cv
590.967 2436.16 602.59 2441.23 610.834 2453.45 cv
cp
553.048 2271.41 mo
550.576 2267.74 548.009 2265.6 546.237 2264.52 cv
546.573 2266.56 547.597 2269.75 550.071 2273.42 cv
552.546 2277.09 555.116 2279.23 556.885 2280.31 cv
556.554 2278.26 555.523 2275.08 553.048 2271.41 cv
cp
538.157 2281.45 mo
529.913 2269.23 529.565 2256.55 537.329 2251.31 cv
545.096 2246.08 556.718 2251.15 564.965 2263.37 cv
573.209 2275.6 573.56 2288.28 565.793 2293.51 cv
558.027 2298.75 546.404 2293.68 538.157 2281.45 cv
cp
587.204 2322.05 mo
584.729 2318.38 582.164 2316.23 580.393 2315.16 cv
580.726 2317.2 581.752 2320.39 584.227 2324.05 cv
586.699 2327.72 589.269 2329.87 591.041 2330.94 cv
590.707 2328.9 589.676 2325.71 587.204 2322.05 cv
cp
572.313 2332.09 mo
564.066 2319.86 563.718 2307.19 571.484 2301.95 cv
579.251 2296.71 590.874 2301.78 599.118 2314.01 cv
607.365 2326.23 607.713 2338.91 599.946 2344.15 cv
592.18 2349.39 580.56 2344.31 572.313 2332.09 cv
cp
621.357 2372.68 mo
618.885 2369.01 616.317 2366.87 614.546 2365.79 cv
614.881 2367.84 615.905 2371.02 618.38 2374.69 cv
620.854 2378.36 623.424 2380.5 625.193 2381.58 cv
624.863 2379.54 623.831 2376.35 621.357 2372.68 cv
cp
606.466 2382.72 mo
598.221 2370.5 597.871 2357.83 605.638 2352.59 cv
613.404 2347.35 625.027 2352.42 633.271 2364.64 cv
641.518 2376.87 641.868 2389.55 634.102 2394.78 cv
626.335 2400.02 614.712 2394.95 606.466 2382.72 cv
cp
655.512 2423.32 mo
653.038 2419.65 650.473 2417.5 648.701 2416.43 cv
649.034 2418.47 650.059 2421.66 652.533 2425.32 cv
655.007 2428.99 657.578 2431.14 659.346 2432.21 cv
659.016 2430.17 657.984 2426.98 655.512 2423.32 cv
cp
640.621 2433.36 mo
632.375 2421.13 632.026 2408.46 639.793 2403.22 cv
647.56 2397.98 659.18 2403.05 667.427 2415.28 cv
675.673 2427.5 676.021 2440.18 668.254 2445.42 cv
660.488 2450.66 648.868 2445.59 640.621 2433.36 cv
cp
412.548 2269.77 mo
412.019 2271.45 412.318 2273.31 413.371 2274.87 cv
434.39 2306.03 li
458.912 2342.38 li
554.932 2484.74 li
579.457 2521.1 li
600.476 2552.26 li
601.529 2553.82 603.134 2554.79 604.893 2554.93 cv
605.763 2555 607.416 2554.9 608.744 2553.47 cv
705.747 2449.46 li
707.413 2447.67 707.523 2444.74 706.007 2442.49 cv
554.68 2218.14 li
553.164 2215.89 550.402 2214.89 548.121 2215.77 cv
415.349 2266.74 li
413.523 2267.44 412.813 2268.94 412.548 2269.77 cv
cp
411.953 2338.5 mo
411.678 2338.68 411.61 2339.05 411.793 2339.33 cv
419.575 2350.86 li
419.758 2351.14 420.128 2351.21 420.403 2351.02 cv
438.959 2338.51 li
430.509 2325.98 li
411.953 2338.5 li
cp
532.495 2517.21 mo
532.221 2517.39 532.152 2517.77 532.338 2518.04 cv
540.117 2529.58 li
540.303 2529.85 540.671 2529.92 540.945 2529.74 cv
559.504 2517.22 li
551.054 2504.69 li
532.495 2517.21 li
cp
751.92 2423.82 mo
754.11 2422.35 754.688 2419.37 753.211 2417.18 cv
709.346 2352.14 li
697.929 2359.84 li
689.719 2365.38 678.532 2363.21 672.993 2355 cv
623.101 2281.03 li
617.564 2272.82 619.737 2261.63 627.95 2256.09 cv
639.364 2248.39 li
595.835 2183.85 li
594.358 2181.67 591.376 2181.08 589.186 2182.56 cv
564.862 2198.97 li
562.672 2200.45 562.091 2203.43 563.568 2205.62 cv
566.592 2210.1 li
717.921 2434.45 li
720.944 2438.94 li
722.422 2441.13 725.406 2441.71 727.596 2440.23 cv
751.92 2423.82 li
cp
647.403 2260.31 mo
635.986 2268.01 li
634.344 2269.11 633.908 2271.35 635.016 2272.99 cv
684.91 2346.96 li
686.017 2348.6 688.251 2349.04 689.896 2347.93 cv
701.31 2340.23 li
647.403 2260.31 li
cp
790.948 2330.7 mo
757.349 2280.89 723.75 2231.07 690.15 2181.26 cv
672.113 2193.43 654.079 2205.59 636.04 2217.76 cv
669.639 2267.57 703.238 2317.38 736.837 2367.2 cv
754.877 2355.03 772.911 2342.86 790.948 2330.7 cv
cp
410.196 2253.33 mo
542.974 2202.35 li
544.802 2201.65 546.681 2201.3 548.558 2201.17 cv
549.077 2195.65 551.885 2190.39 556.826 2187.06 cv
581.152 2170.65 li
589.909 2164.74 601.842 2167.06 607.75 2175.82 cv
628.003 2205.84 li
648.027 2192.34 668.051 2178.83 688.073 2165.33 cv
689.819 2164.15 691.579 2163.89 693.176 2164.21 cv
693.286 2164.22 693.396 2164.24 693.507 2164.26 cv
693.57 2164.27 693.632 2164.28 693.695 2164.3 cv
695.305 2164.6 696.858 2165.5 698.046 2167.26 cv
734.326 2221.05 770.604 2274.84 806.883 2328.62 cv
809.054 2331.84 808.172 2336.42 804.942 2338.6 cv
784.921 2352.1 764.9 2365.6 744.874 2379.11 cv
752.743 2390.78 760.612 2402.45 768.481 2414.11 cv
775.687 2424.79 789.003 2438.18 792.034 2450.97 cv
795.27 2464.65 776.229 2472.43 767.07 2478.61 cv
753.615 2487.69 740.162 2496.76 726.704 2505.84 cv
719.038 2511.01 710.99 2499.1 718.668 2493.92 cv
729.737 2486.46 740.807 2478.99 751.875 2471.53 cv
758.694 2466.92 765.512 2462.33 772.335 2457.72 cv
773.703 2456.8 776.988 2455.39 777.968 2453.96 cv
777.951 2453.89 777.931 2453.88 777.914 2453.8 cv
776.946 2449.4 770.958 2443.48 768.469 2439.79 cv
766.828 2437.36 765.189 2434.93 763.55 2432.5 cv
762.494 2433.69 761.337 2434.81 759.958 2435.74 cv
735.632 2452.15 li
730.69 2455.48 724.759 2456.11 719.45 2454.52 cv
718.622 2456.22 717.595 2457.83 716.26 2459.26 cv
619.257 2563.28 li
615.278 2567.54 609.631 2569.72 603.763 2569.26 cv
597.619 2568.77 592.074 2565.51 588.561 2560.3 cv
567.54 2529.14 li
548.984 2541.65 li
542.144 2546.26 532.821 2544.45 528.205 2537.61 cv
520.424 2526.08 li
515.808 2519.23 517.619 2509.91 524.462 2505.29 cv
543.018 2492.78 li
446.998 2350.42 li
428.439 2362.94 li
421.599 2367.55 412.276 2365.74 407.66 2358.9 cv
399.882 2347.36 li
395.263 2340.52 397.076 2331.19 403.917 2326.58 cv
422.473 2314.06 li
401.455 2282.9 li
397.941 2277.69 396.991 2271.33 398.845 2265.45 cv
400.612 2259.84 404.752 2255.42 410.196 2253.33 cv
cp
f
784.051 999.392 mo
793.68 989.065 li
801.402 996.075 809.09 1003.1 816.683 1010.17 cv
816.686 1010.18 816.688 1010.17 816.69 1010.18 cv
816.811 1010.29 816.933 1010.4 817.058 1010.51 cv
807.253 1021.03 li
784.051 999.392 li
cp
688.087 839.846 mo
705.423 821.255 722.762 802.659 740.101 784.066 cv
785.066 735.847 830.033 687.627 874.998 639.409 cv
877.776 636.429 881.466 630.453 885.136 628.538 cv
889.666 626.169 901.896 626.404 906.774 629.165 cv
909.959 630.968 912.958 634.932 915.629 637.424 cv
939.981 660.133 964.337 682.842 988.688 705.551 cv
1002.16 718.115 1015.63 730.676 1029.1 743.237 cv
1029.11 743.247 1029.13 743.259 1029.14 743.274 cv
1048.56 761.382 li
1048.56 761.384 1048.56 761.384 1048.57 761.387 cv
1057.04 772.252 1048.4 784.039 1038.83 793.844 cv
1029.84 799.432 1022.02 810.729 1015.37 817.869 cv
1010.27 823.34 1005.17 828.808 1000.07 834.277 cv
969.063 811.761 925.674 813.275 898.452 842.467 cv
898.314 842.616 898.204 842.776 898.069 842.923 cv
897.932 843.067 897.78 843.187 897.641 843.337 cv
870.417 872.531 871.933 915.915 896.561 945.274 cv
888.287 954.148 880.013 963.019 871.739 971.89 cv
871.002 972.682 870.262 973.475 869.522 974.269 cv
865.418 978.67 858.781 984.101 855.92 990.145 cv
846.798 999.571 836.06 1007.05 826.49 999.669 cv
826.488 999.666 826.488 999.666 826.485 999.664 cv
793.144 968.571 li
793.144 968.571 li
762.359 939.864 731.577 911.16 700.791 882.453 cv
687.928 870.458 671.714 857.402 688.087 839.846 cv
cp
907.232 933.83 mo
888.233 910.197 887.28 876.01 908.58 852.722 cv
930.314 829.859 964.501 828.421 989.393 845.721 cv
962.007 875.091 934.619 904.462 907.232 933.83 cv
cp
1068.79 822.004 mo
1074.95 829.139 1072.16 830.038 1065.76 836.895 cv
1062.39 840.516 1059.01 844.138 1055.63 847.756 cv
1051.31 843.731 1047 839.703 1042.68 835.678 cv
1039.84 833.03 1035.18 833.184 1032.52 836.031 cv
988.271 883.485 944.017 930.941 899.768 978.395 cv
897.117 981.237 897.276 985.897 900.12 988.551 cv
904.538 992.669 908.955 996.787 913.37 1000.91 cv
906.978 1008.78 897.019 1020.74 891.874 1018.94 cv
885.628 1013.67 868.726 1001.96 869.29 995.592 cv
872.666 991.973 876.037 988.357 879.41 984.738 cv
890.131 973.243 900.853 961.745 911.571 950.252 cv
911.838 949.963 912.11 949.671 912.38 949.385 cv
919.703 941.53 927.028 933.676 934.352 925.823 cv
957.176 901.345 979.998 876.872 1002.82 852.394 cv
1003.64 851.519 1004.45 850.645 1005.27 849.77 cv
1005.54 849.484 1005.81 849.192 1006.08 848.903 cv
1014.01 840.402 1021.93 831.9 1029.86 823.398 cv
1032.11 820.985 1034.36 818.572 1036.61 816.159 cv
1039.64 812.915 1043.15 809.578 1046.69 806.133 cv
1053.95 804.034 1063.56 815.946 1068.79 822.004 cv
cp
1051.09 863.169 mo
1065.03 876.174 1078.97 889.174 1092.92 902.178 cv
1051.93 946.126 1010.95 990.079 969.965 1034.03 cv
956.02 1021.03 942.077 1008.03 928.133 995.021 cv
923.814 990.995 919.497 986.968 915.178 982.94 cv
956.164 938.992 997.147 895.039 1038.13 851.088 cv
1042.45 855.116 1046.77 859.144 1051.09 863.169 cv
cp
1058.43 750.935 mo
1057.88 750.418 li
1051.53 742.629 1043.07 735.627 1035.79 729.438 cv
1042.14 722.625 li
1065.34 744.263 li
1058.8 751.28 li
1058.68 751.165 1058.55 751.05 1058.43 750.935 cv
cp
1035.25 695.327 mo
1045.67 684.16 li
1103.47 738.065 li
1093.06 749.232 li
1035.25 695.327 li
cp
816.881 1031.78 mo
830.746 1016.91 li
840.869 1018.79 849.797 1013.93 858.076 1006.72 cv
864.304 1016.24 877.007 1024.67 883.206 1030.45 cv
883.213 1030.46 883.215 1030.46 883.22 1030.46 cv
883.436 1030.65 883.681 1030.83 883.928 1031 cv
884.631 1031.52 885.354 1031.91 886.084 1032.12 cv
901.529 1039.06 913.784 1022.73 923.785 1010.62 cv
937.664 1023.56 951.541 1036.5 965.417 1049.44 cv
966.958 1050.88 968.656 1051.41 970.281 1051.35 cv
970.394 1051.36 970.506 1051.35 970.619 1051.35 cv
970.683 1051.34 970.746 1051.34 970.81 1051.34 cv
972.449 1051.3 974.123 1050.64 975.575 1049.09 cv
1019.82 1001.63 1064.08 954.177 1108.33 906.723 cv
1110.98 903.881 1110.82 899.223 1107.98 896.568 cv
1094.11 883.637 1080.25 870.708 1066.38 857.779 cv
1074.88 849.856 1086.38 840.039 1088.06 830.057 cv
1090.32 816.615 1069.92 802.093 1060.88 794.981 cv
1060.1 794.364 1059.33 793.915 1058.56 793.435 cv
1060.92 790.463 1063 787.396 1064.55 784.199 cv
1067.9 777.289 1067.94 770.775 1066 764.633 cv
1076.46 753.407 li
1085.45 761.788 li
1090.04 766.066 1097.25 765.814 1101.52 761.227 cv
1116.02 745.68 li
1120.3 741.091 1120.05 733.878 1115.47 729.6 cv
1053.28 671.609 li
1048.69 667.331 1041.48 667.583 1037.2 672.172 cv
1022.7 687.72 li
1018.42 692.306 1018.68 699.519 1023.26 703.797 cv
1032.24 712.171 li
1025.08 719.844 li
997.574 694.19 970.065 668.536 942.554 642.883 cv
926.137 627.575 903.273 597.121 878.479 615.428 cv
862.826 626.987 850.054 645.087 836.893 659.2 cv
809.644 688.423 782.39 717.647 755.139 746.873 cv
732.028 771.655 708.917 796.439 685.807 821.223 cv
670.893 837.212 653.457 855.743 673.704 876.843 cv
708.116 912.711 745.895 945.935 783.03 979.417 cv
772.659 990.537 li
767.739 995.812 768.028 1004.1 773.303 1009.02 cv
798.394 1032.42 li
803.671 1037.34 811.962 1037.05 816.881 1031.78 cv
cp
766.554 864.201 mo
769.702 860.825 774.589 860.048 777.228 862.51 cv
779.864 864.968 779.436 869.899 776.288 873.278 cv
773.134 876.657 768.244 877.431 765.608 874.971 cv
762.967 872.509 763.403 867.582 766.554 864.201 cv
cp
786.795 883.078 mo
795.402 873.849 795.51 859.906 787.031 851.997 cv
778.551 844.091 764.65 845.169 756.043 854.398 cv
747.434 863.632 747.326 877.576 755.805 885.481 cv
764.285 893.39 778.186 892.309 786.795 883.078 cv
cp
801.855 826.346 mo
805.006 822.965 809.892 822.188 812.533 824.65 cv
815.169 827.11 814.74 832.042 811.587 835.423 cv
808.439 838.799 803.548 839.571 800.912 837.111 cv
798.271 834.651 798.705 829.722 801.855 826.346 cv
cp
791.11 847.624 mo
799.589 855.53 813.491 854.452 822.095 845.223 cv
830.707 835.989 830.814 822.046 822.335 814.14 cv
813.853 806.231 799.955 807.312 791.343 816.543 cv
782.736 825.775 782.63 839.716 791.11 847.624 cv
cp
837.677 787.932 mo
840.825 784.556 845.713 783.777 848.352 786.239 cv
850.99 788.697 850.557 793.631 847.408 797.007 cv
844.26 800.383 839.368 801.16 836.731 798.7 cv
834.093 796.238 834.529 791.308 837.677 787.932 cv
cp
826.931 809.208 mo
835.411 817.117 849.312 816.036 857.919 806.807 cv
866.526 797.578 866.631 783.638 858.152 775.729 cv
849.672 767.823 835.771 768.901 827.164 778.13 cv
818.56 787.359 818.452 801.302 826.931 809.208 cv
cp
873.494 749.521 mo
876.646 746.142 881.532 745.366 884.173 747.826 cv
886.81 750.285 886.38 755.218 883.228 758.598 cv
880.079 761.974 875.187 762.749 872.55 760.289 cv
869.909 757.829 870.345 752.897 873.494 749.521 cv
cp
862.75 770.8 mo
871.23 778.705 885.128 777.628 893.735 768.398 cv
902.347 759.164 902.453 745.221 893.973 737.315 cv
885.494 729.407 871.592 730.487 862.983 739.721 cv
854.376 748.951 854.269 762.891 862.75 770.8 cv
cp
909.317 711.108 mo
912.466 707.731 917.351 706.955 919.99 709.415 cv
922.628 711.874 922.197 716.806 919.049 720.182 cv
915.898 723.561 911.008 724.335 908.372 721.875 cv
905.733 719.413 906.167 714.486 909.317 711.108 cv
cp
898.569 732.386 mo
907.049 740.294 920.95 739.214 929.56 729.982 cv
938.164 720.753 938.271 706.813 929.792 698.904 cv
921.313 690.998 907.412 692.076 898.805 701.305 cv
890.198 710.537 890.09 724.48 898.569 732.386 cv
cp
744.93 809.169 mo
748.081 805.79 752.968 805.013 755.607 807.473 cv
758.246 809.936 757.817 814.867 754.666 818.246 cv
751.516 821.625 746.623 822.399 743.984 819.937 cv
741.346 817.479 741.779 812.547 744.93 809.169 cv
cp
765.174 828.046 mo
773.784 818.814 773.889 804.871 765.409 796.963 cv
756.93 789.057 743.029 790.137 734.422 799.369 cv
725.813 808.598 725.707 822.541 734.184 830.447 cv
742.666 838.356 756.567 837.278 765.174 828.046 cv
cp
780.751 770.755 mo
783.899 767.379 788.787 766.605 791.423 769.065 cv
794.064 771.525 793.633 776.456 790.485 779.832 cv
787.334 783.211 782.444 783.985 779.806 781.523 cv
777.169 779.063 777.601 774.134 780.751 770.755 cv
cp
800.996 789.633 mo
809.6 780.404 809.708 766.463 801.226 758.552 cv
792.749 750.646 778.848 751.726 770.241 760.955 cv
761.634 770.187 761.526 784.13 770.003 792.034 cv
778.485 799.945 792.386 798.864 800.996 789.633 cv
cp
816.57 732.344 mo
819.719 728.968 824.609 728.189 827.248 730.649 cv
829.886 733.111 829.455 738.045 826.304 741.421 cv
823.156 744.798 818.266 745.572 815.625 743.112 cv
812.988 740.652 813.422 735.721 816.57 732.344 cv
cp
836.814 751.221 mo
845.421 741.992 845.529 728.049 837.047 720.141 cv
828.568 712.235 814.667 713.315 806.062 722.544 cv
797.456 731.773 797.348 745.714 805.825 753.62 cv
814.307 761.529 828.208 760.451 836.814 751.221 cv
cp
852.389 693.933 mo
855.54 690.555 860.428 689.781 863.064 692.24 cv
865.703 694.7 865.274 699.632 862.123 703.011 cv
858.975 706.387 854.084 707.16 851.446 704.699 cv
848.808 702.239 849.241 697.309 852.389 693.933 cv
cp
872.634 712.81 mo
881.24 703.579 881.348 689.638 872.866 681.727 cv
864.389 673.824 850.488 674.902 841.879 684.133 cv
833.272 693.362 833.167 707.305 841.644 715.211 cv
850.125 723.12 864.027 722.039 872.634 712.81 cv
cp
831.582 889.972 mo
828.431 893.351 823.541 894.127 820.904 891.668 cv
818.266 889.205 818.702 884.276 821.85 880.897 cv
825 877.519 829.889 876.742 832.527 879.204 cv
835.163 881.662 834.732 886.594 831.582 889.972 cv
cp
811.339 871.095 mo
802.73 880.326 802.625 894.27 811.104 902.176 cv
819.582 910.082 833.482 909.004 842.092 899.772 cv
850.699 890.541 850.807 876.598 842.33 868.692 cv
833.85 860.785 819.949 861.864 811.339 871.095 cv
cp
867.403 851.559 mo
864.252 854.937 859.364 855.712 856.726 853.252 cv
854.087 850.792 854.521 845.863 857.671 842.487 cv
860.82 839.108 865.705 838.331 868.344 840.793 cv
870.982 843.253 870.551 848.182 867.403 851.559 cv
cp
847.161 832.684 mo
838.552 841.915 838.444 855.856 846.923 863.764 cv
855.403 871.671 869.302 870.59 877.911 861.359 cv
886.518 852.13 886.625 838.187 878.146 830.283 cv
869.667 822.374 855.765 823.455 847.161 832.684 cv
cp
903.222 813.148 mo
900.074 816.524 895.184 817.301 892.547 814.841 cv
889.906 812.378 890.342 807.449 893.49 804.073 cv
896.639 800.697 901.526 799.918 904.167 802.38 cv
906.804 804.837 906.37 809.769 903.222 813.148 cv
cp
882.98 794.27 mo
874.373 803.499 874.265 817.443 882.747 825.351 cv
891.224 833.255 905.125 832.177 913.73 822.948 cv
922.337 813.719 922.444 799.776 913.968 791.869 cv
905.488 783.963 891.587 785.041 882.98 794.27 cv
cp
939.041 774.737 mo
935.89 778.113 931.002 778.887 928.366 776.43 cv
925.728 773.967 926.161 769.04 929.31 765.662 cv
932.46 762.283 937.346 761.507 939.984 763.969 cv
942.623 766.429 942.189 771.358 939.041 774.737 cv
cp
918.799 755.862 mo
910.192 765.091 910.084 779.032 918.564 786.94 cv
927.041 794.846 940.942 793.766 949.549 784.536 cv
958.158 775.305 958.264 761.362 949.787 753.458 cv
941.307 745.55 927.406 746.63 918.799 755.862 cv
cp
f
2744.58 1817.18 mo
2741.14 1814.39 2738.06 1813.09 2736.05 1812.58 cv
2736.97 1814.44 2738.88 1817.18 2742.32 1819.97 cv
2745.76 1822.75 2748.84 1824.05 2750.85 1824.56 cv
2749.93 1822.71 2748.02 1819.96 2744.58 1817.18 cv
cp
2733.28 1831.14 mo
2721.81 1821.86 2717.78 1809.84 2723.67 1802.56 cv
2729.57 1795.28 2742.16 1796.73 2753.63 1806.01 cv
2765.09 1815.29 2769.12 1827.31 2763.23 1834.59 cv
2757.34 1841.87 2744.73 1840.42 2733.28 1831.14 cv
cp
2697.8 1779.3 mo
2694.36 1776.51 2691.28 1775.21 2689.27 1774.7 cv
2690.19 1776.56 2692.1 1779.3 2695.54 1782.09 cv
2698.98 1784.87 2702.06 1786.17 2704.07 1786.68 cv
2703.15 1784.82 2701.24 1782.08 2697.8 1779.3 cv
cp
2716.45 1796.71 mo
2710.55 1803.99 2697.95 1802.54 2686.49 1793.26 cv
2675.03 1783.97 2670.99 1771.95 2676.89 1764.67 cv
2682.79 1757.39 2695.38 1758.85 2706.85 1768.13 cv
2718.3 1777.4 2722.34 1789.43 2716.45 1796.71 cv
cp
2650.33 1740.86 mo
2646.9 1738.07 2643.81 1736.77 2641.81 1736.26 cv
2642.72 1738.12 2644.64 1740.86 2648.07 1743.65 cv
2651.51 1746.43 2654.59 1747.73 2656.6 1748.24 cv
2655.69 1746.38 2653.77 1743.64 2650.33 1740.86 cv
cp
2668.98 1758.27 mo
2663.09 1765.55 2650.49 1764.1 2639.03 1754.82 cv
2627.57 1745.54 2623.53 1733.52 2629.43 1726.24 cv
2635.32 1718.96 2647.92 1720.41 2659.38 1729.69 cv
2670.84 1738.97 2674.88 1750.99 2668.98 1758.27 cv
cp
2602.87 1702.42 mo
2599.43 1699.64 2596.35 1698.33 2594.34 1697.82 cv
2595.25 1699.68 2597.17 1702.43 2600.61 1705.21 cv
2604.05 1708 2607.13 1709.3 2609.13 1709.81 cv
2608.22 1707.95 2606.31 1705.2 2602.87 1702.42 cv
cp
2621.51 1719.83 mo
2615.62 1727.11 2603.02 1725.66 2591.56 1716.38 cv
2580.1 1707.1 2576.06 1695.08 2581.96 1687.8 cv
2587.85 1680.52 2600.45 1681.97 2611.91 1691.25 cv
2623.37 1700.53 2627.41 1712.55 2621.51 1719.83 cv
cp
2555.4 1663.98 mo
2551.96 1661.2 2548.88 1659.89 2546.87 1659.39 cv
2547.79 1661.24 2549.7 1663.99 2553.14 1666.77 cv
2556.58 1669.56 2559.66 1670.86 2561.67 1671.37 cv
2560.75 1669.51 2558.84 1666.77 2555.4 1663.98 cv
cp
2574.05 1681.39 mo
2568.15 1688.68 2555.56 1687.22 2544.1 1677.94 cv
2532.64 1668.66 2528.6 1656.64 2534.49 1649.36 cv
2540.39 1642.08 2552.99 1643.53 2564.45 1652.81 cv
2575.91 1662.09 2579.94 1674.11 2574.05 1681.39 cv
cp
2743.33 1771.6 mo
2739.89 1768.82 2736.8 1767.52 2734.79 1767.01 cv
2735.71 1768.87 2737.63 1771.61 2741.06 1774.4 cv
2744.5 1777.18 2747.58 1778.48 2749.59 1778.99 cv
2748.68 1777.13 2746.76 1774.39 2743.33 1771.6 cv
cp
2732.02 1785.56 mo
2720.56 1776.28 2716.52 1764.26 2722.42 1756.98 cv
2728.31 1749.7 2740.91 1751.15 2752.37 1760.43 cv
2763.83 1769.72 2767.87 1781.74 2761.97 1789.02 cv
2756.08 1796.29 2743.48 1794.85 2732.02 1785.56 cv
cp
2695.86 1733.17 mo
2692.42 1730.38 2689.34 1729.08 2687.33 1728.57 cv
2688.25 1730.43 2690.16 1733.17 2693.6 1735.96 cv
2697.04 1738.74 2700.12 1740.04 2702.12 1740.55 cv
2701.21 1738.69 2699.3 1735.95 2695.86 1733.17 cv
cp
2684.55 1747.13 mo
2673.09 1737.85 2669.05 1725.83 2674.95 1718.55 cv
2680.84 1711.27 2693.44 1712.72 2704.9 1722 cv
2716.36 1731.28 2720.4 1743.3 2714.5 1750.58 cv
2708.61 1757.86 2696.01 1756.41 2684.55 1747.13 cv
cp
2648.39 1694.73 mo
2644.95 1691.95 2641.87 1690.64 2639.86 1690.13 cv
2640.78 1691.99 2642.69 1694.74 2646.13 1697.52 cv
2649.57 1700.31 2652.65 1701.61 2654.66 1702.12 cv
2653.74 1700.26 2651.83 1697.51 2648.39 1694.73 cv
cp
2637.09 1708.69 mo
2625.63 1699.41 2621.59 1687.39 2627.48 1680.11 cv
2633.38 1672.83 2645.98 1674.28 2657.44 1683.56 cv
2668.9 1692.84 2672.94 1704.86 2667.04 1712.14 cv
2661.14 1719.42 2648.55 1717.97 2637.09 1708.69 cv
cp
2600.93 1656.29 mo
2597.49 1653.51 2594.41 1652.2 2592.4 1651.69 cv
2593.31 1653.55 2595.23 1656.3 2598.67 1659.08 cv
2602.11 1661.87 2605.19 1663.17 2607.19 1663.68 cv
2606.28 1661.82 2604.36 1659.08 2600.93 1656.29 cv
cp
2589.62 1670.25 mo
2578.16 1660.97 2574.12 1648.95 2580.02 1641.67 cv
2585.91 1634.39 2598.51 1635.84 2609.97 1645.12 cv
2621.43 1654.4 2625.47 1666.42 2619.57 1673.7 cv
2613.68 1680.98 2601.08 1679.53 2589.62 1670.25 cv
cp
2698.11 1827.45 mo
2701.54 1830.23 2704.63 1831.53 2706.64 1832.04 cv
2705.72 1830.18 2703.8 1827.44 2700.37 1824.65 cv
2696.93 1821.87 2693.84 1820.57 2691.83 1820.06 cv
2692.75 1821.92 2694.67 1824.66 2698.11 1827.45 cv
cp
2709.41 1813.49 mo
2720.87 1822.77 2724.91 1834.79 2719.01 1842.06 cv
2713.12 1849.34 2700.52 1847.9 2689.06 1838.61 cv
2677.6 1829.33 2673.56 1817.31 2679.45 1810.03 cv
2685.35 1802.75 2697.95 1804.21 2709.41 1813.49 cv
cp
2650.64 1789.01 mo
2654.08 1791.79 2657.16 1793.09 2659.17 1793.6 cv
2658.25 1791.75 2656.34 1789 2652.9 1786.22 cv
2649.46 1783.43 2646.38 1782.13 2644.37 1781.62 cv
2645.28 1783.48 2647.2 1786.22 2650.64 1789.01 cv
cp
2661.94 1775.05 mo
2673.4 1784.33 2677.44 1796.35 2671.55 1803.63 cv
2665.65 1810.91 2653.05 1809.46 2641.6 1800.18 cv
2630.13 1790.9 2626.1 1778.88 2631.99 1771.6 cv
2637.89 1764.32 2650.48 1765.77 2661.94 1775.05 cv
cp
2603.17 1750.57 mo
2606.61 1753.35 2609.69 1754.66 2611.7 1755.17 cv
2610.78 1753.31 2608.87 1750.56 2605.44 1747.78 cv
2602 1745 2598.91 1743.69 2596.9 1743.18 cv
2597.82 1745.04 2599.73 1747.79 2603.17 1750.57 cv
cp
2614.48 1736.61 mo
2625.94 1745.89 2629.98 1757.91 2624.08 1765.19 cv
2618.19 1772.47 2605.59 1771.02 2594.13 1761.74 cv
2582.67 1752.46 2578.63 1740.44 2584.52 1733.16 cv
2590.42 1725.88 2603.02 1727.33 2614.48 1736.61 cv
cp
2555.71 1712.13 mo
2559.15 1714.92 2562.23 1716.22 2564.23 1716.73 cv
2563.32 1714.87 2561.41 1712.13 2557.97 1709.34 cv
2554.53 1706.56 2551.44 1705.26 2549.44 1704.74 cv
2550.35 1706.6 2552.27 1709.35 2555.71 1712.13 cv
cp
2567.01 1698.17 mo
2578.47 1707.45 2582.51 1719.47 2576.61 1726.75 cv
2570.72 1734.03 2558.12 1732.58 2546.66 1723.3 cv
2535.2 1714.02 2531.16 1702 2537.06 1694.72 cv
2542.95 1687.44 2555.55 1688.89 2567.01 1698.17 cv
cp
2832.95 1787.93 mo
2832.96 1786.17 2832.13 1784.48 2830.67 1783.3 cv
2801.46 1759.65 li
2767.38 1732.05 li
2633.93 1623.99 li
2599.85 1596.39 li
2570.64 1572.73 li
2569.18 1571.55 2567.35 1571.09 2565.63 1571.47 cv
2564.78 1571.66 2563.23 1572.23 2562.38 1573.99 cv
2500.02 1701.82 li
2498.95 1704.02 2499.7 1706.85 2501.81 1708.56 cv
2712.12 1878.87 li
2714.23 1880.57 2717.16 1880.72 2719.09 1879.21 cv
2831.15 1791.65 li
2832.69 1790.45 2832.94 1788.81 2832.95 1787.93 cv
cp
2813.42 1722.04 mo
2813.63 1721.78 2813.59 1721.4 2813.33 1721.2 cv
2802.52 1712.44 li
2802.26 1712.23 2801.89 1712.27 2801.68 1712.53 cv
2787.59 1729.92 li
2799.34 1739.43 li
2813.42 1722.04 li
cp
2645.9 1586.38 mo
2646.1 1586.12 2646.06 1585.74 2645.8 1585.53 cv
2634.99 1576.78 li
2634.73 1576.57 2634.36 1576.61 2634.15 1576.87 cv
2620.06 1594.26 li
2631.81 1603.77 li
2645.9 1586.38 li
cp
2463.36 1739.83 mo
2461.7 1741.89 2462.02 1744.91 2464.07 1746.57 cv
2525.03 1795.94 li
2533.7 1785.23 li
2539.93 1777.54 2551.27 1776.35 2558.96 1782.58 cv
2628.3 1838.73 li
2636 1844.96 2637.19 1856.3 2630.96 1863.99 cv
2622.29 1874.69 li
2682.79 1923.68 li
2684.84 1925.35 2687.86 1925.03 2689.52 1922.98 cv
2707.99 1900.17 li
2709.65 1898.12 2709.33 1895.1 2707.28 1893.44 cv
2703.08 1890.03 li
2492.77 1719.73 li
2488.56 1716.32 li
2486.51 1714.66 2483.49 1714.98 2481.83 1717.03 cv
2463.36 1739.83 li
cp
2611.12 1865.65 mo
2619.79 1854.95 li
2621.03 1853.41 2620.8 1851.14 2619.26 1849.9 cv
2549.92 1793.75 li
2548.38 1792.5 2546.11 1792.74 2544.87 1794.28 cv
2536.2 1804.98 li
2611.12 1865.65 li
cp
2453.27 1840.3 mo
2499.96 1878.11 2546.66 1915.93 2593.35 1953.74 cv
2607.04 1936.83 2620.74 1919.93 2634.43 1903.02 cv
2587.73 1865.2 2541.04 1827.39 2494.34 1789.58 cv
2480.65 1806.49 2466.96 1823.39 2453.27 1840.3 cv
cp
2840.01 1802.97 mo
2727.93 1890.54 li
2726.39 1891.74 2724.69 1892.63 2722.94 1893.3 cv
2724.05 1898.73 2722.91 1904.58 2719.16 1909.22 cv
2700.69 1932.02 li
2694.04 1940.23 2681.95 1941.5 2673.74 1934.85 cv
2645.6 1912.06 li
2630.4 1930.83 2615.2 1949.6 2600 1968.37 cv
2598.67 1970.01 2597.06 1970.77 2595.44 1970.93 cv
2595.34 1970.96 2595.22 1970.96 2595.11 1970.98 cv
2595.05 1970.98 2594.99 1970.99 2594.92 1971 cv
2593.29 1971.18 2591.54 1970.77 2589.89 1969.43 cv
2539.47 1928.6 2489.06 1887.78 2438.64 1846.95 cv
2435.62 1844.5 2435.12 1839.87 2437.58 1836.84 cv
2452.77 1818.07 2467.97 1799.3 2483.17 1780.53 cv
2472.24 1771.68 2461.3 1762.82 2450.36 1753.96 cv
2440.35 1745.86 2423.7 1736.95 2417.06 1725.6 cv
2409.97 1713.47 2425.9 1700.46 2432.86 1691.87 cv
2443.07 1679.26 2453.28 1666.65 2463.5 1654.03 cv
2469.32 1646.85 2480.49 1655.88 2474.67 1663.08 cv
2466.27 1673.45 2457.86 1683.83 2449.46 1694.2 cv
2444.28 1700.6 2439.11 1706.99 2433.93 1713.38 cv
2432.89 1714.67 2430.16 1716.97 2429.64 1718.63 cv
2429.68 1718.69 2429.7 1718.7 2429.74 1718.77 cv
2431.95 1722.69 2439.41 1726.6 2442.87 1729.4 cv
2445.15 1731.25 2447.43 1733.1 2449.71 1734.94 cv
2450.36 1733.49 2451.14 1732.08 2452.19 1730.79 cv
2470.66 1707.99 li
2474.41 1703.35 2479.9 1701.02 2485.44 1700.98 cv
2485.74 1699.12 2486.25 1697.28 2487.1 1695.52 cv
2549.46 1567.69 li
2552.02 1562.45 2556.78 1558.71 2562.52 1557.44 cv
2568.54 1556.11 2574.8 1557.61 2579.68 1561.56 cv
2608.9 1585.22 li
2622.98 1567.82 li
2628.18 1561.41 2637.62 1560.42 2644.03 1565.61 cv
2654.85 1574.37 li
2661.26 1579.56 2662.26 1589.01 2657.06 1595.42 cv
2642.98 1612.82 li
2776.42 1720.88 li
2790.51 1703.48 li
2795.7 1697.07 2805.15 1696.08 2811.56 1701.27 cv
2822.37 1710.03 li
2828.79 1715.22 2829.78 1724.67 2824.59 1731.08 cv
2810.51 1748.48 li
2839.71 1772.13 li
2844.6 1776.09 2847.37 1781.89 2847.31 1788.06 cv
2847.27 1793.94 2844.6 1799.38 2840.01 1802.97 cv
cp
f
294.581 1817.18 mo
291.143 1814.39 288.059 1813.09 286.052 1812.58 cv
286.966 1814.44 288.884 1817.18 292.322 1819.97 cv
295.759 1822.75 298.841 1824.05 300.848 1824.56 cv
299.934 1822.71 298.021 1819.96 294.581 1817.18 cv
cp
283.276 1831.14 mo
271.815 1821.86 267.778 1809.84 273.672 1802.56 cv
279.567 1795.28 292.165 1796.73 303.626 1806.01 cv
315.087 1815.29 319.125 1827.31 313.23 1834.59 cv
307.335 1841.87 294.735 1840.42 283.276 1831.14 cv
cp
247.8 1779.3 mo
244.363 1776.51 241.278 1775.21 239.27 1774.7 cv
240.186 1776.56 242.102 1779.3 245.539 1782.09 cv
248.979 1784.87 252.061 1786.17 254.067 1786.68 cv
253.154 1784.82 251.238 1782.08 247.8 1779.3 cv
cp
266.447 1796.71 mo
260.553 1803.99 247.955 1802.54 236.494 1793.26 cv
225.035 1783.97 220.995 1771.95 226.892 1764.67 cv
232.787 1757.39 245.385 1758.85 256.846 1768.13 cv
268.304 1777.4 272.342 1789.43 266.447 1796.71 cv
cp
200.334 1740.86 mo
196.896 1738.07 193.812 1736.77 191.806 1736.26 cv
192.719 1738.12 194.635 1740.86 198.075 1743.65 cv
201.513 1746.43 204.595 1747.73 206.601 1748.24 cv
205.688 1746.38 203.774 1743.64 200.334 1740.86 cv
cp
218.981 1758.27 mo
213.086 1765.55 200.491 1764.1 189.03 1754.82 cv
177.569 1745.54 173.531 1733.52 179.426 1726.24 cv
185.32 1718.96 197.918 1720.41 209.379 1729.69 cv
220.84 1738.97 224.876 1750.99 218.981 1758.27 cv
cp
152.868 1702.42 mo
149.43 1699.64 146.346 1698.33 144.337 1697.82 cv
145.253 1699.68 147.169 1702.43 150.606 1705.21 cv
154.046 1708 157.128 1709.3 159.135 1709.81 cv
158.221 1707.95 156.308 1705.2 152.868 1702.42 cv
cp
171.515 1719.83 mo
165.62 1727.11 153.022 1725.66 141.563 1716.38 cv
130.103 1707.1 126.065 1695.08 131.959 1687.8 cv
137.854 1680.52 150.452 1681.97 161.913 1691.25 cv
173.372 1700.53 177.412 1712.55 171.515 1719.83 cv
cp
105.401 1663.98 mo
101.964 1661.2 98.8794 1659.89 96.8731 1659.39 cv
97.7866 1661.24 99.7027 1663.99 103.143 1666.77 cv
106.583 1669.56 109.662 1670.86 111.671 1671.37 cv
110.755 1669.51 108.841 1666.77 105.401 1663.98 cv
cp
124.048 1681.39 mo
118.154 1688.68 105.558 1687.22 94.0972 1677.94 cv
82.6363 1668.66 78.5987 1656.64 84.4932 1649.36 cv
90.3877 1642.08 102.988 1643.53 114.447 1652.81 cv
125.908 1662.09 129.943 1674.11 124.048 1681.39 cv
cp
293.326 1771.6 mo
289.886 1768.82 286.802 1767.52 284.793 1767.01 cv
285.709 1768.87 287.625 1771.61 291.065 1774.4 cv
294.502 1777.18 297.585 1778.48 299.593 1778.99 cv
298.677 1777.13 296.764 1774.39 293.326 1771.6 cv
cp
282.02 1785.56 mo
270.561 1776.28 266.519 1764.26 272.416 1756.98 cv
278.31 1749.7 290.911 1751.15 302.369 1760.43 cv
313.83 1769.72 317.868 1781.74 311.971 1789.02 cv
306.076 1796.29 293.48 1794.85 282.02 1785.56 cv
cp
245.857 1733.17 mo
242.42 1730.38 239.335 1729.08 237.329 1728.57 cv
238.245 1730.43 240.161 1733.17 243.599 1735.96 cv
247.036 1738.74 250.118 1740.04 252.125 1740.55 cv
251.211 1738.69 249.297 1735.95 245.857 1733.17 cv
cp
234.553 1747.13 mo
223.092 1737.85 219.055 1725.83 224.949 1718.55 cv
230.844 1711.27 243.442 1712.72 254.903 1722 cv
266.364 1731.28 270.399 1743.3 264.504 1750.58 cv
258.61 1757.86 246.014 1756.41 234.553 1747.13 cv
cp
198.394 1694.73 mo
194.954 1691.95 191.869 1690.64 189.86 1690.13 cv
190.776 1691.99 192.695 1694.74 196.132 1697.52 cv
199.57 1700.31 202.652 1701.61 204.661 1702.12 cv
203.745 1700.26 201.831 1697.51 198.394 1694.73 cv
cp
187.089 1708.69 mo
175.628 1699.41 171.588 1687.39 177.483 1680.11 cv
183.377 1672.83 195.978 1674.28 207.439 1683.56 cv
218.897 1692.84 222.935 1704.86 217.041 1712.14 cv
211.144 1719.42 198.548 1717.97 187.089 1708.69 cv
cp
150.927 1656.29 mo
147.49 1653.51 144.405 1652.2 142.396 1651.69 cv
143.313 1653.55 145.229 1656.3 148.666 1659.08 cv
152.106 1661.87 155.186 1663.17 157.194 1663.68 cv
156.278 1661.82 154.365 1659.08 150.927 1656.29 cv
cp
139.621 1670.25 mo
128.162 1660.97 124.122 1648.95 130.017 1641.67 cv
135.914 1634.39 148.512 1635.84 159.97 1645.12 cv
171.431 1654.4 175.466 1666.42 169.572 1673.7 cv
163.677 1680.98 151.082 1679.53 139.621 1670.25 cv
cp
248.106 1827.45 mo
251.544 1830.23 254.626 1831.53 256.635 1832.04 cv
255.716 1830.18 253.803 1827.44 250.365 1824.65 cv
246.928 1821.87 243.841 1820.57 241.834 1820.06 cv
242.751 1821.92 244.667 1824.66 248.106 1827.45 cv
cp
259.411 1813.49 mo
270.87 1822.77 274.907 1834.79 269.012 1842.06 cv
263.118 1849.34 250.522 1847.9 239.061 1838.61 cv
227.6 1829.33 223.56 1817.31 229.455 1810.03 cv
235.352 1802.75 247.95 1804.21 259.411 1813.49 cv
cp
200.64 1789.01 mo
204.078 1791.79 207.157 1793.09 209.167 1793.6 cv
208.25 1791.75 206.339 1789 202.899 1786.22 cv
199.462 1783.43 196.377 1782.13 194.371 1781.62 cv
195.285 1783.48 197.203 1786.22 200.64 1789.01 cv
cp
211.942 1775.05 mo
223.403 1784.33 227.441 1796.35 221.546 1803.63 cv
215.651 1810.91 203.054 1809.46 191.595 1800.18 cv
180.134 1790.9 176.096 1778.88 181.991 1771.6 cv
187.886 1764.32 200.483 1765.77 211.942 1775.05 cv
cp
153.174 1750.57 mo
156.611 1753.35 159.693 1754.66 161.703 1755.17 cv
160.784 1753.31 158.873 1750.56 155.436 1747.78 cv
151.996 1745 148.909 1743.69 146.902 1743.18 cv
147.818 1745.04 149.734 1747.79 153.174 1750.57 cv
cp
164.479 1736.61 mo
175.937 1745.89 179.977 1757.91 174.08 1765.19 cv
168.185 1772.47 155.59 1771.02 144.128 1761.74 cv
132.67 1752.46 128.627 1740.44 134.524 1733.16 cv
140.419 1725.88 153.017 1727.33 164.479 1736.61 cv
cp
105.708 1712.13 mo
109.145 1714.92 112.227 1716.22 114.234 1716.73 cv
113.317 1714.87 111.406 1712.13 107.967 1709.34 cv
104.529 1706.56 101.445 1705.26 99.438 1704.74 cv
100.355 1706.6 102.271 1709.35 105.708 1712.13 cv
cp
117.01 1698.17 mo
128.471 1707.45 132.508 1719.47 126.614 1726.75 cv
120.719 1734.03 108.124 1732.58 96.6621 1723.3 cv
85.2012 1714.02 81.1636 1702 87.0581 1694.72 cv
92.9531 1687.44 105.551 1688.89 117.01 1698.17 cv
cp
382.947 1787.93 mo
382.962 1786.17 382.131 1784.48 380.671 1783.3 cv
351.46 1759.65 li
317.378 1732.05 li
183.931 1623.99 li
149.852 1596.39 li
120.638 1572.73 li
119.175 1571.55 117.355 1571.09 115.633 1571.47 cv
114.783 1571.66 113.229 1572.23 112.376 1573.99 cv
50.0239 1701.82 li
48.9536 1704.02 49.7031 1706.85 51.8101 1708.56 cv
262.123 1878.87 li
264.23 1880.57 267.16 1880.72 269.086 1879.21 cv
381.154 1791.65 li
382.695 1790.45 382.935 1788.81 382.947 1787.93 cv
cp
363.423 1722.04 mo
363.631 1721.78 363.587 1721.4 363.33 1721.2 cv
352.518 1712.44 li
352.261 1712.23 351.889 1712.27 351.68 1712.53 cv
337.593 1729.92 li
349.338 1739.43 li
363.423 1722.04 li
cp
195.897 1586.38 mo
196.105 1586.12 196.061 1585.74 195.804 1585.53 cv
184.992 1576.78 li
184.735 1576.57 184.36 1576.61 184.152 1576.87 cv
170.064 1594.26 li
181.81 1603.77 li
195.897 1586.38 li
cp
13.3623 1739.83 mo
11.7012 1741.89 12.0196 1744.91 14.0728 1746.57 cv
75.0337 1795.94 li
83.6992 1785.23 li
89.9322 1777.54 101.266 1776.35 108.964 1782.58 cv
178.301 1838.73 li
185.999 1844.96 187.19 1856.3 180.957 1863.99 cv
172.292 1874.69 li
232.787 1923.68 li
234.84 1925.35 237.863 1925.03 239.524 1922.98 cv
257.99 1900.17 li
259.651 1898.12 259.333 1895.1 257.282 1893.44 cv
253.078 1890.03 li
42.7671 1719.73 li
38.5655 1716.32 li
36.5122 1714.66 33.4893 1714.98 31.8281 1717.03 cv
13.3623 1739.83 li
cp
161.122 1865.65 mo
169.788 1854.95 li
171.035 1853.41 170.797 1851.14 169.258 1849.9 cv
99.9185 1793.75 li
98.3799 1792.5 96.1133 1792.74 94.8662 1794.28 cv
86.2007 1804.98 li
161.122 1865.65 li
cp
3.26565 1840.3 mo
49.9629 1878.11 96.6572 1915.93 143.352 1953.74 cv
157.042 1936.83 170.735 1919.93 184.429 1903.02 cv
137.731 1865.2 91.0371 1827.39 44.3423 1789.58 cv
30.6494 1806.49 16.959 1823.39 3.26565 1840.3 cv
cp
390.006 1802.97 mo
277.931 1890.54 li
276.387 1891.74 274.691 1892.63 272.938 1893.3 cv
274.055 1898.73 272.908 1904.58 269.157 1909.22 cv
250.691 1932.02 li
244.044 1940.23 231.951 1941.5 223.744 1934.85 cv
195.596 1912.06 li
180.396 1930.83 165.196 1949.6 149.996 1968.37 cv
148.671 1970.01 147.063 1970.77 145.444 1970.93 cv
145.336 1970.96 145.224 1970.96 145.113 1970.98 cv
145.05 1970.98 144.986 1970.99 144.922 1971 cv
143.293 1971.18 141.544 1970.77 139.893 1969.43 cv
89.4741 1928.6 39.0557 1887.78 -11.3633 1846.95 cv
-14.3813 1844.5 -14.8764 1839.87 -12.4238 1836.84 cv
2.77346 1818.07 17.9732 1799.3 33.1729 1780.53 cv
22.2363 1771.68 11.2993 1762.82 .362815 1753.96 cv
-9.65037 1745.86 -26.2983 1736.95 -32.9355 1725.6 cv
-40.0283 1713.47 -24.0957 1700.46 -17.1426 1691.87 cv
-6.93113 1679.26 3.28322 1666.65 13.4971 1654.03 cv
19.3159 1646.85 30.4951 1655.88 24.6665 1663.08 cv
16.2656 1673.45 7.86184 1683.83 -.539041 1694.2 cv
-5.7158 1700.6 -10.8926 1706.99 -16.0722 1713.38 cv
-17.1108 1714.67 -19.8403 1716.97 -20.3594 1718.63 cv
-20.3227 1718.69 -20.2983 1718.7 -20.2593 1718.77 cv
-18.0493 1722.69 -10.5888 1726.6 -7.12937 1729.4 cv
-4.85105 1731.25 -2.57273 1733.1 -.293924 1734.94 cv
.365256 1733.49 1.14406 1732.08 2.19289 1730.79 cv
20.6582 1707.99 li
24.4092 1703.35 29.8975 1701.02 35.4395 1700.98 cv
35.7359 1699.12 36.2451 1697.28 37.1055 1695.52 cv
99.4575 1567.69 li
102.016 1562.45 106.778 1558.71 112.523 1557.44 cv
118.543 1556.11 124.8 1557.61 129.684 1561.56 cv
158.895 1585.22 li
172.982 1567.82 li
178.176 1561.41 187.621 1560.42 194.035 1565.61 cv
204.847 1574.37 li
211.264 1579.56 212.256 1589.01 207.064 1595.42 cv
192.977 1612.82 li
326.423 1720.88 li
340.511 1703.48 li
345.702 1697.07 355.147 1696.08 361.561 1701.27 cv
372.373 1710.03 li
378.792 1715.22 379.784 1724.67 374.59 1731.08 cv
360.505 1748.48 li
389.714 1772.13 li
394.6 1776.09 397.368 1781.89 397.314 1788.06 cv
397.268 1793.94 394.6 1799.38 390.006 1802.97 cv
cp
f
1677.9 1427.22 mo
1682.51 1423.99 1688.85 1425.11 1692.08 1429.72 cv
1695.3 1434.33 1694.18 1440.67 1689.58 1443.9 cv
1684.97 1447.12 1678.63 1446 1675.4 1441.4 cv
1672.18 1436.79 1673.3 1430.44 1677.9 1427.22 cv
cp
1698.51 1456.65 mo
1703.11 1453.42 1709.46 1454.55 1712.68 1459.15 cv
1715.91 1463.75 1714.79 1470.1 1710.19 1473.33 cv
1705.58 1476.55 1699.23 1475.43 1696.01 1470.83 cv
1692.78 1466.22 1693.9 1459.87 1698.51 1456.65 cv
cp
1719.12 1486.08 mo
1723.72 1482.86 1730.07 1483.97 1733.29 1488.58 cv
1736.52 1493.19 1735.4 1499.53 1730.79 1502.76 cv
1726.19 1505.98 1719.84 1504.86 1716.61 1500.26 cv
1713.39 1495.65 1714.51 1489.3 1719.12 1486.08 cv
cp
1739.72 1515.51 mo
1744.33 1512.28 1750.67 1513.4 1753.9 1518.01 cv
1757.13 1522.62 1756.01 1528.96 1751.4 1532.19 cv
1746.8 1535.41 1740.45 1534.3 1737.22 1529.69 cv
1734 1525.08 1735.12 1518.74 1739.72 1515.51 cv
cp
1760.33 1544.94 mo
1764.94 1541.72 1771.28 1542.84 1774.51 1547.44 cv
1777.73 1552.05 1776.61 1558.39 1772.01 1561.62 cv
1767.4 1564.84 1761.05 1563.72 1757.83 1559.12 cv
1754.6 1554.51 1755.73 1548.16 1760.33 1544.94 cv
cp
1780.94 1574.37 mo
1785.54 1571.15 1791.89 1572.27 1795.11 1576.87 cv
1798.34 1581.47 1797.22 1587.83 1792.62 1591.05 cv
1788.01 1594.27 1781.66 1593.15 1778.44 1588.55 cv
1775.21 1583.94 1776.33 1577.6 1780.94 1574.37 cv
cp
1801.54 1603.8 mo
1806.15 1600.58 1812.5 1601.7 1815.72 1606.3 cv
1818.95 1610.91 1817.83 1617.25 1813.22 1620.48 cv
1808.62 1623.7 1802.27 1622.58 1799.04 1617.98 cv
1795.82 1613.37 1796.94 1607.02 1801.54 1603.8 cv
cp
1681.78 1462.52 mo
1685 1467.12 1683.88 1473.47 1679.28 1476.69 cv
1674.68 1479.92 1668.33 1478.8 1665.11 1474.19 cv
1661.88 1469.59 1663 1463.24 1667.6 1460.01 cv
1672.21 1456.79 1678.55 1457.91 1681.78 1462.52 cv
cp
1702.39 1491.94 mo
1705.61 1496.55 1704.49 1502.9 1699.89 1506.12 cv
1695.28 1509.35 1688.93 1508.22 1685.71 1503.62 cv
1682.49 1499.02 1683.61 1492.67 1688.21 1489.45 cv
1692.82 1486.22 1699.16 1487.34 1702.39 1491.94 cv
cp
1722.99 1521.37 mo
1726.22 1525.98 1725.1 1532.33 1720.5 1535.55 cv
1715.89 1538.78 1709.54 1537.66 1706.32 1533.05 cv
1703.1 1528.45 1704.21 1522.1 1708.82 1518.87 cv
1713.42 1515.65 1719.77 1516.77 1722.99 1521.37 cv
cp
1743.6 1550.81 mo
1746.83 1555.41 1745.71 1561.76 1741.1 1564.98 cv
1736.5 1568.21 1730.15 1567.09 1726.93 1562.48 cv
1723.7 1557.88 1724.82 1551.53 1729.43 1548.3 cv
1734.03 1545.08 1740.38 1546.2 1743.6 1550.81 cv
cp
1764.21 1580.24 mo
1767.44 1584.84 1766.32 1591.19 1761.71 1594.41 cv
1757.11 1597.64 1750.76 1596.52 1747.53 1591.91 cv
1744.31 1587.31 1745.43 1580.96 1750.03 1577.73 cv
1754.64 1574.51 1760.98 1575.63 1764.21 1580.24 cv
cp
1784.82 1609.67 mo
1788.04 1614.27 1786.92 1620.62 1782.32 1623.84 cv
1777.71 1627.07 1771.37 1625.95 1768.14 1621.34 cv
1764.92 1616.74 1766.04 1610.39 1770.64 1607.17 cv
1775.25 1603.94 1781.59 1605.06 1784.82 1609.67 cv
cp
1805.42 1639.1 mo
1808.65 1643.7 1807.53 1650.05 1802.93 1653.27 cv
1798.32 1656.5 1791.97 1655.38 1788.75 1650.78 cv
1785.52 1646.17 1786.64 1639.82 1791.25 1636.6 cv
1795.85 1633.37 1802.2 1634.49 1805.42 1639.1 cv
cp
1726.42 1431.26 mo
1729.64 1435.87 1728.52 1442.21 1723.92 1445.44 cv
1719.31 1448.66 1712.96 1447.54 1709.74 1442.94 cv
1706.51 1438.33 1707.64 1431.98 1712.24 1428.76 cv
1716.84 1425.54 1723.19 1426.65 1726.42 1431.26 cv
cp
1747.02 1460.69 mo
1750.25 1465.29 1749.13 1471.64 1744.52 1474.87 cv
1739.92 1478.09 1733.57 1476.97 1730.35 1472.37 cv
1727.12 1467.76 1728.24 1461.41 1732.85 1458.19 cv
1737.45 1454.96 1743.8 1456.08 1747.02 1460.69 cv
cp
1767.63 1490.12 mo
1770.85 1494.73 1769.74 1501.07 1765.13 1504.3 cv
1760.53 1507.52 1754.18 1506.4 1750.95 1501.8 cv
1747.73 1497.19 1748.85 1490.84 1753.46 1487.62 cv
1758.06 1484.4 1764.41 1485.52 1767.63 1490.12 cv
cp
1788.24 1519.55 mo
1791.46 1524.15 1790.35 1530.5 1785.74 1533.73 cv
1781.14 1536.95 1774.78 1535.83 1771.56 1531.23 cv
1768.34 1526.62 1769.46 1520.27 1774.06 1517.05 cv
1778.67 1513.82 1785.01 1514.95 1788.24 1519.55 cv
cp
1808.85 1548.98 mo
1812.07 1553.59 1810.95 1559.93 1806.35 1563.16 cv
1801.74 1566.38 1795.39 1565.26 1792.17 1560.66 cv
1788.95 1556.05 1790.07 1549.7 1794.67 1546.48 cv
1799.27 1543.26 1805.62 1544.38 1808.85 1548.98 cv
cp
1829.45 1578.41 mo
1832.68 1583.02 1831.56 1589.36 1826.96 1592.59 cv
1822.35 1595.81 1816 1594.7 1812.78 1590.09 cv
1809.55 1585.48 1810.67 1579.14 1815.28 1575.91 cv
1819.88 1572.69 1826.23 1573.8 1829.45 1578.41 cv
cp
1850.06 1607.84 mo
1853.29 1612.45 1852.17 1618.79 1847.56 1622.02 cv
1842.96 1625.24 1836.61 1624.12 1833.38 1619.52 cv
1830.16 1614.91 1831.28 1608.56 1835.89 1605.34 cv
1840.49 1602.12 1846.84 1603.24 1850.06 1607.84 cv
cp
1694.8 1363.66 mo
1695.21 1363.38 1695.77 1363.48 1696.06 1363.89 cv
1878.94 1625.08 li
1879.23 1625.49 1879.13 1626.05 1878.73 1626.33 cv
1796.32 1684.03 li
1795.92 1684.32 1795.35 1684.22 1795.07 1683.81 cv
1612.18 1422.62 li
1611.89 1422.21 1611.99 1421.65 1612.4 1421.37 cv
1694.8 1363.66 li
cp
1686.56 1351.89 mo
1604.16 1409.6 li
1597.26 1414.42 1595.58 1423.96 1600.41 1430.86 cv
1783.3 1692.05 li
1788.13 1698.95 1797.66 1700.63 1804.56 1695.8 cv
1886.97 1638.1 li
1893.86 1633.27 1895.55 1623.74 1890.72 1616.84 cv
1707.83 1355.64 li
1703 1348.74 1693.46 1347.06 1686.56 1351.89 cv
cp
1695.08 1330.39 mo
1696.5 1329.4 1698.47 1329.74 1699.46 1331.16 cv
1704.19 1337.91 li
1906.14 1626.33 li
1910.86 1633.07 li
1911.85 1634.49 1911.5 1636.45 1910.08 1637.45 cv
1764.19 1739.6 li
1762.77 1740.6 1760.81 1740.25 1759.81 1738.83 cv
1548.42 1436.93 li
1547.42 1435.51 1547.77 1433.54 1549.19 1432.55 cv
1695.08 1330.39 li
cp
1909.66 1606.31 mo
1724.2 1341.44 li
1772.02 1307.95 li
1772.83 1307.38 1773.96 1307.58 1774.53 1308.39 cv
1800.28 1345.18 li
1780.8 1358.82 li
1774.72 1363.08 1773.23 1371.51 1777.49 1377.59 cv
1891.18 1539.95 li
1895.44 1546.04 1903.86 1547.52 1909.95 1543.27 cv
1929.43 1529.62 li
1957.93 1570.33 li
1958.5 1571.13 1958.3 1572.26 1957.49 1572.83 cv
1909.66 1606.31 li
cp
1902.44 1530.98 mo
1789.78 1370.08 li
1820.3 1348.71 li
1872.04 1312.48 li
1984.7 1473.38 li
1932.96 1509.61 li
1902.44 1530.98 li
cp
1686.84 1318.62 mo
1540.95 1420.77 li
1533.03 1426.32 1531.11 1437.26 1536.65 1445.17 cv
1748.04 1747.07 li
1753.58 1754.99 1764.52 1756.92 1772.44 1751.38 cv
1918.33 1649.22 li
1926.24 1643.68 1928.17 1632.74 1922.63 1624.83 cv
1917.91 1618.08 li
1965.73 1584.6 li
1973.03 1579.48 1974.81 1569.38 1969.7 1562.08 cv
1941.2 1521.38 li
1993.68 1484.64 li
1999.76 1480.38 2001.25 1471.95 1996.99 1465.87 cv
1883.3 1303.5 li
1879.03 1297.42 1870.61 1295.93 1864.53 1300.2 cv
1812.05 1336.94 li
1786.3 1300.15 li
1781.18 1292.85 1771.08 1291.07 1763.78 1296.18 cv
1715.96 1329.67 li
1711.23 1322.92 li
1705.69 1315.01 1694.75 1313.08 1686.84 1318.62 cv
cp
1661.17 1433.09 mo
1664.4 1437.69 1663.28 1444.04 1658.67 1447.26 cv
1654.07 1450.49 1647.72 1449.37 1644.5 1444.76 cv
1641.27 1440.15 1642.39 1433.81 1647 1430.58 cv
1651.6 1427.36 1657.95 1428.48 1661.17 1433.09 cv
cp
1691.63 1399.33 mo
1687.03 1402.55 1685.91 1408.9 1689.13 1413.51 cv
1692.36 1418.11 1698.71 1419.23 1703.31 1416 cv
1707.91 1412.78 1709.03 1406.43 1705.81 1401.83 cv
1702.58 1397.22 1696.24 1396.1 1691.63 1399.33 cv
cp
f
896.426 1472.2 mo
888.326 1483.77 li
896.788 1489.87 905.255 1495.93 913.759 1501.88 cv
913.762 1501.88 913.759 1501.88 913.762 1501.89 cv
913.896 1501.98 914.036 1502.08 914.168 1502.18 cv
922.415 1490.4 li
896.426 1472.2 li
cp
720.415 1411.51 mo
705.833 1432.33 691.25 1453.16 676.668 1473.98 cv
638.852 1527.99 601.034 1582 563.218 1636.01 cv
560.881 1639.34 555.802 1644.2 554.692 1648.18 cv
553.318 1653.11 556.091 1665.02 559.805 1669.22 cv
562.231 1671.96 566.731 1674.07 569.723 1676.17 cv
597.001 1695.27 624.277 1714.36 651.553 1733.46 cv
666.643 1744.03 681.729 1754.59 696.817 1765.16 cv
696.829 1765.17 696.844 1765.18 696.861 1765.19 cv
718.612 1780.42 li
718.614 1780.42 718.614 1780.42 718.617 1780.42 cv
731.006 1786.45 740.743 1775.55 748.343 1764.15 cv
751.939 1754.2 761.364 1744.2 766.963 1736.21 cv
771.252 1730.08 775.542 1723.95 779.83 1717.83 cv
751.361 1692.19 743.822 1649.43 766.715 1616.73 cv
766.833 1616.57 766.965 1616.42 767.083 1616.26 cv
767.195 1616.1 767.281 1615.92 767.396 1615.76 cv
790.294 1583.06 833.046 1575.52 866.883 1593.5 cv
873.841 1583.57 880.799 1573.63 887.757 1563.69 cv
888.377 1562.81 889 1561.92 889.622 1561.03 cv
893.074 1556.1 897.006 1548.48 902.323 1544.42 cv
909.646 1533.54 914.727 1521.48 905.52 1513.66 cv
905.518 1513.66 905.518 1513.66 905.515 1513.65 cv
868.17 1487.51 li
868.17 1487.51 li
833.688 1463.36 799.212 1439.22 764.731 1415.08 cv
750.325 1404.99 734.184 1391.84 720.415 1411.51 cv
cp
857.907 1606.33 mo
830.841 1592.65 797.201 1598.83 778.853 1624.5 cv
761.007 1650.52 766.71 1684.26 788.807 1705.01 cv
811.839 1672.12 834.874 1639.22 857.907 1606.33 cv
cp
782.116 1787.6 mo
790.375 1792.14 790.674 1789.22 796.052 1781.54 cv
798.891 1777.49 801.73 1773.43 804.57 1769.38 cv
799.734 1765.99 794.897 1762.61 790.061 1759.22 cv
786.879 1756.99 786.063 1752.4 788.295 1749.21 cv
825.513 1696.06 862.731 1642.91 899.946 1589.76 cv
902.176 1586.57 906.767 1585.76 909.955 1587.99 cv
914.901 1591.46 919.848 1594.92 924.794 1598.38 cv
931.164 1590.49 940.797 1578.27 937.968 1573.61 cv
931.512 1568.6 916.54 1554.5 910.43 1556.37 cv
907.593 1560.42 904.755 1564.47 901.918 1568.53 cv
892.902 1581.4 883.887 1594.28 874.873 1607.15 cv
874.645 1607.48 874.417 1607.8 874.192 1608.12 cv
868.033 1616.92 861.873 1625.72 855.714 1634.52 cv
836.518 1661.93 817.322 1689.34 798.126 1716.76 cv
797.441 1717.74 796.755 1718.72 796.069 1719.7 cv
795.843 1720.02 795.615 1720.35 795.388 1720.67 cv
788.721 1730.19 782.055 1739.71 775.386 1749.24 cv
773.492 1751.94 771.601 1754.64 769.707 1757.34 cv
767.164 1760.98 764.63 1765.1 761.997 1769.28 cv
761.45 1776.82 775.102 1783.75 782.116 1787.6 cv
cp
818.702 1761.73 mo
834.318 1772.66 849.935 1783.6 865.553 1794.53 cv
900.022 1745.31 934.491 1696.08 968.96 1646.85 cv
953.341 1635.92 937.725 1624.98 922.106 1614.05 cv
917.27 1610.66 912.434 1607.27 907.598 1603.89 cv
873.128 1653.11 838.66 1702.34 804.19 1751.57 cv
809.027 1754.95 813.863 1758.34 818.702 1761.73 cv
cp
710.444 1792.24 mo
709.824 1791.81 li
700.886 1787.22 692.279 1780.4 684.711 1774.56 cv
679.368 1782.2 li
705.355 1800.39 li
710.86 1792.53 li
710.721 1792.44 710.583 1792.34 710.444 1792.24 cv
cp
651.234 1781.14 mo
642.476 1793.64 li
707.222 1838.98 li
715.978 1826.47 li
651.234 1781.14 li
cp
934.927 1497.58 mo
923.265 1514.24 li
927.217 1523.75 924.314 1533.49 918.983 1543.09 cv
929.594 1547.2 940.477 1557.87 947.42 1562.74 cv
947.427 1562.74 947.432 1562.74 947.437 1562.75 cv
947.67 1562.92 947.888 1563.12 948.111 1563.33 cv
948.768 1563.91 949.292 1564.53 949.654 1565.2 cv
959.653 1578.87 946.222 1594.25 936.461 1606.55 cv
952.004 1617.43 967.546 1628.32 983.089 1639.2 cv
984.817 1640.41 985.689 1641.96 985.968 1643.56 cv
985.998 1643.67 986.012 1643.78 986.037 1643.89 cv
986.046 1643.95 986.056 1644.02 986.064 1644.08 cv
986.365 1645.69 986.076 1647.47 984.854 1649.21 cv
947.638 1702.36 910.42 1755.51 873.205 1808.66 cv
870.975 1811.85 866.386 1812.66 863.196 1810.43 cv
847.666 1799.55 832.138 1788.68 816.607 1777.81 cv
810.626 1787.77 803.411 1801.05 793.999 1804.77 cv
781.32 1809.79 762.874 1792.85 754.039 1785.49 cv
753.272 1784.85 752.674 1784.19 752.042 1783.53 cv
749.626 1786.46 747.062 1789.13 744.256 1791.31 cv
738.192 1796.03 731.827 1797.42 725.416 1796.8 cv
716.613 1809.37 li
726.68 1816.42 li
731.817 1820.01 733.069 1827.12 729.473 1832.26 cv
717.279 1849.67 li
713.68 1854.81 706.573 1856.07 701.435 1852.47 cv
631.781 1803.7 li
626.644 1800.1 625.39 1792.99 628.988 1787.85 cv
641.182 1770.44 li
644.779 1765.3 651.889 1764.05 657.026 1767.65 cv
667.083 1774.69 li
673.101 1766.09 li
642.287 1744.52 611.476 1722.94 580.662 1701.37 cv
562.275 1688.49 527.735 1672.46 540.487 1644.4 cv
548.538 1626.68 563.586 1610.43 574.655 1594.62 cv
597.572 1561.89 620.492 1529.16 643.412 1496.43 cv
662.85 1468.67 682.286 1440.91 701.724 1413.15 cv
714.263 1395.24 728.765 1374.33 753.613 1389.75 cv
795.851 1415.95 836.205 1445.99 876.676 1475.36 cv
885.398 1462.9 li
889.534 1456.99 897.702 1455.55 903.611 1459.69 cv
931.715 1479.37 li
937.625 1483.5 939.063 1491.68 934.927 1497.58 cv
cp
760.551 1483.2 mo
757.905 1486.98 758.16 1491.92 761.117 1493.99 cv
764.069 1496.06 768.805 1494.61 771.454 1490.83 cv
774.104 1487.04 773.842 1482.1 770.89 1480.03 cv
767.933 1477.96 763.205 1479.41 760.551 1483.2 cv
cp
783.223 1499.07 mo
775.986 1509.41 762.369 1512.41 752.873 1505.76 cv
743.374 1499.11 741.542 1485.29 748.779 1474.95 cv
756.021 1464.61 769.636 1461.61 779.134 1468.26 cv
788.63 1474.91 790.465 1488.73 783.223 1499.07 cv
cp
730.864 1525.6 mo
728.213 1529.38 728.468 1534.32 731.425 1536.39 cv
734.377 1538.46 739.114 1537.02 741.765 1533.23 cv
744.413 1529.45 744.151 1524.51 741.198 1522.43 cv
738.241 1520.36 733.513 1521.82 730.864 1525.6 cv
cp
749.443 1510.66 mo
758.939 1517.31 760.774 1531.14 753.537 1541.47 cv
746.294 1551.81 732.68 1554.82 723.181 1548.17 cv
713.683 1541.52 711.85 1527.7 719.09 1517.35 cv
726.33 1507.01 739.944 1504.01 749.443 1510.66 cv
cp
700.737 1568.62 mo
698.088 1572.41 698.343 1577.35 701.3 1579.42 cv
704.252 1581.48 708.988 1580.04 711.637 1576.26 cv
714.285 1572.47 714.025 1567.53 711.073 1565.46 cv
708.116 1563.39 703.385 1564.84 700.737 1568.62 cv
cp
719.315 1553.69 mo
728.811 1560.34 730.646 1574.16 723.409 1584.5 cv
716.169 1594.83 702.555 1597.84 693.056 1591.19 cv
683.56 1584.54 681.725 1570.72 688.964 1560.38 cv
696.202 1550.04 709.816 1547.04 719.315 1553.69 cv
cp
670.614 1611.64 mo
667.96 1615.43 668.218 1620.37 671.175 1622.44 cv
674.127 1624.51 678.863 1623.06 681.514 1619.28 cv
684.163 1615.5 683.903 1610.55 680.948 1608.48 cv
677.993 1606.41 673.26 1607.86 670.614 1611.64 cv
cp
689.19 1596.71 mo
698.688 1603.36 700.523 1617.18 693.284 1627.52 cv
686.044 1637.86 672.427 1640.86 662.931 1634.21 cv
653.432 1627.56 651.597 1613.74 658.839 1603.4 cv
666.077 1593.06 679.694 1590.06 689.19 1596.71 cv
cp
640.486 1654.67 mo
637.838 1658.45 638.093 1663.39 641.05 1665.46 cv
644.004 1667.53 648.738 1666.08 651.386 1662.3 cv
654.037 1658.52 653.775 1653.58 650.82 1651.51 cv
647.866 1649.44 643.135 1650.89 640.486 1654.67 cv
cp
659.064 1639.73 mo
668.563 1646.38 670.398 1660.21 663.159 1670.54 cv
655.919 1680.88 642.304 1683.89 632.806 1677.24 cv
623.31 1670.58 621.474 1656.76 628.711 1646.43 cv
635.951 1636.09 649.568 1633.08 659.064 1639.73 cv
cp
702.227 1473.49 mo
699.575 1477.27 699.835 1482.22 702.788 1484.28 cv
705.745 1486.35 710.478 1484.91 713.129 1481.12 cv
715.777 1477.34 715.52 1472.39 712.563 1470.32 cv
709.608 1468.26 704.875 1469.7 702.227 1473.49 cv
cp
724.898 1489.36 mo
717.659 1499.7 704.044 1502.71 694.543 1496.06 cv
685.049 1489.41 683.214 1475.59 690.454 1465.25 cv
697.694 1454.91 711.309 1451.9 720.805 1458.55 cv
730.306 1465.2 732.138 1479.03 724.898 1489.36 cv
cp
672.099 1516.51 mo
669.453 1520.29 669.71 1525.24 672.665 1527.3 cv
675.619 1529.37 680.355 1527.93 683.003 1524.15 cv
685.652 1520.36 685.393 1515.42 682.435 1513.35 cv
679.483 1511.28 674.75 1512.73 672.099 1516.51 cv
cp
694.773 1532.39 mo
687.536 1542.73 673.921 1545.73 664.42 1539.08 cv
654.924 1532.43 653.092 1518.61 660.329 1508.27 cv
667.569 1497.93 681.183 1494.93 690.68 1501.58 cv
700.181 1508.23 702.013 1522.05 694.773 1532.39 cv
cp
641.974 1559.54 mo
639.328 1563.32 639.583 1568.26 642.537 1570.33 cv
645.494 1572.4 650.23 1570.95 652.878 1567.17 cv
655.524 1563.39 655.267 1558.44 652.31 1556.37 cv
649.355 1554.3 644.622 1555.75 641.974 1559.54 cv
cp
664.648 1575.41 mo
657.411 1585.75 643.794 1588.75 634.295 1582.1 cv
624.799 1575.45 622.966 1561.63 630.204 1551.29 cv
637.441 1540.96 651.058 1537.95 660.552 1544.6 cv
670.053 1551.25 671.888 1565.07 664.648 1575.41 cv
cp
611.851 1602.56 mo
609.2 1606.34 609.459 1611.28 612.414 1613.35 cv
615.369 1615.42 620.105 1613.98 622.753 1610.19 cv
625.402 1606.41 625.142 1601.47 622.185 1599.4 cv
619.23 1597.33 614.499 1598.77 611.851 1602.56 cv
cp
634.525 1618.43 mo
627.286 1628.77 613.668 1631.78 604.17 1625.12 cv
594.674 1618.47 592.839 1604.65 600.079 1594.32 cv
607.318 1583.98 620.933 1580.98 630.429 1587.62 cv
639.928 1594.27 641.763 1608.1 634.525 1618.43 cv
cp
799.278 1541.45 mo
801.929 1537.66 801.672 1532.72 798.717 1530.65 cv
795.762 1528.58 791.029 1530.03 788.38 1533.82 cv
785.729 1537.6 785.987 1542.54 788.941 1544.61 cv
791.896 1546.68 796.63 1545.23 799.278 1541.45 cv
cp
776.606 1525.57 mo
783.846 1515.23 797.463 1512.23 806.959 1518.88 cv
816.455 1525.53 818.29 1539.35 811.05 1549.69 cv
803.811 1560.03 790.193 1563.03 780.7 1556.38 cv
771.201 1549.73 769.366 1535.91 776.606 1525.57 cv
cp
769.153 1584.47 mo
771.804 1580.69 771.544 1575.74 768.589 1573.67 cv
765.635 1571.6 760.904 1573.05 758.255 1576.84 cv
755.607 1580.62 755.862 1585.56 758.819 1587.63 cv
761.773 1589.7 766.504 1588.25 769.153 1584.47 cv
cp
746.48 1568.6 mo
753.72 1558.25 767.337 1555.25 776.833 1561.9 cv
786.33 1568.55 788.165 1582.37 780.925 1592.71 cv
773.686 1603.05 760.071 1606.05 750.575 1599.4 cv
741.079 1592.75 739.243 1578.93 746.48 1568.6 cv
cp
739.028 1627.49 mo
741.676 1623.71 741.419 1618.77 738.464 1616.7 cv
735.51 1614.63 730.776 1616.08 728.13 1619.86 cv
725.482 1623.64 725.736 1628.59 728.691 1630.66 cv
731.646 1632.72 736.379 1631.27 739.028 1627.49 cv
cp
716.355 1611.62 mo
723.595 1601.28 737.21 1598.28 746.706 1604.93 cv
756.202 1611.58 758.037 1625.4 750.797 1635.74 cv
743.56 1646.07 729.946 1649.08 720.449 1642.43 cv
710.953 1635.78 709.118 1621.96 716.355 1611.62 cv
cp
708.905 1670.52 mo
711.551 1666.73 711.294 1661.79 708.339 1659.72 cv
705.384 1657.65 700.653 1659.1 698.005 1662.88 cv
695.356 1666.67 695.611 1671.61 698.568 1673.68 cv
701.521 1675.75 706.254 1674.3 708.905 1670.52 cv
cp
686.233 1654.64 mo
693.47 1644.3 707.084 1641.3 716.583 1647.95 cv
726.08 1654.6 727.912 1668.42 720.675 1678.76 cv
713.435 1689.1 699.82 1692.1 690.324 1685.45 cv
680.826 1678.8 678.993 1664.98 686.233 1654.64 cv
cp
f
1315.78 2415.02 mo
1112.96 2704.67 li
1050.86 2661.19 li
1045.62 2657.52 1044.35 2650.26 1048.03 2645 cv
1065.89 2619.5 li
1066.74 2619 1067.49 2618.34 1068.08 2617.5 cv
1071.57 2612.52 1075.06 2607.53 1078.55 2602.55 cv
1108.06 2623.22 li
1119.62 2631.31 1135.6 2628.49 1143.69 2616.94 cv
1243.84 2473.9 li
1251.93 2462.35 1249.12 2446.37 1237.56 2438.28 cv
1208.04 2417.61 li
1211.53 2412.63 1215.02 2407.64 1218.51 2402.66 cv
1219.1 2401.82 1219.47 2400.88 1219.64 2399.92 cv
1237.5 2374.42 li
1241.18 2369.16 1248.44 2367.87 1253.68 2371.54 cv
1315.78 2415.02 li
cp
1348.15 2437.69 mo
1357.48 2444.22 1365.71 2452.11 1372.53 2461.05 cv
1426.48 2534.53 li
1263.12 2767.83 li
1175.76 2742.3 li
1164.89 2738.9 1154.65 2733.86 1145.33 2727.34 cv
1124.73 2712.92 li
1327.55 2423.26 li
1348.15 2437.69 li
cp
1440.91 2554.16 mo
1444 2558.2 1444.12 2563.71 1441.2 2567.88 cv
1299.5 2770.24 li
1296.58 2774.41 1291.36 2776.2 1286.38 2774.64 cv
1277.69 2772.09 li
1435.47 2546.75 li
1440.91 2554.16 li
cp
1199.8 2429.38 mo
1229.32 2450.05 li
1234.38 2453.6 1235.62 2460.6 1232.07 2465.66 cv
1131.92 2608.69 li
1128.37 2613.76 1121.37 2614.99 1116.31 2611.45 cv
1086.79 2590.78 li
1124.46 2536.98 1162.13 2483.18 1199.8 2429.38 cv
cp
1010.67 2568.53 mo
995.459 2557.88 1008.18 2547.39 1016.19 2535.95 cv
1047.39 2491.39 1078.59 2446.83 1109.79 2402.27 cv
1114.9 2394.97 1133.37 2356.92 1146.91 2361.3 cv
1165.3 2374.17 1183.7 2387.05 1202.09 2399.93 cv
1195.74 2408.99 li
1187.5 2420.77 li
1074.49 2582.16 li
1066.24 2593.94 li
1059.9 2603 li
1043.49 2591.51 1027.08 2580.02 1010.67 2568.53 cv
cp
1225.72 2366.18 mo
1210.33 2388.16 li
1191.69 2375.1 1173.05 2362.05 1154.4 2349 cv
1153.82 2348.59 1153.24 2348.31 1152.66 2348.1 cv
1132.28 2338.26 1121.97 2359.82 1112.36 2373.55 cv
1094.71 2398.75 1077.06 2423.96 1059.41 2449.16 cv
1041.3 2475.03 1023.18 2500.91 1005.06 2526.78 cv
995.974 2539.76 978.555 2557.2 992.796 2572.83 cv
1001.11 2581.96 1013.98 2588.39 1023.98 2595.39 cv
1033.21 2601.85 1042.43 2608.31 1051.66 2614.77 cv
1036.26 2636.76 li
1028.03 2648.51 1030.88 2664.75 1042.62 2672.97 cv
1110.6 2720.57 li
1116.49 2724.69 li
1137.09 2739.11 li
1147.62 2746.49 1159.19 2752.18 1171.59 2756.06 cv
1264.04 2783.07 li
1264.04 2783.07 li
1282.22 2788.39 li
1293.08 2791.79 1304.75 2787.8 1311.27 2778.49 cv
1452.97 2576.13 li
1459.49 2566.81 1459.24 2554.48 1452.42 2545.55 cv
1441.12 2530.17 li
1441.12 2530.17 li
1384.03 2452.44 li
1376.23 2442.22 1366.93 2433.3 1356.39 2425.92 cv
1335.79 2411.49 li
1329.91 2407.37 li
1261.92 2359.77 li
1250.19 2351.55 1233.95 2354.43 1225.72 2366.18 cv
cp
1316.76 2503.76 mo
1319.41 2499.98 1324.14 2498.53 1327.09 2500.6 cv
1330.05 2502.67 1330.3 2507.61 1327.66 2511.39 cv
1325.01 2515.18 1320.28 2516.63 1317.32 2514.56 cv
1314.37 2512.49 1314.11 2507.55 1316.76 2503.76 cv
cp
1339.43 2519.64 mo
1346.67 2509.3 1344.83 2495.48 1335.34 2488.83 cv
1325.84 2482.18 1312.23 2485.18 1304.99 2495.52 cv
1297.75 2505.86 1299.58 2519.68 1309.08 2526.33 cv
1318.57 2532.98 1332.19 2529.97 1339.43 2519.64 cv
cp
1287.07 2546.17 mo
1289.71 2542.39 1294.45 2540.94 1297.4 2543 cv
1300.36 2545.07 1300.61 2550.02 1297.97 2553.8 cv
1295.32 2557.58 1290.58 2559.03 1287.63 2556.96 cv
1284.67 2554.89 1284.42 2549.95 1287.07 2546.17 cv
cp
1309.74 2562.04 mo
1316.98 2551.71 1315.14 2537.88 1305.64 2531.23 cv
1296.15 2524.59 1282.53 2527.59 1275.3 2537.93 cv
1268.06 2548.26 1269.89 2562.09 1279.39 2568.73 cv
1288.88 2575.38 1302.5 2572.38 1309.74 2562.04 cv
cp
1256.94 2589.19 mo
1259.59 2585.41 1264.32 2583.96 1267.28 2586.03 cv
1270.23 2588.1 1270.49 2593.04 1267.84 2596.83 cv
1265.19 2600.61 1260.46 2602.06 1257.5 2599.99 cv
1254.55 2597.92 1254.29 2592.97 1256.94 2589.19 cv
cp
1279.61 2605.07 mo
1286.85 2594.73 1285.02 2580.9 1275.52 2574.25 cv
1266.03 2567.61 1252.41 2570.61 1245.17 2580.95 cv
1237.93 2591.29 1239.76 2605.11 1249.26 2611.76 cv
1258.76 2618.41 1272.37 2615.41 1279.61 2605.07 cv
cp
1226.82 2632.22 mo
1229.46 2628.43 1234.2 2626.98 1237.15 2629.05 cv
1240.11 2631.12 1240.36 2636.06 1237.71 2639.85 cv
1235.06 2643.63 1230.33 2645.08 1227.38 2643.01 cv
1224.42 2640.94 1224.17 2636 1226.82 2632.22 cv
cp
1249.49 2648.09 mo
1256.73 2637.75 1254.89 2623.93 1245.39 2617.28 cv
1235.9 2610.63 1222.28 2613.64 1215.04 2623.97 cv
1207.81 2634.31 1209.64 2648.13 1219.13 2654.78 cv
1228.63 2661.43 1242.25 2658.43 1249.49 2648.09 cv
cp
1196.69 2675.24 mo
1199.34 2671.46 1204.07 2670.01 1207.03 2672.07 cv
1209.98 2674.14 1210.24 2679.09 1207.59 2682.87 cv
1204.94 2686.65 1200.21 2688.1 1197.25 2686.03 cv
1194.3 2683.97 1194.04 2679.02 1196.69 2675.24 cv
cp
1219.36 2691.11 mo
1226.6 2680.78 1224.76 2666.95 1215.27 2660.3 cv
1205.77 2653.65 1192.16 2656.66 1184.92 2667 cv
1177.68 2677.34 1179.51 2691.16 1189.01 2697.81 cv
1198.5 2704.45 1212.12 2701.45 1219.36 2691.11 cv
cp
1345.83 2555.25 mo
1348.48 2551.47 1353.21 2550.02 1356.16 2552.09 cv
1359.12 2554.16 1359.37 2559.1 1356.72 2562.88 cv
1354.08 2566.67 1349.34 2568.12 1346.39 2566.05 cv
1343.44 2563.98 1343.18 2559.03 1345.83 2555.25 cv
cp
1338.15 2577.82 mo
1347.64 2584.47 1361.26 2581.46 1368.5 2571.13 cv
1375.74 2560.79 1373.9 2546.97 1364.4 2540.32 cv
1354.91 2533.67 1341.29 2536.67 1334.05 2547.01 cv
1326.82 2557.35 1328.65 2571.17 1338.15 2577.82 cv
cp
1315.7 2598.28 mo
1318.35 2594.5 1323.08 2593.05 1326.04 2595.12 cv
1328.99 2597.19 1329.25 2602.13 1326.6 2605.91 cv
1323.95 2609.69 1319.22 2611.14 1316.26 2609.07 cv
1313.31 2607 1313.05 2602.06 1315.7 2598.28 cv
cp
1308.02 2620.84 mo
1317.52 2627.5 1331.13 2624.49 1338.37 2614.15 cv
1345.61 2603.81 1343.78 2589.99 1334.28 2583.34 cv
1324.78 2576.69 1311.17 2579.7 1303.93 2590.03 cv
1296.69 2600.37 1298.52 2614.2 1308.02 2620.84 cv
cp
1285.58 2641.3 mo
1288.22 2637.52 1292.96 2636.07 1295.91 2638.14 cv
1298.87 2640.21 1299.12 2645.15 1296.47 2648.93 cv
1293.82 2652.72 1289.09 2654.17 1286.14 2652.1 cv
1283.18 2650.03 1282.93 2645.08 1285.58 2641.3 cv
cp
1277.89 2663.87 mo
1287.39 2670.52 1301.01 2667.52 1308.25 2657.17 cv
1315.49 2646.84 1313.65 2633.01 1304.15 2626.36 cv
1294.66 2619.72 1281.04 2622.72 1273.8 2633.06 cv
1266.56 2643.4 1268.4 2657.22 1277.89 2663.87 cv
cp
1255.45 2684.32 mo
1258.1 2680.54 1262.83 2679.09 1265.79 2681.16 cv
1268.74 2683.23 1269 2688.17 1266.35 2691.95 cv
1263.7 2695.74 1258.97 2697.19 1256.01 2695.12 cv
1253.06 2693.05 1252.8 2688.11 1255.45 2684.32 cv
cp
1247.77 2706.89 mo
1257.27 2713.54 1270.88 2710.54 1278.12 2700.2 cv
1285.36 2689.86 1283.53 2676.04 1274.03 2669.39 cv
1264.53 2662.74 1250.92 2665.74 1243.68 2676.08 cv
1236.44 2686.42 1238.27 2700.24 1247.77 2706.89 cv
cp
f
1315.78 -34.9811 mo
1112.96 254.673 li
1050.86 211.192 li
1045.62 207.52 1044.35 200.261 1048.03 195 cv
1065.89 169.498 li
1066.74 169.001 1067.49 168.34 1068.08 167.499 cv
1071.57 162.518 1075.06 157.533 1078.55 152.552 cv
1108.06 173.22 li
1119.62 181.31 1135.6 178.49 1143.69 166.936 cv
1243.84 23.9046 li
1251.93 12.3529 1249.12 -3.63104 1237.56 -11.7209 cv
1208.04 -32.3888 li
1211.53 -37.3722 1215.02 -42.3581 1218.51 -47.3415 cv
1219.1 -48.1794 1219.47 -49.1174 1219.64 -50.0803 cv
1237.5 -75.5803 li
1241.18 -80.84 1248.44 -82.134 1253.68 -78.4611 cv
1315.78 -34.9811 li
cp
1348.15 -12.3137 mo
1357.48 -5.78191 1365.71 2.11457 1372.53 11.0545 cv
1426.48 84.5277 li
1263.12 317.831 li
1175.76 292.302 li
1164.89 288.899 1154.65 283.865 1145.33 277.34 cv
1124.73 262.917 li
1327.55 -26.737 li
1348.15 -12.3137 li
cp
1440.91 104.159 mo
1444 108.202 1444.12 113.714 1441.2 117.884 cv
1299.5 320.244 li
1296.58 324.414 1291.36 326.196 1286.38 324.639 cv
1277.69 322.092 li
1435.47 96.7528 li
1440.91 104.159 li
cp
1199.8 -20.6169 mo
1229.32 .0515814 li
1234.38 3.5965 1235.62 10.6014 1232.07 15.6629 cv
1131.92 158.694 li
1128.37 163.758 1121.37 164.993 1116.31 161.448 cv
1086.79 140.78 li
1124.46 86.9798 1162.13 33.1829 1199.8 -20.6169 cv
cp
1010.67 118.526 mo
995.459 107.876 1008.18 97.3875 1016.19 85.951 cv
1047.39 41.3904 1078.59 -3.16766 1109.79 -47.7258 cv
1114.9 -55.027 1133.37 -93.0778 1146.91 -88.7048 cv
1165.3 -75.8273 1183.7 -62.9479 1202.09 -50.0705 cv
1195.74 -41.0055 li
1187.5 -29.2311 li
1074.49 132.163 li
1066.24 143.937 li
1059.9 152.997 li
1043.49 141.507 1027.08 130.016 1010.67 118.526 cv
cp
1225.72 -83.8244 mo
1210.33 -61.8429 li
1191.69 -74.8967 1173.05 -87.9499 1154.4 -101.004 cv
1153.82 -101.41 1153.24 -101.685 1152.66 -101.903 cv
1132.28 -111.735 1121.97 -90.1769 1112.36 -76.4548 cv
1094.71 -51.2492 1077.06 -26.0436 1059.41 -.838067 cv
1041.3 25.034 1023.18 50.9085 1005.06 76.7806 cv
995.974 89.7606 978.555 107.202 992.796 122.833 cv
1001.11 131.959 1013.98 138.388 1023.98 145.393 cv
1033.21 151.853 1042.43 158.312 1051.66 164.77 cv
1036.26 186.756 li
1028.03 198.506 1030.88 214.747 1042.62 222.965 cv
1110.6 270.568 li
1116.49 274.689 li
1137.09 289.115 li
1147.62 296.487 1159.19 302.176 1171.59 306.056 cv
1264.04 333.07 li
1264.04 333.068 li
1282.22 338.394 li
1293.08 341.787 1304.75 337.804 1311.27 328.489 cv
1452.97 126.126 li
1459.49 116.811 1459.24 104.48 1452.42 95.5452 cv
1441.12 80.1737 li
1441.12 80.1737 li
1384.03 2.43781 li
1376.23 -7.78143 1366.93 -16.7043 1356.39 -24.0837 cv
1335.79 -38.509 li
1329.91 -42.6301 li
1261.92 -90.2336 li
1250.19 -98.4509 1233.95 -95.5744 1225.72 -83.8244 cv
cp
1316.76 53.7654 mo
1319.41 49.9822 1324.14 48.5321 1327.09 50.5999 cv
1330.05 52.6702 1330.3 57.6141 1327.66 61.3944 cv
1325.01 65.1776 1320.28 66.6278 1317.32 64.5574 cv
1314.37 62.4896 1314.11 57.5457 1316.76 53.7654 cv
cp
1339.43 69.639 mo
1346.67 59.3021 1344.83 45.4793 1335.34 38.8299 cv
1325.84 32.181 1312.23 35.1844 1304.99 45.5208 cv
1297.75 55.8602 1299.58 69.6805 1309.08 76.3299 cv
1318.57 82.9788 1332.19 79.9754 1339.43 69.639 cv
cp
1287.07 96.1673 mo
1289.71 92.387 1294.45 90.9368 1297.4 93.0042 cv
1300.36 95.0745 1300.61 100.016 1297.97 103.799 cv
1295.32 107.582 1290.58 109.033 1287.63 106.962 cv
1284.67 104.894 1284.42 99.95 1287.07 96.1673 cv
cp
1309.74 112.043 mo
1316.98 101.707 1315.14 87.8817 1305.64 81.2347 cv
1296.15 74.5853 1282.53 77.5892 1275.3 87.9256 cv
1268.06 98.262 1269.89 112.085 1279.39 118.734 cv
1288.88 125.381 1302.5 122.38 1309.74 112.043 cv
cp
1256.94 139.194 mo
1259.59 135.407 1264.32 133.961 1267.28 136.029 cv
1270.23 138.099 1270.49 143.038 1267.84 146.826 cv
1265.19 150.606 1260.46 152.057 1257.5 149.987 cv
1254.55 147.919 1254.29 142.974 1256.94 139.194 cv
cp
1279.61 155.068 mo
1286.85 144.726 1285.02 130.904 1275.52 124.254 cv
1266.03 117.607 1252.41 120.611 1245.17 130.952 cv
1237.93 141.289 1239.76 155.11 1249.26 161.759 cv
1258.76 168.408 1272.37 165.407 1279.61 155.068 cv
cp
1226.82 182.216 mo
1229.46 178.433 1234.2 176.983 1237.15 179.051 cv
1240.11 181.121 1240.36 186.065 1237.71 189.846 cv
1235.06 193.628 1230.33 195.079 1227.38 193.009 cv
1224.42 190.941 1224.17 185.997 1226.82 182.216 cv
cp
1249.49 198.09 mo
1256.73 187.753 1254.89 173.93 1245.39 167.281 cv
1235.9 160.632 1222.28 163.636 1215.04 173.972 cv
1207.81 184.311 1209.64 198.132 1219.13 204.781 cv
1228.63 211.43 1242.25 208.427 1249.49 198.09 cv
cp
1196.69 225.238 mo
1199.34 221.455 1204.07 220.005 1207.03 222.073 cv
1209.98 224.143 1210.24 229.085 1207.59 232.87 cv
1204.94 236.653 1200.21 238.103 1197.25 236.033 cv
1194.3 233.965 1194.04 229.021 1196.69 225.238 cv
cp
1219.36 241.114 mo
1226.6 230.775 1224.76 216.95 1215.27 210.303 cv
1205.77 203.654 1192.16 206.658 1184.92 216.996 cv
1177.68 227.335 1179.51 241.159 1189.01 247.808 cv
1198.5 254.454 1212.12 251.453 1219.36 241.114 cv
cp
1345.83 105.254 mo
1348.48 101.472 1353.21 100.021 1356.16 102.089 cv
1359.12 104.159 1359.37 109.103 1356.72 112.884 cv
1354.08 116.666 1349.34 118.117 1346.39 116.047 cv
1343.44 113.979 1343.18 109.035 1345.83 105.254 cv
cp
1338.15 127.819 mo
1347.64 134.468 1361.26 131.465 1368.5 121.128 cv
1375.74 110.791 1373.9 96.9686 1364.4 90.3192 cv
1354.91 83.6697 1341.29 86.6737 1334.05 97.0101 cv
1326.82 107.349 1328.65 121.17 1338.15 127.819 cv
cp
1315.7 148.277 mo
1318.35 144.496 1323.08 143.048 1326.04 145.116 cv
1328.99 147.186 1329.25 152.125 1326.6 155.908 cv
1323.95 159.694 1319.22 161.141 1316.26 159.071 cv
1313.31 157.003 1313.05 152.062 1315.7 148.277 cv
cp
1308.02 170.844 mo
1317.52 177.495 1331.13 174.492 1338.37 164.153 cv
1345.61 153.813 1343.78 139.993 1334.28 133.344 cv
1324.78 126.694 1311.17 129.698 1303.93 140.034 cv
1296.69 150.374 1298.52 164.197 1308.02 170.844 cv
cp
1285.58 191.301 mo
1288.22 187.515 1292.96 186.07 1295.91 188.138 cv
1298.87 190.208 1299.12 195.147 1296.47 198.932 cv
1293.82 202.716 1289.09 204.168 1286.14 202.098 cv
1283.18 200.028 1282.93 195.084 1285.58 191.301 cv
cp
1277.89 213.868 mo
1287.39 220.52 1301.01 217.516 1308.25 207.175 cv
1315.49 196.835 1313.65 183.015 1304.15 176.363 cv
1294.66 169.717 1281.04 172.718 1273.8 183.059 cv
1266.56 193.398 1268.4 207.219 1277.89 213.868 cv
cp
1255.45 234.323 mo
1258.1 230.543 1262.83 229.092 1265.79 231.16 cv
1268.74 233.23 1269 238.174 1266.35 241.954 cv
1263.7 245.738 1258.97 247.188 1256.01 245.117 cv
1253.06 243.05 1252.8 238.106 1255.45 234.323 cv
cp
1247.77 256.89 mo
1257.27 263.539 1270.88 260.535 1278.12 250.199 cv
1285.36 239.862 1283.53 226.039 1274.03 219.39 cv
1264.53 212.741 1250.92 215.744 1243.68 226.081 cv
1236.44 236.42 1238.27 250.241 1247.77 256.89 cv
cp
f
1783.38 982.183 mo
1776.97 969.6 li
1767.62 974.208 1758.29 978.839 1749.04 983.553 cv
1749.04 983.555 1749.04 983.553 1749.04 983.553 cv
1748.89 983.628 1748.74 983.704 1748.59 983.778 cv
1755.12 996.587 li
1783.38 982.183 li
cp
1919.61 855.268 mo
1908.06 832.618 1896.52 809.963 1884.98 787.312 cv
1855.05 728.566 1825.11 669.82 1795.18 611.074 cv
1793.34 607.446 1791.43 600.683 1788.44 597.829 cv
1784.73 594.306 1772.91 591.16 1767.46 592.469 cv
1763.9 593.326 1759.93 596.308 1756.67 597.967 cv
1727 613.083 1697.34 628.202 1667.67 643.319 cv
1651.25 651.68 1634.84 660.042 1618.43 668.404 cv
1618.42 668.411 1618.4 668.419 1618.38 668.429 cv
1594.73 680.483 li
1594.72 680.485 1594.72 680.485 1594.72 680.488 cv
1583.58 688.597 1588.63 702.307 1595.13 714.368 cv
1602.23 722.219 1606.63 735.233 1611.06 743.93 cv
1614.46 750.596 1617.85 757.258 1621.25 763.92 cv
1657.26 750.822 1698.55 764.238 1716.67 799.803 cv
1716.76 799.984 1716.82 800.168 1716.91 800.346 cv
1717 800.523 1717.11 800.68 1717.21 800.861 cv
1735.33 836.43 1721.91 877.715 1690.15 899.15 cv
1695.66 909.957 1701.17 920.766 1706.67 931.576 cv
1707.16 932.541 1707.65 933.506 1708.15 934.474 cv
1710.88 939.835 1715.76 946.883 1716.85 953.484 cv
1723.02 965.057 1731.28 975.203 1742.51 970.749 cv
1742.51 970.749 1742.51 970.749 1742.52 970.746 cv
1783.14 950.049 li
1783.14 950.049 li
1820.64 930.939 1858.15 911.831 1895.65 892.721 cv
1911.32 884.737 1930.5 876.657 1919.61 855.268 cv
cp
1683.04 885.207 mo
1707.82 867.726 1718.16 835.124 1704.1 806.871 cv
1689.52 778.899 1657.05 768.097 1628.35 777.863 cv
1646.58 813.642 1664.81 849.427 1683.04 885.207 cv
cp
1558.57 733.18 mo
1550.68 738.342 1553.12 739.976 1557.37 748.33 cv
1559.62 752.741 1561.87 757.153 1564.12 761.563 cv
1569.38 758.883 1574.64 756.202 1579.9 753.522 cv
1583.36 751.758 1587.8 753.191 1589.56 756.663 cv
1619.02 814.475 1648.48 872.291 1677.94 930.103 cv
1679.7 933.565 1678.26 938.002 1674.8 939.768 cv
1669.42 942.51 1664.04 945.252 1658.65 947.993 cv
1662.63 957.32 1668.91 971.567 1674.35 971.256 cv
1681.8 967.909 1701.28 961.306 1702.49 955.034 cv
1700.25 950.624 1698 946.22 1695.76 941.809 cv
1688.62 927.805 1681.48 913.799 1674.35 899.794 cv
1674.17 899.444 1673.99 899.091 1673.81 898.739 cv
1668.93 889.169 1664.06 879.601 1659.18 870.034 cv
1643.99 840.215 1628.8 810.396 1613.6 780.577 cv
1613.06 779.512 1612.52 778.446 1611.98 777.38 cv
1611.8 777.03 1611.61 776.675 1611.44 776.324 cv
1606.16 765.966 1600.88 755.609 1595.6 745.251 cv
1594.1 742.311 1592.61 739.371 1591.11 736.431 cv
1589.09 732.479 1586.64 728.304 1584.19 724.016 cv
1577.79 719.999 1565.26 728.797 1558.57 733.18 cv
cp
1564.24 777.633 mo
1547.25 786.288 1530.27 794.942 1513.28 803.597 cv
1540.56 857.142 1567.84 910.689 1595.12 964.232 cv
1612.11 955.576 1629.1 946.923 1646.09 938.267 cv
1651.35 935.586 1656.61 932.906 1661.87 930.223 cv
1634.59 876.681 1607.3 823.134 1580.02 769.589 cv
1574.76 772.269 1569.5 774.952 1564.24 777.633 cv
cp
1588.12 667.721 mo
1588.79 667.378 li
1597.04 661.637 1607.1 657.24 1615.81 653.3 cv
1611.58 644.999 li
1583.31 659.403 li
1587.67 667.951 li
1587.82 667.872 1587.97 667.797 1588.12 667.721 cv
cp
1625.72 620.656 mo
1618.79 607.051 li
1548.37 642.934 li
1555.3 656.539 li
1625.72 620.656 li
cp
1742.9 1004.26 mo
1733.67 986.147 li
1723.42 985.169 1716.18 978.033 1710.21 968.821 cv
1701.59 976.259 1687.06 980.858 1679.51 984.704 cv
1679.5 984.709 1679.5 984.711 1679.49 984.714 cv
1679.23 984.839 1678.95 984.937 1678.66 985.037 cv
1677.84 985.346 1677.04 985.513 1676.28 985.52 cv
1659.52 987.933 1652.24 968.852 1645.97 954.459 cv
1629.06 963.073 1612.15 971.687 1595.25 980.302 cv
1593.37 981.257 1591.59 981.301 1590.04 980.794 cv
1589.94 980.769 1589.83 980.733 1589.72 980.701 cv
1589.66 980.679 1589.6 980.659 1589.54 980.635 cv
1587.98 980.144 1586.55 979.059 1585.58 977.16 cv
1556.13 919.348 1526.67 861.533 1497.21 803.72 cv
1495.45 800.258 1496.88 795.821 1500.35 794.055 cv
1517.24 785.448 1534.13 776.841 1551.02 768.234 cv
1545.04 758.275 1536.69 745.67 1537.83 735.613 cv
1539.35 722.064 1562.97 713.729 1573.62 709.385 cv
1574.54 709.008 1575.4 708.787 1576.28 708.537 cv
1574.83 705.032 1573.67 701.509 1573.06 698.01 cv
1571.75 690.444 1573.51 684.17 1577.07 678.802 cv
1570.1 665.126 li
1559.15 670.704 li
1553.56 673.554 1546.7 671.325 1543.85 665.734 cv
1534.2 646.793 li
1531.36 641.204 1533.58 634.339 1539.17 631.492 cv
1614.93 592.888 li
1620.52 590.041 1627.39 592.273 1630.24 597.861 cv
1639.89 616.802 li
1642.74 622.39 1640.5 629.256 1634.91 632.102 cv
1623.98 637.676 li
1628.74 647.025 li
1662.26 629.949 1695.77 612.87 1729.29 595.793 cv
1749.29 585.604 1779.66 562.633 1798.45 587.064 cv
1810.31 602.489 1817.6 623.408 1826.36 640.601 cv
1844.5 676.205 1862.64 711.808 1880.78 747.414 cv
1896.16 777.605 1911.55 807.799 1926.93 837.993 cv
1936.86 857.475 1948.51 880.094 1923.23 894.796 cv
1880.27 919.789 1834.8 941.314 1789.87 963.262 cv
1796.77 976.81 li
1800.05 983.237 1797.49 991.128 1791.06 994.401 cv
1760.49 1009.98 li
1754.06 1013.25 1746.17 1010.69 1742.9 1004.26 cv
cp
1837.47 857.052 mo
1835.37 852.938 1830.89 850.844 1827.67 852.482 cv
1824.46 854.119 1823.51 858.98 1825.61 863.094 cv
1827.71 867.212 1832.19 869.302 1835.41 867.665 cv
1838.62 866.026 1839.56 861.17 1837.47 857.052 cv
cp
1812.8 869.615 mo
1807.08 858.372 1810.81 844.941 1821.15 839.676 cv
1831.48 834.414 1844.54 839.282 1850.27 850.525 cv
1856 861.775 1852.26 875.206 1841.93 880.471 cv
1831.6 885.734 1818.54 880.866 1812.8 869.615 cv
cp
1813.97 810.933 mo
1811.87 806.814 1807.39 804.72 1804.17 806.359 cv
1800.96 807.995 1800.01 812.856 1802.11 816.974 cv
1804.2 821.088 1808.69 823.178 1811.9 821.541 cv
1815.12 819.902 1816.06 815.046 1813.97 810.933 cv
cp
1818.43 834.347 mo
1808.1 839.61 1795.03 834.742 1789.31 823.499 cv
1783.58 812.248 1787.31 798.818 1797.65 793.553 cv
1807.98 788.29 1821.04 793.158 1826.77 804.409 cv
1832.5 815.652 1828.76 829.082 1818.43 834.347 cv
cp
1790.12 764.133 mo
1788.02 760.019 1783.54 757.922 1780.33 759.561 cv
1777.11 761.198 1776.17 766.061 1778.26 770.175 cv
1780.36 774.288 1784.85 776.381 1788.06 774.744 cv
1791.28 773.105 1792.22 768.246 1790.12 764.133 cv
cp
1794.59 787.548 mo
1784.25 792.81 1771.19 787.942 1765.46 776.697 cv
1759.73 765.453 1763.47 752.023 1773.8 746.758 cv
1784.13 741.495 1797.2 746.363 1802.93 757.609 cv
1808.66 768.852 1804.91 782.283 1794.59 787.548 cv
cp
1766.28 717.338 mo
1764.18 713.22 1759.7 711.125 1756.48 712.764 cv
1753.27 714.4 1752.32 719.261 1754.42 723.38 cv
1756.52 727.493 1761.01 729.585 1764.22 727.949 cv
1767.44 726.31 1768.37 721.451 1766.28 717.338 cv
cp
1770.74 740.753 mo
1760.41 746.015 1747.35 741.147 1741.62 729.902 cv
1735.89 718.654 1739.63 705.222 1749.96 699.958 cv
1760.29 694.695 1773.35 699.563 1779.08 710.814 cv
1784.81 722.056 1781.07 735.488 1770.74 740.753 cv
cp
1742.43 670.538 mo
1740.34 666.425 1735.85 664.33 1732.64 665.969 cv
1729.43 667.605 1728.48 672.466 1730.57 676.58 cv
1732.67 680.696 1737.16 682.785 1740.37 681.149 cv
1743.59 679.51 1744.53 674.654 1742.43 670.538 cv
cp
1746.9 693.955 mo
1736.57 699.218 1723.5 694.349 1717.77 683.102 cv
1712.04 671.859 1715.78 658.428 1726.11 653.162 cv
1736.44 647.9 1749.51 652.768 1755.24 664.011 cv
1760.97 675.259 1757.23 688.69 1746.9 693.955 cv
cp
1873.42 810.11 mo
1871.32 805.993 1866.84 803.901 1863.62 805.538 cv
1860.41 807.177 1859.46 812.035 1861.56 816.151 cv
1863.66 820.267 1868.15 822.362 1871.36 820.723 cv
1874.58 819.086 1875.52 814.225 1873.42 810.11 cv
cp
1848.76 822.676 mo
1843.03 811.43 1846.77 797.997 1857.1 792.732 cv
1867.43 787.469 1880.49 792.34 1886.22 803.585 cv
1891.95 814.833 1888.22 828.264 1877.89 833.527 cv
1867.55 838.792 1854.49 833.924 1848.76 822.676 cv
cp
1849.58 763.312 mo
1847.48 759.199 1843 757.106 1839.78 758.743 cv
1836.57 760.382 1835.62 765.241 1837.72 769.354 cv
1839.81 773.47 1844.3 775.562 1847.52 773.923 cv
1850.73 772.286 1851.67 767.428 1849.58 763.312 cv
cp
1824.91 775.878 mo
1819.18 764.635 1822.93 751.202 1833.26 745.937 cv
1843.59 740.674 1856.65 745.545 1862.38 756.788 cv
1868.11 768.036 1864.37 781.467 1854.04 786.729 cv
1843.71 791.994 1830.64 787.126 1824.91 775.878 cv
cp
1825.73 716.515 mo
1823.64 712.401 1819.15 710.306 1815.94 711.943 cv
1812.72 713.582 1811.77 718.443 1813.87 722.556 cv
1815.97 726.67 1820.46 728.765 1823.67 727.126 cv
1826.88 725.489 1827.83 720.628 1825.73 716.515 cv
cp
1801.07 729.081 mo
1795.34 717.838 1799.08 704.405 1809.41 699.139 cv
1819.74 693.877 1832.81 698.747 1838.53 709.991 cv
1844.26 721.236 1840.52 734.667 1830.2 739.93 cv
1819.86 745.195 1806.8 740.324 1801.07 729.081 cv
cp
1801.89 669.72 mo
1799.79 665.604 1795.31 663.512 1792.09 665.148 cv
1788.88 666.787 1787.93 671.645 1790.03 675.762 cv
1792.12 679.875 1796.61 681.967 1799.83 680.328 cv
1803.04 678.692 1803.98 673.833 1801.89 669.72 cv
cp
1777.23 682.286 mo
1771.49 671.04 1775.24 657.607 1785.57 652.342 cv
1795.9 647.079 1808.96 651.95 1814.69 663.196 cv
1820.42 674.441 1816.68 687.872 1806.35 693.135 cv
1796.02 698.399 1782.95 693.529 1777.23 682.286 cv
cp
1767.85 863.899 mo
1769.95 868.015 1774.44 870.11 1777.65 868.471 cv
1780.87 866.834 1781.81 861.973 1779.71 857.858 cv
1777.61 853.742 1773.13 851.649 1769.91 853.288 cv
1766.7 854.925 1765.76 859.784 1767.85 863.899 cv
cp
1792.52 851.333 mo
1798.24 862.579 1794.51 876.012 1784.17 881.275 cv
1773.85 886.537 1760.78 881.669 1755.05 870.421 cv
1749.32 859.176 1753.06 845.745 1763.39 840.482 cv
1773.72 835.217 1786.78 840.088 1792.52 851.333 cv
cp
1744.01 817.102 mo
1746.11 821.218 1750.59 823.308 1753.81 821.671 cv
1757.02 820.034 1757.96 815.176 1755.86 811.06 cv
1753.77 806.947 1749.29 804.854 1746.07 806.493 cv
1742.86 808.13 1741.91 812.989 1744.01 817.102 cv
cp
1768.67 804.536 mo
1774.4 815.782 1770.66 829.215 1760.33 834.477 cv
1750 839.74 1736.94 834.872 1731.21 823.624 cv
1725.48 812.381 1729.22 798.95 1739.54 793.687 cv
1749.88 788.422 1762.94 793.293 1768.67 804.536 cv
cp
1720.16 770.305 mo
1722.26 774.418 1726.75 776.511 1729.96 774.874 cv
1733.17 773.237 1734.11 768.376 1732.02 764.263 cv
1729.92 760.149 1725.44 758.055 1722.23 759.694 cv
1719.01 761.33 1718.07 766.191 1720.16 770.305 cv
cp
1744.83 757.739 mo
1750.55 768.981 1746.81 782.415 1736.48 787.678 cv
1726.15 792.94 1713.09 788.072 1707.36 776.826 cv
1701.63 765.583 1705.37 752.153 1715.7 746.89 cv
1726.03 741.625 1739.1 746.495 1744.83 757.739 cv
cp
1696.32 723.51 mo
1698.42 727.623 1702.9 729.713 1706.12 728.076 cv
1709.33 726.437 1710.27 721.581 1708.18 717.468 cv
1706.08 713.352 1701.6 711.26 1698.38 712.899 cv
1695.17 714.535 1694.22 719.393 1696.32 723.51 cv
cp
1720.98 710.944 mo
1726.71 722.186 1722.97 735.62 1712.64 740.883 cv
1702.31 746.145 1689.25 741.277 1683.52 730.032 cv
1677.79 718.786 1681.53 705.355 1691.85 700.093 cv
1702.19 694.827 1715.25 699.696 1720.98 710.944 cv
cp
f
1986.23 -93.8742 mo
2016.61 -88.5163 2046.99 -83.1603 2077.37 -77.8024 cv
2086.5 -76.195 2083.98 -62.0461 2074.88 -63.6511 cv
2044.5 -69.009 2014.12 -74.3649 1983.73 -79.7228 cv
1974.61 -81.3303 1977.12 -95.4792 1986.23 -93.8742 cv
cp
1981.13 -64.9787 mo
2011.51 -59.6208 2041.9 -54.2624 2072.28 -48.9069 cv
2081.4 -47.2971 2078.89 -33.1486 2069.78 -34.7555 cv
2039.4 -40.1115 2009.02 -45.4694 1978.64 -50.8278 cv
1969.52 -52.4347 1972.02 -66.5837 1981.13 -64.9787 cv
cp
1976.04 -36.0837 mo
2006.42 -30.7277 2036.8 -25.3698 2067.18 -20.0138 cv
2076.3 -18.4045 2073.79 -4.25311 2064.69 -5.86053 cv
2034.3 -11.216 2003.92 -16.5744 1973.54 -21.9299 cv
1964.42 -23.5397 1966.93 -37.6906 1976.04 -36.0837 cv
cp
1981.75 -254.501 mo
1993.82 -252.372 2005.89 -250.243 2017.96 -248.116 cv
2027.08 -246.507 2024.57 -232.356 2015.47 -233.963 cv
2003.4 -236.09 1991.33 -238.218 1979.26 -240.345 cv
1970.14 -241.955 1972.65 -256.106 1981.75 -254.501 cv
cp
2040.14 -244.206 mo
2052.21 -242.077 2064.27 -239.95 2076.34 -237.821 cv
2085.47 -236.212 2082.95 -222.061 2073.85 -223.668 cv
2061.78 -225.795 2049.71 -227.924 2037.64 -230.052 cv
2028.52 -231.66 2031.03 -245.811 2040.14 -244.206 cv
cp
2098.52 -233.911 mo
2110.59 -231.782 2122.66 -229.655 2134.73 -227.527 cv
2143.85 -225.92 2141.34 -211.768 2132.23 -213.373 cv
2120.16 -215.502 2108.09 -217.629 2096.03 -219.758 cv
2086.9 -221.365 2089.41 -235.516 2098.52 -233.911 cv
cp
1946.46 -229.896 mo
1958.53 -227.769 1970.6 -225.64 1982.67 -223.513 cv
1991.79 -221.904 1989.28 -207.755 1980.17 -209.362 cv
1968.1 -211.489 1956.04 -213.618 1943.97 -215.744 cv
1934.85 -217.354 1937.35 -231.503 1946.46 -229.896 cv
cp
2038.55 -199.068 mo
2026.49 -201.194 2014.42 -203.323 2002.35 -205.452 cv
1993.23 -207.059 1995.74 -221.208 2004.85 -219.603 cv
2016.92 -217.474 2028.98 -215.345 2041.05 -213.218 cv
2050.17 -211.609 2047.66 -197.46 2038.55 -199.068 cv
cp
2096.94 -188.773 mo
2084.87 -190.899 2072.8 -193.028 2060.73 -195.157 cv
2051.61 -196.764 2054.12 -210.913 2063.23 -209.308 cv
2075.3 -207.179 2087.37 -205.053 2099.43 -202.924 cv
2108.56 -201.314 2106.04 -187.168 2096.94 -188.773 cv
cp
2122.37 -198.881 mo
2134.43 -196.752 2146.5 -194.623 2158.57 -192.496 cv
2167.69 -190.887 2165.18 -176.738 2156.08 -178.345 cv
2144.01 -180.472 2131.94 -182.601 2119.87 -184.73 cv
2110.75 -186.337 2113.26 -200.486 2122.37 -198.881 cv
cp
1971.39 -195.691 mo
1983.46 -193.562 1995.52 -191.433 2007.59 -189.307 cv
2016.72 -187.697 2014.2 -173.546 2005.09 -175.153 cv
1993.03 -177.279 1980.96 -179.408 1968.89 -181.535 cv
1959.77 -183.145 1962.28 -197.296 1971.39 -195.691 cv
cp
2029.77 -185.396 mo
2041.84 -183.267 2053.91 -181.141 2065.97 -179.012 cv
2075.1 -177.402 2072.58 -163.251 2063.48 -164.858 cv
2051.41 -166.985 2039.34 -169.113 2027.27 -171.243 cv
2018.15 -172.85 2020.66 -187.001 2029.77 -185.396 cv
cp
2088.15 -175.102 mo
2100.22 -172.972 2112.29 -170.846 2124.36 -168.717 cv
2133.48 -167.11 2130.97 -152.958 2121.86 -154.563 cv
2109.79 -156.692 2097.72 -158.819 2085.66 -160.948 cv
2076.53 -162.555 2079.05 -176.706 2088.15 -175.102 cv
cp
1936.09 -171.086 mo
1948.16 -168.959 1960.23 -166.83 1972.3 -164.704 cv
1981.42 -163.094 1978.91 -148.943 1969.8 -150.548 cv
1957.74 -152.676 1945.67 -154.803 1933.6 -156.932 cv
1924.48 -158.542 1926.99 -172.693 1936.09 -171.086 cv
cp
2028.19 -140.255 mo
2016.12 -142.382 2004.05 -144.511 1991.98 -146.637 cv
1982.86 -148.247 1985.37 -162.398 1994.47 -160.794 cv
2006.55 -158.664 2018.61 -156.535 2030.68 -154.409 cv
2039.8 -152.799 2037.29 -138.648 2028.19 -140.255 cv
cp
2086.57 -129.96 mo
2074.5 -132.087 2062.43 -134.216 2050.36 -136.342 cv
2041.24 -137.952 2043.75 -152.103 2052.86 -150.499 cv
2064.93 -148.369 2076.99 -146.243 2089.06 -144.114 cv
2098.19 -142.504 2095.67 -128.353 2086.57 -129.96 cv
cp
2145.71 -119.533 mo
2133.64 -121.66 2121.57 -123.789 2109.5 -125.915 cv
2100.38 -127.525 2102.89 -141.676 2112 -140.071 cv
2124.06 -137.943 2136.13 -135.813 2148.2 -133.687 cv
2157.32 -132.077 2154.81 -117.926 2145.71 -119.533 cv
cp
1894.55 -334.315 mo
1894.61 -334.641 1894.92 -334.859 1895.24 -334.802 cv
2242.58 -273.557 li
2242.9 -273.501 2243.12 -273.19 2243.07 -272.864 cv
2239.06 -250.182 li
2239.01 -249.854 2238.69 -249.638 2238.37 -249.694 cv
2227.47 -251.617 li
2227.68 -252.82 li
1902.15 -310.219 li
1901.94 -309.016 li
1891.04 -310.939 li
1890.71 -310.996 1890.5 -311.307 1890.55 -311.633 cv
1894.55 -334.315 li
cp
2194.99 -150.18 mo
2189.37 -118.316 2158.88 -96.9611 2127.01 -102.582 cv
2117.52 -104.255 li
1954.86 -132.935 li
1945.37 -134.611 li
1913.5 -140.228 1892.15 -170.723 1897.77 -202.588 cv
1913.6 -292.366 li
2210.82 -239.958 li
2194.99 -150.18 li
cp
2176.11 -79.3312 mo
2170.89 -49.7595 li
2123.96 -58.0358 li
2129.17 -87.6047 li
2176.11 -79.3312 li
cp
2107.31 -46.3786 mo
2094.63 25.5633 li
1931.97 -3.11639 li
1944.66 -75.0583 li
1952.37 -118.781 li
2115.02 -90.1012 li
2107.31 -46.3786 li
cp
1933 -91.7057 mo
1892.26 -98.8893 li
1897.47 -128.461 li
1938.21 -121.278 li
1933 -91.7057 li
cp
2193.61 -88.0114 mo
2204.65 -86.0637 li
2195.14 -32.1071 li
2184.09 -34.0549 li
2193.61 -88.0114 li
cp
1869.63 -89.5036 mo
1858.58 -91.4513 li
1868.09 -145.407 li
1879.14 -143.46 li
1869.63 -89.5036 li
cp
1888.54 -296.786 mo
1899.45 -294.862 li
1883.61 -205.085 li
1879.44 -181.396 1887.3 -158.373 1902.7 -142.134 cv
1893.72 -143.717 li
1894.56 -150.102 1890.25 -156.097 1883.85 -157.224 cv
1868.38 -159.953 li
1861.79 -161.114 1855.49 -156.702 1854.33 -150.116 cv
1844.04 -91.7355 li
1842.88 -85.1496 1847.29 -78.8483 1853.87 -77.6872 cv
1869.34 -74.9601 li
1875.93 -73.799 1882.23 -78.2111 1883.39 -84.7971 cv
1883.57 -85.8307 li
1930.5 -77.5549 li
1917.22 -2.21258 li
1916.17 3.71662 1920.15 9.39338 1926.08 10.4393 cv
2095.53 40.3172 li
2101.46 41.3636 2107.13 37.3895 2108.18 31.4578 cv
2121.46 -43.8845 li
2169.73 -35.3732 li
2169.55 -34.3366 li
2168.39 -27.7536 2172.8 -21.4523 2179.39 -20.2907 cv
2194.86 -17.5641 li
2201.44 -16.4025 2207.74 -20.8127 2208.9 -27.3981 cv
2219.2 -85.7819 li
2220.36 -92.3649 2215.95 -98.6662 2209.36 -99.8278 cv
2193.89 -102.554 li
2187.49 -103.684 2181.39 -99.5241 2179.99 -93.2394 cv
2169.68 -95.0578 li
2189.71 -105.051 2204.97 -123.997 2209.14 -147.684 cv
2224.98 -237.461 li
2235.87 -235.541 li
2244 -234.107 2251.79 -239.554 2253.22 -247.685 cv
2257.22 -270.367 li
2258.65 -278.499 2253.2 -286.278 2245.07 -287.711 cv
1897.74 -348.956 li
1889.61 -350.389 1881.83 -344.943 1880.4 -336.811 cv
1876.4 -314.129 li
1874.97 -305.998 1880.41 -298.219 1888.54 -296.786 cv
cp
f
1986.23 2356.13 mo
2016.61 2361.48 2046.99 2366.84 2077.37 2372.2 cv
2086.5 2373.8 2083.98 2387.95 2074.88 2386.35 cv
2044.5 2380.99 2014.12 2375.64 1983.73 2370.28 cv
1974.61 2368.67 1977.12 2354.52 1986.23 2356.13 cv
cp
1981.13 2385.02 mo
2011.51 2390.38 2041.9 2395.74 2072.28 2401.09 cv
2081.4 2402.7 2078.89 2416.85 2069.78 2415.24 cv
2039.4 2409.89 2009.02 2404.53 1978.64 2399.17 cv
1969.52 2397.56 1972.02 2383.42 1981.13 2385.02 cv
cp
1976.04 2413.92 mo
2006.42 2419.27 2036.8 2424.63 2067.18 2429.99 cv
2076.3 2431.6 2073.79 2445.75 2064.69 2444.14 cv
2034.3 2438.78 2003.92 2433.43 1973.54 2428.07 cv
1964.42 2426.46 1966.93 2412.31 1976.04 2413.92 cv
cp
1981.75 2195.5 mo
1993.82 2197.63 2005.89 2199.76 2017.96 2201.88 cv
2027.08 2203.49 2024.57 2217.64 2015.47 2216.04 cv
2003.4 2213.91 1991.33 2211.78 1979.26 2209.65 cv
1970.14 2208.05 1972.65 2193.89 1981.75 2195.5 cv
cp
2040.14 2205.79 mo
2052.21 2207.92 2064.27 2210.05 2076.34 2212.18 cv
2085.47 2213.79 2082.95 2227.94 2073.85 2226.33 cv
2061.78 2224.21 2049.71 2222.08 2037.64 2219.95 cv
2028.52 2218.34 2031.03 2204.19 2040.14 2205.79 cv
cp
2098.52 2216.09 mo
2110.59 2218.22 2122.66 2220.34 2134.73 2222.47 cv
2143.85 2224.08 2141.34 2238.23 2132.23 2236.63 cv
2120.16 2234.5 2108.09 2232.37 2096.03 2230.24 cv
2086.9 2228.64 2089.41 2214.48 2098.52 2216.09 cv
cp
1946.46 2220.1 mo
1958.53 2222.23 1970.6 2224.36 1982.67 2226.49 cv
1991.79 2228.1 1989.28 2242.24 1980.17 2240.64 cv
1968.1 2238.51 1956.04 2236.38 1943.97 2234.26 cv
1934.85 2232.65 1937.35 2218.5 1946.46 2220.1 cv
cp
2038.55 2250.93 mo
2026.49 2248.81 2014.42 2246.68 2002.35 2244.55 cv
1993.23 2242.94 1995.74 2228.79 2004.85 2230.4 cv
2016.92 2232.53 2028.98 2234.65 2041.05 2236.78 cv
2050.17 2238.39 2047.66 2252.54 2038.55 2250.93 cv
cp
2096.94 2261.23 mo
2084.87 2259.1 2072.8 2256.97 2060.73 2254.84 cv
2051.61 2253.24 2054.12 2239.09 2063.23 2240.69 cv
2075.3 2242.82 2087.37 2244.95 2099.43 2247.08 cv
2108.56 2248.69 2106.04 2262.83 2096.94 2261.23 cv
cp
2122.37 2251.12 mo
2134.43 2253.25 2146.5 2255.38 2158.57 2257.5 cv
2167.69 2259.11 2165.18 2273.26 2156.08 2271.65 cv
2144.01 2269.53 2131.94 2267.4 2119.87 2265.27 cv
2110.75 2263.66 2113.26 2249.51 2122.37 2251.12 cv
cp
1971.39 2254.31 mo
1983.46 2256.44 1995.52 2258.57 2007.59 2260.69 cv
2016.72 2262.3 2014.2 2276.45 2005.09 2274.85 cv
1993.03 2272.72 1980.96 2270.59 1968.89 2268.47 cv
1959.77 2266.85 1962.28 2252.7 1971.39 2254.31 cv
cp
2029.77 2264.6 mo
2041.84 2266.73 2053.91 2268.86 2065.97 2270.99 cv
2075.1 2272.6 2072.58 2286.75 2063.48 2285.14 cv
2051.41 2283.01 2039.34 2280.89 2027.27 2278.76 cv
2018.15 2277.15 2020.66 2263 2029.77 2264.6 cv
cp
2088.15 2274.9 mo
2100.22 2277.03 2112.29 2279.15 2124.36 2281.28 cv
2133.48 2282.89 2130.97 2297.04 2121.86 2295.44 cv
2109.79 2293.31 2097.72 2291.18 2085.66 2289.05 cv
2076.53 2287.44 2079.05 2273.29 2088.15 2274.9 cv
cp
1936.09 2278.91 mo
1948.16 2281.04 1960.23 2283.17 1972.3 2285.3 cv
1981.42 2286.91 1978.91 2301.06 1969.8 2299.45 cv
1957.74 2297.32 1945.67 2295.2 1933.6 2293.07 cv
1924.48 2291.46 1926.99 2277.31 1936.09 2278.91 cv
cp
2028.19 2309.74 mo
2016.12 2307.62 2004.05 2305.49 1991.98 2303.36 cv
1982.86 2301.75 1985.37 2287.6 1994.47 2289.21 cv
2006.55 2291.34 2018.61 2293.46 2030.68 2295.59 cv
2039.8 2297.2 2037.29 2311.35 2028.19 2309.74 cv
cp
2086.57 2320.04 mo
2074.5 2317.91 2062.43 2315.78 2050.36 2313.66 cv
2041.24 2312.05 2043.75 2297.9 2052.86 2299.5 cv
2064.93 2301.63 2076.99 2303.76 2089.06 2305.89 cv
2098.19 2307.5 2095.67 2321.65 2086.57 2320.04 cv
cp
2145.71 2330.47 mo
2133.64 2328.34 2121.57 2326.21 2109.5 2324.08 cv
2100.38 2322.47 2102.89 2308.32 2112 2309.93 cv
2124.06 2312.06 2136.13 2314.19 2148.2 2316.31 cv
2157.32 2317.92 2154.81 2332.07 2145.71 2330.47 cv
cp
1894.55 2115.68 mo
1894.61 2115.36 1894.92 2115.14 1895.24 2115.2 cv
2242.58 2176.44 li
2242.9 2176.5 2243.12 2176.81 2243.07 2177.14 cv
2239.06 2199.82 li
2239.01 2200.15 2238.69 2200.36 2238.37 2200.31 cv
2227.47 2198.38 li
2227.68 2197.18 li
1902.15 2139.78 li
1901.94 2140.98 li
1891.04 2139.06 li
1890.71 2139 1890.5 2138.69 1890.55 2138.37 cv
1894.55 2115.68 li
cp
2194.99 2299.82 mo
2189.37 2331.68 2158.88 2353.04 2127.01 2347.42 cv
2117.52 2345.75 li
1954.86 2317.07 li
1945.37 2315.39 li
1913.5 2309.77 1892.15 2279.28 1897.77 2247.41 cv
1913.6 2157.63 li
2210.82 2210.04 li
2194.99 2299.82 li
cp
2176.11 2370.67 mo
2170.89 2400.24 li
2123.96 2391.96 li
2129.17 2362.4 li
2176.11 2370.67 li
cp
2107.31 2403.62 mo
2094.63 2475.56 li
1931.97 2446.88 li
1944.66 2374.94 li
1952.37 2331.22 li
2115.02 2359.9 li
2107.31 2403.62 li
cp
1933 2358.29 mo
1892.26 2351.11 li
1897.47 2321.54 li
1938.21 2328.72 li
1933 2358.29 li
cp
2193.61 2361.99 mo
2204.65 2363.94 li
2195.14 2417.89 li
2184.09 2415.94 li
2193.61 2361.99 li
cp
1869.63 2360.5 mo
1858.58 2358.55 li
1868.09 2304.59 li
1879.14 2306.54 li
1869.63 2360.5 li
cp
1888.54 2153.21 mo
1899.45 2155.14 li
1883.61 2244.92 li
1879.44 2268.6 1887.3 2291.63 1902.7 2307.87 cv
1893.72 2306.28 li
1894.56 2299.9 1890.25 2293.9 1883.85 2292.78 cv
1868.38 2290.05 li
1861.79 2288.89 1855.49 2293.3 1854.33 2299.88 cv
1844.04 2358.26 li
1842.88 2364.85 1847.29 2371.15 1853.87 2372.31 cv
1869.34 2375.04 li
1875.93 2376.2 1882.23 2371.79 1883.39 2365.2 cv
1883.57 2364.17 li
1930.5 2372.45 li
1917.22 2447.79 li
1916.17 2453.72 1920.15 2459.39 1926.08 2460.44 cv
2095.53 2490.32 li
2101.46 2491.36 2107.13 2487.39 2108.18 2481.46 cv
2121.46 2406.12 li
2169.73 2414.63 li
2169.55 2415.66 li
2168.39 2422.25 2172.8 2428.55 2179.39 2429.71 cv
2194.86 2432.44 li
2201.44 2433.6 2207.74 2429.19 2208.9 2422.6 cv
2219.2 2364.22 li
2220.36 2357.64 2215.95 2351.33 2209.36 2350.17 cv
2193.89 2347.45 li
2187.49 2346.32 2181.39 2350.48 2179.99 2356.76 cv
2169.68 2354.94 li
2189.71 2344.95 2204.97 2326 2209.14 2302.32 cv
2224.98 2212.54 li
2235.87 2214.46 li
2244 2215.89 2251.79 2210.45 2253.22 2202.31 cv
2257.22 2179.63 li
2258.65 2171.5 2253.2 2163.72 2245.07 2162.29 cv
1897.74 2101.04 li
1889.61 2099.61 1881.83 2105.06 1880.4 2113.19 cv
1876.4 2135.87 li
1874.97 2144 1880.41 2151.78 1888.54 2153.21 cv
cp
f
2663.96 328.217 mo
2633.11 328.217 2602.26 328.217 2571.41 328.217 cv
2562.15 328.217 2562.16 313.845 2571.41 313.845 cv
2602.26 313.845 2633.11 313.845 2663.96 313.845 cv
2673.22 313.845 2673.21 328.217 2663.96 328.217 cv
cp
2663.96 298.873 mo
2633.11 298.873 2602.26 298.873 2571.41 298.873 cv
2562.15 298.873 2562.16 284.504 2571.41 284.504 cv
2602.26 284.504 2633.11 284.504 2663.96 284.504 cv
2673.22 284.504 2673.21 298.873 2663.96 298.873 cv
cp
2663.96 269.534 mo
2633.11 269.534 2602.26 269.534 2571.41 269.534 cv
2562.15 269.534 2562.16 255.162 2571.41 255.162 cv
2602.26 255.162 2633.11 255.162 2663.96 255.162 cv
2673.22 255.162 2673.21 269.534 2663.96 269.534 cv
cp
2696.26 485.624 mo
2684 485.624 2671.75 485.624 2659.49 485.624 cv
2650.23 485.624 2650.25 471.253 2659.49 471.253 cv
2671.75 471.253 2684 471.253 2696.26 471.253 cv
2705.52 471.253 2705.51 485.624 2696.26 485.624 cv
cp
2636.97 485.624 mo
2624.72 485.624 2612.46 485.624 2600.21 485.624 cv
2590.94 485.624 2590.96 471.253 2600.21 471.253 cv
2612.46 471.253 2624.72 471.253 2636.97 471.253 cv
2646.23 471.253 2646.22 485.624 2636.97 485.624 cv
cp
2577.69 485.624 mo
2565.43 485.624 2553.18 485.624 2540.92 485.624 cv
2531.66 485.624 2531.68 471.253 2540.92 471.253 cv
2553.18 471.253 2565.43 471.253 2577.69 471.253 cv
2586.95 471.253 2586.94 485.624 2577.69 485.624 cv
cp
2726.74 455.266 mo
2714.48 455.266 2702.23 455.266 2689.98 455.266 cv
2680.71 455.266 2680.73 440.897 2689.98 440.897 cv
2702.23 440.897 2714.48 440.897 2726.74 440.897 cv
2736 440.897 2735.99 455.266 2726.74 455.266 cv
cp
2630.69 440.897 mo
2642.95 440.897 2655.2 440.897 2667.46 440.897 cv
2676.72 440.897 2676.7 455.266 2667.46 455.266 cv
2655.2 455.266 2642.95 455.266 2630.69 455.266 cv
2621.43 455.266 2621.45 440.897 2630.69 440.897 cv
cp
2571.41 440.897 mo
2583.66 440.897 2595.92 440.897 2608.17 440.897 cv
2617.44 440.897 2617.42 455.266 2608.17 455.266 cv
2595.92 455.266 2583.66 455.266 2571.41 455.266 cv
2562.15 455.266 2562.16 440.897 2571.41 440.897 cv
cp
2548.12 455.266 mo
2535.87 455.266 2523.61 455.266 2511.36 455.266 cv
2502.1 455.266 2502.11 440.897 2511.36 440.897 cv
2523.61 440.897 2535.87 440.897 2548.12 440.897 cv
2557.39 440.897 2557.37 455.266 2548.12 455.266 cv
cp
2696.26 425.908 mo
2684 425.908 2671.75 425.908 2659.49 425.908 cv
2650.23 425.908 2650.25 411.536 2659.49 411.536 cv
2671.75 411.536 2684 411.536 2696.26 411.536 cv
2705.52 411.536 2705.51 425.908 2696.26 425.908 cv
cp
2636.97 425.908 mo
2624.72 425.908 2612.46 425.908 2600.21 425.908 cv
2590.94 425.908 2590.96 411.536 2600.21 411.536 cv
2612.46 411.536 2624.72 411.536 2636.97 411.536 cv
2646.23 411.536 2646.22 425.908 2636.97 425.908 cv
cp
2577.69 425.908 mo
2565.43 425.908 2553.18 425.908 2540.92 425.908 cv
2531.66 425.908 2531.68 411.536 2540.92 411.536 cv
2553.18 411.536 2565.43 411.536 2577.69 411.536 cv
2586.95 411.536 2586.94 425.908 2577.69 425.908 cv
cp
2726.74 395.55 mo
2714.48 395.55 2702.23 395.55 2689.98 395.55 cv
2680.71 395.55 2680.73 381.179 2689.98 381.179 cv
2702.23 381.179 2714.48 381.179 2726.74 381.179 cv
2736 381.179 2735.99 395.55 2726.74 395.55 cv
cp
2630.69 381.179 mo
2642.95 381.179 2655.2 381.179 2667.46 381.179 cv
2676.72 381.179 2676.7 395.55 2667.46 395.55 cv
2655.2 395.55 2642.95 395.55 2630.69 395.55 cv
2621.43 395.55 2621.45 381.179 2630.69 381.179 cv
cp
2571.41 381.179 mo
2583.66 381.179 2595.92 381.179 2608.17 381.179 cv
2617.44 381.179 2617.42 395.55 2608.17 395.55 cv
2595.92 395.55 2583.66 395.55 2571.41 395.55 cv
2562.15 395.55 2562.16 381.179 2571.41 381.179 cv
cp
2511.36 381.179 mo
2523.61 381.179 2535.87 381.179 2548.12 381.179 cv
2557.39 381.179 2557.37 395.55 2548.12 395.55 cv
2535.87 395.55 2523.61 395.55 2511.36 395.55 cv
2502.1 395.55 2502.11 381.179 2511.36 381.179 cv
cp
2795.99 549.084 mo
2795.99 549.415 2795.73 549.684 2795.4 549.684 cv
2442.7 549.684 li
2442.38 549.684 2442.1 549.415 2442.1 549.084 cv
2442.1 526.054 li
2442.1 525.721 2442.38 525.454 2442.7 525.454 cv
2453.77 525.454 li
2453.77 526.677 li
2784.32 526.677 li
2784.32 525.454 li
2795.4 525.454 li
2795.73 525.454 2795.99 525.721 2795.99 526.054 cv
2795.99 549.084 li
cp
2468.15 419.918 mo
2468.15 387.56 2494.47 361.238 2526.83 361.238 cv
2536.47 361.238 li
2701.63 361.238 li
2711.27 361.238 li
2743.63 361.238 2769.95 387.56 2769.95 419.918 cv
2769.95 511.08 li
2468.15 511.08 li
2468.15 419.918 li
cp
2474.44 346.866 mo
2474.44 316.839 li
2522.1 316.839 li
2522.1 346.866 li
2474.44 346.866 li
cp
2536.47 302.47 mo
2536.47 229.415 li
2701.63 229.415 li
2701.63 302.47 li
2701.63 346.866 li
2536.47 346.866 li
2536.47 302.47 li
cp
2716 316.839 mo
2757.37 316.839 li
2757.37 346.866 li
2716 346.866 li
2716 316.839 li
cp
2458.71 358.454 mo
2447.49 358.454 li
2447.49 303.665 li
2458.71 303.665 li
2458.71 358.454 li
cp
2778.03 303.665 mo
2789.25 303.665 li
2789.25 358.454 li
2778.03 358.454 li
2778.03 303.665 li
cp
2795.4 511.08 mo
2784.32 511.08 li
2784.32 419.918 li
2784.32 395.864 2772.59 374.556 2754.6 361.238 cv
2763.72 361.238 li
2764 367.669 2769.28 372.826 2775.79 372.826 cv
2791.49 372.826 li
2798.18 372.826 2803.62 367.388 2803.62 360.701 cv
2803.62 301.419 li
2803.62 294.73 2798.18 289.291 2791.49 289.291 cv
2775.79 289.291 li
2769.1 289.291 2763.66 294.73 2763.66 301.419 cv
2763.66 302.47 li
2716 302.47 li
2716 225.964 li
2716 219.941 2711.1 215.044 2705.08 215.044 cv
2533.02 215.044 li
2526.99 215.044 2522.1 219.941 2522.1 225.964 cv
2522.1 302.47 li
2473.08 302.47 li
2473.08 301.419 li
2473.08 294.73 2467.64 289.291 2460.96 289.291 cv
2445.25 289.291 li
2438.56 289.291 2433.12 294.73 2433.12 301.419 cv
2433.12 360.701 li
2433.12 367.388 2438.56 372.826 2445.25 372.826 cv
2460.96 372.826 li
2467.46 372.826 2472.74 367.669 2473.03 361.238 cv
2483.5 361.238 li
2465.51 374.556 2453.77 395.864 2453.77 419.918 cv
2453.77 511.08 li
2442.7 511.08 li
2434.45 511.08 2427.73 517.795 2427.73 526.054 cv
2427.73 549.084 li
2427.73 557.341 2434.45 564.056 2442.7 564.056 cv
2795.4 564.056 li
2803.65 564.056 2810.37 557.341 2810.37 549.084 cv
2810.37 526.054 li
2810.37 517.795 2803.65 511.08 2795.4 511.08 cv
cp
f
213.961 328.217 mo
183.108 328.217 152.26 328.217 121.41 328.217 cv
112.147 328.217 112.164 313.845 121.41 313.845 cv
152.26 313.845 183.108 313.845 213.961 313.845 cv
223.222 313.845 223.207 328.217 213.961 328.217 cv
cp
213.961 298.873 mo
183.108 298.873 152.26 298.873 121.41 298.873 cv
112.147 298.873 112.164 284.504 121.41 284.504 cv
152.26 284.504 183.108 284.504 213.961 284.504 cv
223.222 284.504 223.207 298.873 213.961 298.873 cv
cp
213.961 269.534 mo
183.108 269.534 152.26 269.534 121.41 269.534 cv
112.147 269.534 112.164 255.162 121.41 255.162 cv
152.26 255.162 183.108 255.162 213.961 255.162 cv
223.222 255.162 223.207 269.534 213.961 269.534 cv
cp
246.257 485.624 mo
234 485.624 221.747 485.624 209.492 485.624 cv
200.229 485.624 200.246 471.253 209.492 471.253 cv
221.747 471.253 234 471.253 246.257 471.253 cv
255.521 471.253 255.505 485.624 246.257 485.624 cv
cp
186.974 485.624 mo
174.717 485.624 162.464 485.624 150.209 485.624 cv
140.943 485.624 140.961 471.253 150.209 471.253 cv
162.464 471.253 174.717 471.253 186.974 471.253 cv
196.235 471.253 196.218 485.624 186.974 485.624 cv
cp
127.689 485.624 mo
115.434 485.624 103.179 485.624 90.9243 485.624 cv
81.6612 485.624 81.6782 471.253 90.9243 471.253 cv
103.179 471.253 115.434 471.253 127.689 471.253 cv
136.953 471.253 136.936 485.624 127.689 485.624 cv
cp
276.742 455.266 mo
264.485 455.266 252.23 455.266 239.975 455.266 cv
230.711 455.266 230.729 440.897 239.975 440.897 cv
252.23 440.897 264.485 440.897 276.742 440.897 cv
286.003 440.897 285.988 455.266 276.742 455.266 cv
cp
180.692 440.897 mo
192.947 440.897 205.202 440.897 217.457 440.897 cv
226.721 440.897 226.704 455.266 217.457 455.266 cv
205.202 455.266 192.947 455.266 180.692 455.266 cv
171.431 455.266 171.446 440.897 180.692 440.897 cv
cp
121.41 440.897 mo
133.665 440.897 145.917 440.897 158.172 440.897 cv
167.438 440.897 167.421 455.266 158.172 455.266 cv
145.917 455.266 133.665 455.266 121.41 455.266 cv
112.147 455.266 112.164 440.897 121.41 440.897 cv
cp
98.125 455.266 mo
85.8701 455.266 73.6128 455.266 61.3604 455.266 cv
52.0967 455.266 52.1138 440.897 61.3604 440.897 cv
73.6128 440.897 85.8701 440.897 98.125 440.897 cv
107.386 440.897 107.371 455.266 98.125 455.266 cv
cp
246.257 425.908 mo
234 425.908 221.747 425.908 209.492 425.908 cv
200.229 425.908 200.246 411.536 209.492 411.536 cv
221.747 411.536 234 411.536 246.257 411.536 cv
255.521 411.536 255.505 425.908 246.257 425.908 cv
cp
186.974 425.908 mo
174.717 425.908 162.464 425.908 150.209 425.908 cv
140.943 425.908 140.961 411.536 150.209 411.536 cv
162.464 411.536 174.717 411.536 186.974 411.536 cv
196.235 411.536 196.218 425.908 186.974 425.908 cv
cp
127.689 425.908 mo
115.434 425.908 103.179 425.908 90.9243 425.908 cv
81.6612 425.908 81.6782 411.536 90.9243 411.536 cv
103.179 411.536 115.434 411.536 127.689 411.536 cv
136.953 411.536 136.936 425.908 127.689 425.908 cv
cp
276.742 395.55 mo
264.485 395.55 252.23 395.55 239.975 395.55 cv
230.711 395.55 230.729 381.179 239.975 381.179 cv
252.23 381.179 264.485 381.179 276.742 381.179 cv
286.003 381.179 285.988 395.55 276.742 395.55 cv
cp
180.692 381.179 mo
192.947 381.179 205.202 381.179 217.457 381.179 cv
226.721 381.179 226.704 395.55 217.457 395.55 cv
205.202 395.55 192.947 395.55 180.692 395.55 cv
171.431 395.55 171.446 381.179 180.692 381.179 cv
cp
121.41 381.179 mo
133.665 381.179 145.917 381.179 158.172 381.179 cv
167.438 381.179 167.421 395.55 158.172 395.55 cv
145.917 395.55 133.665 395.55 121.41 395.55 cv
112.147 395.55 112.164 381.179 121.41 381.179 cv
cp
61.3604 381.179 mo
73.6128 381.179 85.8701 381.179 98.125 381.179 cv
107.386 381.179 107.371 395.55 98.125 395.55 cv
85.8701 395.55 73.6128 395.55 61.3604 395.55 cv
52.0967 395.55 52.1138 381.179 61.3604 381.179 cv
cp
345.994 549.084 mo
345.994 549.415 345.73 549.684 345.396 549.684 cv
-7.29588 549.684 li
-7.62449 549.684 -7.89646 549.415 -7.89646 549.084 cv
-7.89646 526.054 li
-7.89646 525.721 -7.62449 525.454 -7.29588 525.454 cv
3.77297 525.454 li
3.77297 526.677 li
334.325 526.677 li
334.325 525.454 li
345.396 525.454 li
345.73 525.454 345.994 525.721 345.994 526.054 cv
345.994 549.084 li
cp
18.1446 419.918 mo
18.1446 387.56 44.4697 361.238 76.8321 361.238 cv
86.4678 361.238 li
251.63 361.238 li
261.273 361.238 li
293.63 361.238 319.953 387.56 319.953 419.918 cv
319.953 511.08 li
18.1446 511.08 li
18.1446 419.918 li
cp
24.439 346.866 mo
24.439 316.839 li
72.0962 316.839 li
72.0962 346.866 li
24.439 346.866 li
cp
86.4678 302.47 mo
86.4678 229.415 li
251.63 229.415 li
251.63 302.47 li
251.63 346.866 li
86.4678 346.866 li
86.4678 302.47 li
cp
266.004 316.839 mo
307.372 316.839 li
307.372 346.866 li
266.004 346.866 li
266.004 316.839 li
cp
8.70998 358.454 mo
-2.50633 358.454 li
-2.50633 303.665 li
8.70998 303.665 li
8.70998 358.454 li
cp
328.03 303.665 mo
339.247 303.665 li
339.247 358.454 li
328.03 358.454 li
328.03 303.665 li
cp
345.396 511.08 mo
334.325 511.08 li
334.325 419.918 li
334.325 395.864 322.589 374.556 304.599 361.238 cv
313.715 361.238 li
314 367.669 319.282 372.826 325.786 372.826 cv
341.491 372.826 li
348.182 372.826 353.616 367.388 353.616 360.701 cv
353.616 301.419 li
353.616 294.73 348.182 289.291 341.491 289.291 cv
325.786 289.291 li
319.095 289.291 313.661 294.73 313.661 301.419 cv
313.661 302.47 li
266.004 302.47 li
266.004 225.964 li
266.004 219.941 261.104 215.044 255.082 215.044 cv
83.0156 215.044 li
76.9937 215.044 72.0962 219.941 72.0962 225.964 cv
72.0962 302.47 li
23.0816 302.47 li
23.0816 301.419 li
23.0816 294.73 17.6426 289.291 10.9566 289.291 cv
-4.75047 289.291 li
-11.4389 289.291 -16.8779 294.73 -16.8779 301.419 cv
-16.8779 360.701 li
-16.8779 367.388 -11.4389 372.826 -4.75047 372.826 cv
10.9566 372.826 li
17.461 372.826 22.7407 367.669 23.0274 361.238 cv
33.5015 361.238 li
15.5108 374.556 3.77297 395.864 3.77297 419.918 cv
3.77297 511.08 li
-7.29588 511.08 li
-15.5503 511.08 -22.2656 517.795 -22.2656 526.054 cv
-22.2656 549.084 li
-22.2656 557.341 -15.5503 564.056 -7.29588 564.056 cv
345.396 564.056 li
353.65 564.056 360.366 557.341 360.366 549.084 cv
360.366 526.054 li
360.366 517.795 353.65 511.08 345.396 511.08 cv
cp
f
2444.11 1028.34 mo
2604.64 1343.4 li
2672.18 1308.99 li
2677.89 1306.08 2680.16 1299.07 2677.24 1293.35 cv
2663.11 1265.61 li
2662.34 1265 2661.68 1264.24 2661.21 1263.32 cv
2658.45 1257.9 2655.69 1252.48 2652.93 1247.06 cv
2620.82 1263.42 li
2608.26 1269.83 2592.82 1264.81 2586.42 1252.24 cv
2507.15 1096.67 li
2500.75 1084.1 2505.76 1068.66 2518.33 1062.26 cv
2550.43 1045.9 li
2547.67 1040.48 2544.91 1035.06 2542.15 1029.64 cv
2541.68 1028.73 2541.45 1027.75 2541.41 1026.77 cv
2527.28 999.029 li
2524.36 993.308 2517.35 991.02 2511.65 993.926 cv
2444.11 1028.34 li
cp
2408.9 1046.28 mo
2398.75 1051.45 2389.5 1058.13 2381.5 1066.03 cv
2317.85 1131.28 li
2447.15 1385.05 li
2537.22 1371.92 li
2548.45 1370.07 2559.29 1366.51 2569.43 1361.35 cv
2591.84 1349.93 li
2431.3 1034.87 li
2408.9 1046.28 li
cp
2300.82 1148.71 mo
2297.21 1152.28 2296.33 1157.73 2298.63 1162.26 cv
2410.79 1382.38 li
2413.1 1386.91 2418.02 1389.4 2423.17 1388.55 cv
2432.13 1387.24 li
2307.25 1142.13 li
2300.82 1148.71 li
cp
2556.96 1058.71 mo
2524.85 1075.06 li
2519.34 1077.87 2517.15 1084.63 2519.95 1090.14 cv
2599.22 1245.72 li
2602.03 1251.23 2608.79 1253.43 2614.3 1250.62 cv
2646.41 1234.26 li
2616.59 1175.74 2586.77 1117.22 2556.96 1058.71 cv
cp
2724.88 1222.82 mo
2741.43 1214.39 2730.29 1202.23 2723.95 1189.79 cv
2699.26 1141.32 2674.56 1092.85 2649.86 1044.39 cv
2645.82 1036.45 2632.83 996.195 2618.81 998.639 cv
2598.81 1008.83 2578.8 1019.03 2558.79 1029.22 cv
2563.82 1039.08 li
2570.34 1051.89 li
2659.79 1227.44 li
2666.31 1240.25 li
2671.34 1250.1 li
2689.18 1241.01 2707.03 1231.91 2724.88 1222.82 cv
cp
2540.08 992.505 mo
2552.27 1016.41 li
2572.54 1006.08 2592.82 995.751 2613.1 985.419 cv
2613.73 985.096 2614.35 984.908 2614.96 984.773 cv
2636.5 977.871 2643.71 1000.65 2651.32 1015.58 cv
2665.29 1043 2679.26 1070.41 2693.23 1097.83 cv
2707.56 1125.97 2721.9 1154.11 2736.24 1182.26 cv
2743.44 1196.38 2758.26 1216.07 2741.98 1229.57 cv
2732.48 1237.45 2718.84 1242.03 2707.96 1247.57 cv
2697.93 1252.68 2687.9 1257.79 2677.86 1262.91 cv
2690.05 1286.82 li
2696.56 1299.6 2691.47 1315.29 2678.71 1321.79 cv
2604.76 1359.47 li
2598.36 1362.73 li
2575.95 1374.15 li
2564.5 1379.99 2552.25 1384.01 2539.43 1386.13 cv
2444.12 1400.01 li
2444.12 1400.01 li
2425.38 1402.75 li
2414.15 1404.6 2403.15 1399.03 2397.98 1388.9 cv
2285.83 1168.79 li
2280.67 1158.65 2282.63 1146.48 2290.64 1138.58 cv
2303.96 1124.93 li
2303.96 1124.93 li
2371.31 1055.89 li
2380.45 1046.86 2390.91 1039.32 2402.37 1033.48 cv
2424.78 1022.06 li
2431.18 1018.8 li
2505.13 981.122 li
2517.89 974.617 2533.57 979.725 2540.08 992.505 cv
cp
2430.79 1116.09 mo
2428.69 1111.97 2424.2 1109.88 2420.99 1111.51 cv
2417.77 1113.15 2416.84 1118.01 2418.93 1122.13 cv
2421.03 1126.24 2425.51 1128.34 2428.73 1126.7 cv
2431.94 1125.06 2432.88 1120.2 2430.79 1116.09 cv
cp
2406.13 1128.65 mo
2400.4 1117.41 2404.14 1103.97 2414.47 1098.71 cv
2424.8 1093.45 2437.86 1098.32 2443.59 1109.56 cv
2449.32 1120.81 2445.58 1134.24 2435.25 1139.5 cv
2424.92 1144.76 2411.86 1139.89 2406.13 1128.65 cv
cp
2454.29 1162.21 mo
2452.19 1158.1 2447.7 1156 2444.49 1157.64 cv
2441.28 1159.28 2440.34 1164.13 2442.43 1168.25 cv
2444.53 1172.36 2449.01 1174.46 2452.23 1172.82 cv
2455.44 1171.18 2456.38 1166.32 2454.29 1162.21 cv
cp
2429.63 1174.78 mo
2423.9 1163.53 2427.64 1150.1 2437.97 1144.83 cv
2448.3 1139.57 2461.36 1144.44 2467.09 1155.68 cv
2472.82 1166.93 2469.08 1180.36 2458.75 1185.62 cv
2448.42 1190.89 2435.36 1186.02 2429.63 1174.78 cv
cp
2478.13 1209.01 mo
2476.04 1204.89 2471.55 1202.8 2468.34 1204.43 cv
2465.12 1206.07 2464.18 1210.93 2466.28 1215.05 cv
2468.37 1219.16 2472.86 1221.26 2476.07 1219.62 cv
2479.28 1217.98 2480.23 1213.12 2478.13 1209.01 cv
cp
2453.47 1221.58 mo
2447.74 1210.32 2451.48 1196.89 2461.81 1191.63 cv
2472.14 1186.37 2485.2 1191.24 2490.94 1202.48 cv
2496.67 1213.73 2492.93 1227.16 2482.6 1232.42 cv
2472.27 1237.69 2459.2 1232.82 2453.47 1221.58 cv
cp
2501.98 1255.8 mo
2499.88 1251.69 2495.39 1249.6 2492.18 1251.23 cv
2488.97 1252.87 2488.03 1257.73 2490.12 1261.85 cv
2492.22 1265.96 2496.7 1268.05 2499.92 1266.41 cv
2503.13 1264.78 2504.07 1259.92 2501.98 1255.8 cv
cp
2477.31 1268.37 mo
2471.59 1257.12 2475.33 1243.69 2485.66 1238.43 cv
2495.99 1233.17 2509.05 1238.04 2514.78 1249.28 cv
2520.51 1260.53 2516.77 1273.96 2506.44 1279.22 cv
2496.11 1284.48 2483.05 1279.61 2477.31 1268.37 cv
cp
2525.82 1302.6 mo
2523.72 1298.49 2519.24 1296.39 2516.02 1298.03 cv
2512.81 1299.67 2511.87 1304.53 2513.97 1308.64 cv
2516.06 1312.76 2520.55 1314.85 2523.76 1313.21 cv
2526.97 1311.58 2527.92 1306.71 2525.82 1302.6 cv
cp
2501.16 1315.17 mo
2495.43 1303.92 2499.17 1290.49 2509.5 1285.23 cv
2519.83 1279.96 2532.89 1284.83 2538.62 1296.08 cv
2544.35 1307.33 2540.62 1320.76 2530.29 1326.02 cv
2519.96 1331.28 2506.89 1326.41 2501.16 1315.17 cv
cp
2394.84 1163.03 mo
2392.74 1158.91 2388.25 1156.82 2385.04 1158.46 cv
2381.82 1160.09 2380.89 1164.96 2382.98 1169.07 cv
2385.08 1173.18 2389.56 1175.28 2392.77 1173.64 cv
2395.99 1172 2396.93 1167.14 2394.84 1163.03 cv
cp
2399.3 1186.44 mo
2388.97 1191.71 2375.9 1186.84 2370.17 1175.59 cv
2364.45 1164.35 2368.19 1150.92 2378.52 1145.65 cv
2388.85 1140.39 2401.91 1145.26 2407.64 1156.51 cv
2413.37 1167.75 2409.63 1181.18 2399.3 1186.44 cv
cp
2418.68 1209.82 mo
2416.58 1205.71 2412.1 1203.62 2408.89 1205.26 cv
2405.67 1206.89 2404.73 1211.75 2406.83 1215.87 cv
2408.92 1219.98 2413.4 1222.07 2416.62 1220.44 cv
2419.83 1218.8 2420.78 1213.94 2418.68 1209.82 cv
cp
2423.15 1233.24 mo
2412.81 1238.51 2399.75 1233.64 2394.02 1222.39 cv
2388.29 1211.15 2392.03 1197.71 2402.36 1192.45 cv
2412.69 1187.19 2425.75 1192.06 2431.48 1203.3 cv
2437.21 1214.55 2433.47 1227.98 2423.15 1233.24 cv
cp
2442.52 1256.62 mo
2440.43 1252.51 2435.94 1250.42 2432.73 1252.05 cv
2429.51 1253.69 2428.57 1258.55 2430.67 1262.66 cv
2432.77 1266.78 2437.25 1268.87 2440.47 1267.24 cv
2443.68 1265.6 2444.62 1260.74 2442.52 1256.62 cv
cp
2446.99 1280.04 mo
2436.66 1285.3 2423.59 1280.44 2417.86 1269.19 cv
2412.13 1257.94 2415.87 1244.51 2426.2 1239.25 cv
2436.53 1233.98 2449.6 1238.85 2455.33 1250.1 cv
2461.06 1261.35 2457.32 1274.78 2446.99 1280.04 cv
cp
2466.37 1303.42 mo
2464.27 1299.31 2459.79 1297.21 2456.57 1298.85 cv
2453.36 1300.49 2452.42 1305.35 2454.52 1309.46 cv
2456.61 1313.58 2461.09 1315.67 2464.31 1314.03 cv
2467.52 1312.39 2468.47 1307.53 2466.37 1303.42 cv
cp
2470.83 1326.83 mo
2460.5 1332.1 2447.44 1327.23 2441.71 1315.99 cv
2435.98 1304.74 2439.72 1291.31 2450.05 1286.05 cv
2460.38 1280.78 2473.44 1285.65 2479.17 1296.9 cv
2484.9 1308.14 2481.16 1321.57 2470.83 1326.83 cv
cp
f
-5.89207 1028.34 mo
154.642 1343.4 li
222.183 1308.99 li
227.887 1306.08 230.155 1299.07 227.24 1293.35 cv
213.106 1265.61 li
212.336 1265 211.68 1264.24 211.214 1263.32 cv
208.453 1257.9 205.692 1252.48 202.931 1247.06 cv
170.824 1263.42 li
158.258 1269.83 142.823 1264.81 136.421 1252.24 cv
57.1485 1096.67 li
50.7471 1084.1 55.7598 1068.66 68.3257 1062.26 cv
100.433 1045.9 li
97.6719 1040.48 94.9082 1035.06 92.147 1029.64 cv
91.6817 1028.73 91.4512 1027.75 91.4097 1026.77 cv
77.2779 999.029 li
74.3623 993.308 67.3555 991.02 61.6519 993.926 cv
-5.89207 1028.34 li
cp
-41.1035 1046.28 mo
-51.249 1051.45 -60.5029 1058.13 -68.5019 1066.03 cv
-132.153 1131.28 li
-2.85203 1385.05 li
87.2149 1371.92 li
98.4531 1370.07 109.292 1366.51 119.428 1361.35 cv
141.835 1349.93 li
-18.6982 1034.87 li
-41.1035 1046.28 li
cp
-149.176 1148.71 mo
-152.794 1152.28 -153.674 1157.73 -151.366 1162.26 cv
-39.2124 1382.38 li
-36.9018 1386.91 -31.98 1389.4 -26.8325 1388.55 cv
-17.8652 1387.24 li
-142.754 1142.13 li
-149.176 1148.71 li
cp
106.957 1058.71 mo
74.8501 1075.06 li
69.3447 1077.87 67.147 1084.63 69.9522 1090.14 cv
149.222 1245.72 li
152.03 1251.23 158.792 1253.43 164.299 1250.62 cv
196.407 1234.26 li
166.59 1175.74 136.773 1117.22 106.957 1058.71 cv
cp
274.883 1222.82 mo
291.427 1214.39 280.29 1202.23 273.952 1189.79 cv
249.256 1141.32 224.56 1092.85 199.864 1044.39 cv
195.819 1036.45 182.829 996.195 168.81 998.639 cv
148.806 1008.83 128.796 1019.03 108.792 1029.22 cv
113.817 1039.08 li
120.341 1051.89 li
209.789 1227.44 li
216.315 1240.25 li
221.335 1250.1 li
239.184 1241.01 257.034 1231.91 274.883 1222.82 cv
cp
90.084 992.505 mo
102.268 1016.41 li
122.544 1006.08 142.823 995.751 163.099 985.419 cv
163.733 985.096 164.351 984.908 164.956 984.773 cv
186.499 977.871 193.712 1000.65 201.319 1015.58 cv
215.287 1043 229.256 1070.41 243.226 1097.83 cv
257.564 1125.97 271.903 1154.11 286.243 1182.26 cv
293.437 1196.38 308.261 1216.07 291.981 1229.57 cv
282.475 1237.45 268.843 1242.03 257.963 1247.57 cv
247.928 1252.68 237.895 1257.79 227.86 1262.91 cv
240.046 1286.82 li
246.558 1299.6 241.475 1315.29 228.708 1321.79 cv
154.762 1359.47 li
148.36 1362.73 li
125.952 1374.15 li
114.498 1379.99 102.253 1384.01 89.4248 1386.13 cv
-5.87986 1400.01 li
-5.87986 1400.01 li
-24.625 1402.75 li
-35.8462 1404.6 -46.854 1399.03 -52.0185 1388.9 cv
-164.172 1168.79 li
-169.334 1158.65 -167.367 1146.48 -159.365 1138.58 cv
-146.04 1124.93 li
-146.04 1124.93 li
-78.6914 1055.89 li
-69.5459 1046.86 -59.0942 1039.32 -47.6279 1033.48 cv
-25.2202 1022.06 li
-18.8183 1018.8 li
55.1275 981.122 li
67.8946 974.617 83.5718 979.725 90.084 992.505 cv
cp
-19.2129 1116.09 mo
-21.31 1111.97 -25.7959 1109.88 -29.0078 1111.51 cv
-32.2251 1113.15 -33.1631 1118.01 -31.0683 1122.13 cv
-28.9712 1126.24 -24.4878 1128.34 -21.2734 1126.7 cv
-18.0591 1125.06 -17.1181 1120.2 -19.2129 1116.09 cv
cp
-43.8745 1128.65 mo
-49.6025 1117.41 -45.8613 1103.97 -35.5322 1098.71 cv
-25.2031 1093.45 -12.1396 1098.32 -6.40916 1109.56 cv
-.681131 1120.81 -4.4199 1134.24 -14.749 1139.5 cv
-25.0781 1144.76 -38.144 1139.89 -43.8745 1128.65 cv
cp
4.28762 1162.21 mo
2.19289 1158.1 -2.29588 1156 -5.50779 1157.64 cv
-8.72215 1159.28 -9.66258 1164.13 -7.56785 1168.25 cv
-5.47068 1172.36 -.987283 1174.46 2.22707 1172.82 cv
5.44143 1171.18 6.38479 1166.32 4.28762 1162.21 cv
cp
-20.3716 1174.78 mo
-26.1025 1163.53 -22.3589 1150.1 -12.0317 1144.83 cv
-1.70262 1139.57 11.3633 1144.44 17.0913 1155.68 cv
22.8194 1166.93 19.0806 1180.36 8.75149 1185.62 cv
-1.57517 1190.89 -14.6435 1186.02 -20.3716 1174.78 cv
cp
28.1333 1209.01 mo
26.0362 1204.89 21.5503 1202.8 18.3384 1204.43 cv
15.1216 1206.07 14.1807 1210.93 16.2779 1215.05 cv
18.375 1219.16 22.856 1221.26 26.0728 1219.62 cv
29.2847 1217.98 30.2305 1213.12 28.1333 1209.01 cv
cp
3.47414 1221.58 mo
-2.25877 1210.32 1.48488 1196.89 11.8115 1191.63 cv
22.1406 1186.37 35.2041 1191.24 40.937 1202.48 cv
46.6651 1213.73 42.9263 1227.16 32.5972 1232.42 cv
22.2705 1237.69 9.20217 1232.82 3.47414 1221.58 cv
cp
51.9766 1255.8 mo
49.8819 1251.69 45.3936 1249.6 42.1817 1251.23 cv
38.9673 1252.87 38.0264 1257.73 40.1211 1261.85 cv
42.2183 1265.96 46.7017 1268.05 49.9165 1266.41 cv
53.1309 1264.78 54.0713 1259.92 51.9766 1255.8 cv
cp
27.315 1268.37 mo
21.5869 1257.12 25.3306 1243.69 35.6572 1238.43 cv
45.9864 1233.17 59.0498 1238.04 64.7803 1249.28 cv
70.5083 1260.53 66.77 1273.96 56.4405 1279.22 cv
46.1138 1284.48 33.0454 1279.61 27.315 1268.37 cv
cp
75.8203 1302.6 mo
73.7232 1298.49 69.2368 1296.39 66.0249 1298.03 cv
62.8081 1299.67 61.8697 1304.53 63.9668 1308.64 cv
66.062 1312.76 70.5454 1314.85 73.7622 1313.21 cv
76.9741 1311.58 77.9175 1306.71 75.8203 1302.6 cv
cp
51.1607 1315.17 mo
45.4302 1303.92 49.1739 1290.49 59.5005 1285.23 cv
69.8301 1279.96 82.8931 1284.83 88.624 1296.08 cv
94.3545 1307.33 90.6157 1320.76 80.2866 1326.02 cv
69.96 1331.28 56.8916 1326.41 51.1607 1315.17 cv
cp
-55.164 1163.03 mo
-57.2612 1158.91 -61.7475 1156.82 -64.9594 1158.46 cv
-68.1762 1160.09 -69.1147 1164.96 -67.0195 1169.07 cv
-64.9223 1173.18 -60.4389 1175.28 -57.2246 1173.64 cv
-54.0102 1172 -53.0693 1167.14 -55.164 1163.03 cv
cp
-50.7002 1186.44 mo
-61.0317 1191.71 -74.0952 1186.84 -79.8257 1175.59 cv
-85.5542 1164.35 -81.8154 1150.92 -71.4839 1145.65 cv
-61.1543 1140.39 -48.0913 1145.26 -42.3603 1156.51 cv
-36.6323 1167.75 -40.3735 1181.18 -50.7002 1186.44 cv
cp
-31.3208 1209.82 mo
-33.4155 1205.71 -37.9013 1203.62 -41.1133 1205.26 cv
-44.3301 1206.89 -45.271 1211.75 -43.1738 1215.87 cv
-41.0766 1219.98 -36.5957 1222.07 -33.3789 1220.44 cv
-30.167 1218.8 -29.2236 1213.94 -31.3208 1209.82 cv
cp
-26.8545 1233.24 mo
-37.186 1238.51 -50.2495 1233.64 -55.98 1222.39 cv
-61.7104 1211.15 -57.9692 1197.71 -47.6401 1192.45 cv
-37.311 1187.19 -24.2451 1192.06 -18.5171 1203.3 cv
-12.7866 1214.55 -16.5278 1227.98 -26.8545 1233.24 cv
cp
-7.47508 1256.62 mo
-9.57224 1252.51 -14.0581 1250.42 -17.27 1252.05 cv
-20.4868 1253.69 -21.4277 1258.55 -19.3305 1262.66 cv
-17.2334 1266.78 -12.75 1268.87 -9.53318 1267.24 cv
-6.32078 1265.6 -5.37791 1260.74 -7.47508 1256.62 cv
cp
-3.01121 1280.04 mo
-13.3403 1285.3 -26.4062 1280.44 -32.1367 1269.19 cv
-37.8672 1257.94 -34.126 1244.51 -23.7969 1239.25 cv
-13.4678 1233.98 -.401834 1238.85 5.32863 1250.1 cv
11.0591 1261.35 7.31838 1274.78 -3.01121 1280.04 cv
cp
16.3687 1303.42 mo
14.2735 1299.31 9.78762 1297.21 6.57326 1298.85 cv
3.35891 1300.49 2.41799 1305.35 4.51516 1309.46 cv
6.60988 1313.58 11.0938 1315.67 14.3106 1314.03 cv
17.5225 1312.39 18.4658 1307.53 16.3687 1303.42 cv
cp
20.8325 1326.83 mo
10.503 1332.1 -2.56248 1327.23 -8.29099 1315.99 cv
-14.0215 1304.74 -10.2803 1291.31 .0488498 1286.05 cv
10.3784 1280.78 23.4439 1285.65 29.1724 1296.9 cv
34.9004 1308.14 31.1616 1321.57 20.8325 1326.83 cv
cp
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.1.0
%%For: (Oleg) ()
%%Title: (1000-black19_64.eps)
%%CreationDate: 7/21/2020 2:49 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj:.!p@n0)Y%t`R\:P'"?X28!77G%@%1jej"Bg%tnc.t%3Muo]EJZi,&)]-)D*t-t<G2?&;an"%(pgi6P1=f;fmdi56G/s?
%oU#1>]HY68Q2gTn()Q_I1UB6m<=VZbT]8OB%kAVQi_<<QQ;o!pjMIXoWH`d,/p?PmUQ]QJ7C1g1gGQUnhXJMa1`F(Qiu,!:^2(&U
%Z[__gC.>H8pI*L$A'1g>.D&S=3^+k6;5<nW2kRS</f4RQ;nMmnY!Z.5luZWh0K+)]4PPe)VhA+I-ZFEE5$RDLbNN&Oj$&9)UM5Dk
%SMQ`>])[J#pj`ua!&"*\B%cD!3c%RKTGN"B"FW8JWpca?/T&'lJVeXJLNEH'hfu9\d/,3/j8TA?7R,jE_'f()2GZ6#^c;PK6/d3S
%%$q.\#(C(aC^JH4Ob7qchQ.S8PK?\Q_`C@dQGYi-E29=S)b>V;,"d6M;m;%QLga/2Rfn9MF!u60QGT@i@`OrBOuIlsbhk@,qkd4G
%>E46/X\R1<$NqnL1.Qha$YS:affF%R*T3b\D*!m+O^0_X5l4r><6ZP2]1Aj7:63'8H8[jX]lpN9_V+Em>jpBd\"5>R1f5!5B9JIU
%fuVna[+#Yc[2.mn:@dqJa^In?@-"Q5l]MBFWiZ&=?Kqi]L]?p3DZM,-B,Va'8*nJh-BSIK4_\'F<b"MG-!s3p'h=D\>#o@1a/\(H
%fH2"mXL\>\HiH-b#?Gq-Atqj*00I78>Sb/0O)d4&Z;HM6Fd,K;^W+&))IOmLqq8M@pd3S?Li1\8Kc2"nD7IDsi5#Blf.jn74_AJ8
%\@C.r]?PGmD#aB>JS<.XR(`s7fWeX'kE>;0n,csK^&V<:0AeOB0EupnpB_d>1\eq>5\J:4Z)_gsII7!bbPbhki)Ks`Yh!@F2m[*T
%>m%E^?:N/iN/#aNd=qRM)='5k@K<#)6XiQlF6.+0:mNH4Kgqb"DoVgQKBn\eWA7LaA-cp+>+OR<<YYd=X*)Nog9%UTL\]JV\Z4=3
%<o/l$[/TGiZUUho&]/@Kg3kTXY6,7Zf3+RZb2YsnAj*V^B#Q7r@]aO[ilg)"XZuYDfD@A7YL+Z/e'"Pt5O/KbB!pt'C"t:C@#n<h
%RCPQ:*RgMOU"Qmn-On(f;(A(GD[?F4amSuUlMnK&p$[3F-Fc$0ZfI"^RJ5h\^=8dqBqE+CH9tAm/25ok*7Um7Ek`RO$o1lB$U[?@
%Q`UIb#%+NKFj,DRg@ZdZ;I?S91ek9G?I.D78GNiARQFu46=7_fSmrRX(OLZu4,?thqk&9UnEoKhEstlu4t!EU+q(1=k80ICI=XWJ
%[0BkE!G>S:U"_<<Of^piBWG^Wm8L)g[8P1a:_1COSq]MY^PIA#Ij3Qb0u.kc@aMTUK0^I&_ju64C0dahmoHDdq4Ls0W3]g7!2n`.
%R#&!R,e1.>Y:1ucA-al8TPpe'\>]$DY`C2V'D'7TPOPIT')ijm$/Q)g@Tq*CNX&1&*QLTD2#S8n2(QZks#!YSaTFi]C!GCi-d="s
%ls.S_#kKo$g=-Z)>;+iCW;!e)h<D?TO<Z]Ak1A\!]=t)A5PWk:qO3Y7g$[G((h0]/fN_pRPJ8HB@'n0XbC&]/+MBbW2uUccSFACI
%NGe]jfJ.jHA5Vd?*hCPG$g0`Ypt%4:b^X2*Y'#6>rX$"WX7;;TLKm(;)OH?Clu&k;m]kj,$UpWm)BV*a0$m%?h)))Didm=[f.l"f
%j^;rJaul'703SOqq6(U=ShS@%bulMT9BBcbgan_[RT*%NV/ed]Pq0<P!5GpOgM5&t\T`lJIkp2\S2-qOS-SL<bN1)'Lh=3QJ"<06
%/iUu84@2s1#N]tLi<SF(hM@Qk9ZN?#9iIo&1Oh2r\Va7iJ"LR`GlhRE:+9WNB$h2i:RR6Tqfn5'V6rMf#8Cq/O!<,(R,s8?"md,_
%G2"bjZ&blRCu"BnGY2;:<,%;"b+!-?]S1SBKpPnG)Ip"ZbN61cq8=2Kf[`iS[]-WS%k%HS5^.!5.rI<"*M_R^/u,n7%HDHb#u(?G
%ZlA/:#TVVT/cn0UO(``AAYWr$MFPi`c#^Dlb]WqUACN:\^sfSXqW65qQ&k546`BWQDk^_>`^LkN_+FAGHhf<SoL\YOO;>b6^?3IC
%*a%sa(peSB',?^;UYrfl_g@YXS/<Jd>E)Ct>:F%Kf.A61"MTiTf;92QHo$8DpmhH3IX'kijfdGQQu(/D>L)iR?&hMJ!$9!DoqU$X
%/I^u&[a`;!%AFXW`6"mmMu0VOL\IA78Fk7'R#RE^WRT1Q(Lj6kY10N_r?V@i*=q`!$U1SD%f$1jk6/h>9S1#Xl2?VE)5f`\bgs+W
%S=E3Yj5!l99R6Qa<Qn56r)6^Zs$<Q1r\o;2&X#:JCspL[Sk]=2N\^Plabcl:j0i6O[7p0F&)/Bpr>ZImp@)#>Q;Os!?9C`]j*5Xh
%T5o7WADo<EIopmY5ql6$<dIWKJ(T8K1;%>1RMC4ITSI2;JSE3OEapog25/=]-iIT$b:f2oc>-<'1$RgAq?[Bu$Qf##VT6Ekn10K*
%A`-L7$MI!i0]&"R9tKZeJ\UV+GX96rilF)4fR?GBg[F*WomcPereXXhBaHn#rd]SV%jgjm`Fq*P>0a4s"9,u5e44BoQ`<J;<7el\
%hrlZPU@4j5<c6FFoqrU9rlp-5V_Iq%R!o1r.<n[iWBgbqLmaQBPH`ccRSbp3`@j_NF"0Q&i0?dGOcTFea04So+2,I]?H7n'_F\qZ
%FT[BiE0t#o1*@,#W9Nhl@sGfIYOZ]"*FYS>g1:(>0>D7n`Wq!<d]lAf@0I2;o^l8!#@`/YnJ%bl]CG&S#[gc5*M_^nWiYBn`9KXg
%*SX57[Dtc>k<U?so@]>BE;GPg*$.X"H$R[FlSU:M4N&3U62eodC&MD%p87l"Lht]Q%i'Dc=R=VNT:A(^U<M/5>\&,1']kWdpMt;@
%\rDW.Raj)$&&6=:)RUd'-.W/aK<F5YWb#(#mQp54,n&Vmksak5?,oB6g#MVSZ;mrN4#(%\F(Si;XL]dC?i*hRp]1n;q[k2QZla6"
%V>-6LU3Ihn>07YfP:5nL0.,U&MC0F6FP$0f:SJPQek))Jr5q8XO#*<;ZRB/0Dd#KRln$:@Eg`Ieq/=[D!EN"<=VOY,@Iha=r!:AB
%r(1Nu]FZkNdH3rj7H+7OcD#P]_F\qZ5O'dlnL'krnNtI,ppf![PS%Fa&SFs'l.DfDYi8G>MrKGXBsIMaEgLAVcd[3&jYs8VS?e[Q
%LZ`qDiAHh;oK@2(H3Eb2=#%u8r2Acp7amD)HCi:>(b,rX`XFL8UM5#%cVJm9p9/r1cWD4RpRX,ro5!7RCWal)H!nJ4YKd"!bca`p
%?V@i#AHpauE,CcoRYaWto4g(bp-#T;")B]s2Y1Z>YP(o-RX7QgE=Da!PK"4G/GN$8Q)A@!E+VSs2^<HW7NPYc1S^?U%I&hqq.(#6
%&K/u/Sdm$WqMkrGrGT?S$=$uiqSTCGCW<!-A,+=/V!7F\I!CS".%+YInaYp(LWF5!7OR0ZfcdN4j!*jq4k#,ZnXBUCj(8#/q;C.)
%p^I2YKF>L9FOZfS,-r_CGg0=;D"cqYpF)M]-eG_ppro).$(F*JAaE3?Bpj,@_kmA--b`7m2#8l$L1;b\s-+<R(-K9DHtj/]HR%^'
%nJM:JCqEC=09SIJfVG#8LC="b2NPlLM\!GV[+g\LSod3f;u`OU)lFp:pSaQR0ArPV=8f(`j;%rC)I"9JJVK5G!=dF!:,WPf*,p%Z
%rqDoGCZ=Brp\`U\`tb@\FXhO?j!EDTD1).N%kdM6Rm5UW+7]`dcO#c`\.S7*rLEi7DtZi=g&CGVs7a-)%dj:ViPC/1VTZ=EhqA"t
%pm`c#!"7SZ7u'.[o:>:EcLuY!O>VC.a)'(GCe;rhcZch\3sg79;cCQ%mJ0MA&+EDD.TtkR[r'.P#37fS002"3a1.B$:U=*.J,btU
%Re9qM5_i/J+2I,l_RDI_%=ENq$osAE66GJU[WKVY@-Y2CJ<.@+2;EVsIG^hj,fdQI:f-^VdB#[cQgCe?2QMr<duetJ\Rh4h:%4A/
%-HOGX[Pr]Bm$cV\Cmh+o]4Ef_gtA+<db,.Vf<6Rs1om7nl=[I"frTX7s-WYNiaEeHXMHiVeMC:aYsfq_"&6dB<k[8`kd?sK(=VS0
%jt]ZJU-_6Pj4%2WVBf9<O`:Hb<3!WupG01HAeDm`lPi9fd9FTqbIeLUr1aRsi*-<oDAcduq'_7$&N-grq.QMG7m/pNlYf!7c)Jtq
%0=/O=\>4dh(05["W\@D%R2'%?KpPs$AQF'O2R]+j?=nnX=lJJS&a@m^?H*eLIa0sGM('S/SE+Ca.nDnlB>NKJBI>u.s)Ci(R#$@3
%YAsotrNHS]%lp$LLJ<$h;>-eMCr-PhPQ%cmmt\D"5GJ(_2dlR9-V`*l:=cX5h#Ee^_iV3[9M@urS3;^C14nO^GS8Ia;j<+LOP]s(
%/2iMm7^FHrrTrH%NVi,#d*:7mQY'$#)OHolcTJ*R=#!>@n$AA1r%$^a3DHhejc:FhrOQ@tO#)G_rQj.[]I:)XOUiHneaphWX4G3n
%L_ip5G\J^O)A`j+\_K))BFQQ"jO&*ES'@Q:NW4ns^u(:BcV+Ni9esJ&qdXr*1<\%A+[b99DXhKOrS8rK3k+5C)dBuPT1Cn.]^.pp
%?=;b0;5,un]E##fi[\@-@QYCSgTeA>a77b9Ae/)U.'ktS'P(pa3lXPh?u8rbQkTqu,)TMDA,J5LX(0B=(m?;7=WM!Qa-`#N`rANn
%Nu;-An9!1FVrq\%44g_u`K.#s6YRJ4b?Hi"^[3-.4YA`2s5A#^j*;k@b:%Omg9GL?q,IO/mn89/_iI;?*XX.@Eu$IriCQB?UMZl3
%k%iRb'YU:KDu,NQ2D5U:C38bhTV0&FEXV<\PH90sh<k6X#7YZ]%rX5ffNt)C4[(?EnDf[\aO>=F\FS=jG2B!1!Znf1.9Mp@G25e@
%6f#aNam?8uZc<90Xn_LY`s2LB_G@o#.WfIaKVu@/piE$UiX&U\HER2s+*o]f;XO4-j>AHPHHD+Y#JR(:lK^lH'7S`[$ON#GfZTK;
%9[dFR!>'PSkSXU)6^=Ji]qNgK$?JsH,p!Bh;71Z:k8*)@*'sEsC@U?&VmBWG,Q`o\Qh0>SB%brjS"!u1ZYXN";k[>P2]7?+V:h@D
%-ooK5VDt(BJL@LI>X%?0q%6Poc?Z(!QHmb'\QLsP9BTpOgc&*04A4k7/=d1=59QZk7`;+#FInG(RSp^igFbXu$nq/2Vrr+B5j&hG
%NoB06.HB#COC<a_R?lI?:&T,ZB$\Mf(djoY+*5;)Qi5S>-)T%7rA+u*(f.iR#!e3^jEdRt1Q'^W+)A0O7a^N!\`'Mmf^AZ?o2<YP
%qMe/:4MK!cC@'"d4k!k0.9*sZ[%b>0S=#-dEdH9>8I#A_m_,Yc)BH3L6'(Q.jkH[0I<cm*q;Jt21i>89IGS;gp"MRJV/X1N4T.+L
%k.DNnoU/p*'DV9UEREtF/Rc2ai<dL5oc=oL*_qm*]</A91qf&0gjPKAs$pUEIV80"`$Okj62ogHDoKU-Cs3fFo2tF(oc9N['Krr>
%j"IIiosDEcml<"H..iJWR684k4s_bs#T7P"A8Ar#+lib]:2'[,BWh)-gMam<d9FV&bT?[\Dmd\ORWcUH(4h*BAq5".mJ[?ah7)6c
%rMpu_4_[Z6#)]8['[8>Z5JE5Lit&"*'`GB@b276f'-D7D>QoU$@d'oGrAW3#l:69X_SAq,;D/PgV#&Jk<JG/u-^t;nDR__s0C6Aa
%3;F0JVk"&M>#qP!2a+j[@&d[/c0AgKlbf121tLNspk"RP.1Q(SBbh\<\KE4^3-ko#P9(^WcnO_#nXCuM`!8j%IWlPH-XT?LfJpjT
%E>g@KZ^2+r.d6[cNdZ67nOlq<PoB1fTAfCJhS]9oT1JV9ZXBXB`r+o<bl6mO^5Xq59_j<tGTZ,HoA6BobLc<[O'ZAKlSo@1A)b1K
%h14HH4MGAVr;%Jih>ZJ'do:5lf'Lu8B>U*R2t=3ro'oY_hQQrJgc0.alCX1Nq?[\SpiQb/n]8WNlCRdKAXr[bILeM8l_!0l9`,q$
%9Yl2(2rNE.]7D&J^^dgd:uh,]m-2bZ@\[Hr3Ob>6##?P8rgq\8]N9'9j5JUCdq2$I&#atU"@?D+.\!Q)eJ_rrA'uVRpcOe$4%>oU
%??iS:%eUm0ZtU-PI+`D-hB^Wg'[NZ)NJ(:RkF8I(oVgI"FK-3CF(WmsA[/K]%\XRAIqPBl)3&gmbF91m;!5UlUPXi2H@-7$9g%e?
%ObF=CFlPp=ZdQm@d\.n(d9:CQiVZu0SK5!52+K3Id0dV`&u<K[Rcb`UNDfdf8CStre)R^haMK@tLmjFS*]'FjLAT-.s)m+mCDsgN
%X``Uk$,,j6()/@R"k+9'Fk[YgOjPkSc'Igo<J!)WFj\74`f40HH=d36l'f*Kg,f0!(+\iY?4ZnLc@US&iT9t=dQUbT;Xi'@K?cJ*
%61XOc8,qR5!^$>PcS&X<f:oBB%Nbu5#'2nCfY9B/)qni\(=^/#YBCGFEsu5=-C_@,c'm>S`;*0t:[c@?rc;XYb8L3aWuTGWZB#AD
%ZDOW?IZO\=<IB$_d1uSp90+HIIsH4Vq/@(f@="ieY5Z@X#Ops]g3s;#pl9a2pRJGZDn(%H('6:Y@"EDj*4=G$c8m`%7I&Jeb8N7E
%dkM_[f`G"ql)MND&ZX.B&q/]2%6itq0?L6#f"gYjN6q""W"'<m6SbhD6B2O_q"MP/`V6kY3853ZfsaJ$A,+[?RZ.cBhI#48jICes
%LL`Kh+4fOlWYIK'\sWB$?Ee3)eGjSOPW,]dc/:-6@2HOua?C5+#M??W\DD!de\eRXi=Qu5Z1FO0+%IO=glFo(X^V4&=[!01MiXKb
%r5H^l;PX3cS'bthIMqUJ1LBj^(=6D_HhcpVZ`7Cjn0N3aT0S+E^s\b+3@:>B@$eM&g-cM,J;i@nTf'Ga28=N6'<S(^oq,3@s-s[n
%U8l1&DmHgUmc;JF]L[85_FLM#m']!!r>3&!M4jEdY&E>Zmo3cRDe]&$<RHf7JWL=N-o`.6RekpGS(uVNWW(Z<q,sTM0)n-2iI)?_
%Ug:<a5KAbAOH5&`8J6I;B;SQ'KPjR=$`90t?5G_QqEg9]$"6C?j=^i;ngH:u`l&Fcn9UJRKeM]eni/>*im.q)9B8MnXK%@,Imo^5
%(\#jN>d*'+5DA$I@^c4QAHf[JYUX.K4!uWGq<JYC/S=XPM*Vp<10N.phVp[9ciPEJ7'*/$G)R&AY('h6qL?/Fq3"Z9nYC6/hJX`s
%VKq%M0>[]ml8F'i)JGes0O)8-bA<XgT.?8iHKH8Clb4UM?1FI'm>fl*rh:$mn'#V&[;Q#SkaNMd\t*HBo@5G*jKRg\`FY"JF4YXp
%I9F28D>"D!*Ttd&28Q,3I(F]`%MV=c5Z.F*r:@%U@n"RBmZZKqdTaJS55R:Fe\kotHU(GHFm^2P6r`A/Ze2Ne^4K3<kdR4u>MbpH
%=L4I1U5`jc%q!M-"qoW3OjkJJDR?H_(Z0,a4kY]bO5is0<-l.VULs12&@ii.V5=uN)LJP=g9oKsJ"gXa[+hk_K'Ug\aKd5gfqJ;%
%<i9=EXce_dFmn@=cRj4V!_5=u*N_"L!*PBdmGkptd*,j?DOD`._L>4S#srB2okr"k<p@=TH!en)HkrZcd4o'p-InDGmp0e_`MsBe
%nD(>HHMlkk>o`X&>6CT&=18[2qe-m"r96DhD3]Xc^-);NCTh?&#+q=.DQWkt/]VV'=ZXH&IGo3=_jBt<ds[?#@RIS:?$Z%&N\=P@
%^c&<`e`g;7,&1S:eNHik)i`a6G&FP@i>FAI\u-MOn\]?'B@cd9%L`irR&tJ)9paau\c'5[]4f^@+V+0gpW0,!_5Ts'L%(H36Y4$d
%[7fse&L2\]VF,B\cgf9D]2-$CEm0k)IktkI3#YW#Raj*?m7tj-p2NMd&ArnJI<qt59rGS1>*%VYAdcQg=5T.7iYp]fF=\Lba(Tg)
%8-e54;`_&,J1Spr":&]?B't4b5,(H/IrkmGl]]&YN^K?rZ"qa)Q-@Z<$K52R[QDCY<FHH?5Y70mS1fMQNOCl5@>QH!57ju&>g+)#
%R7H(:a+=j6FY($CXjo\+J@>4-P-_A+LQT+jM2q:f@u,t'+m*Sh`!d"e4%E/,;&&'+J%`Z*f^1JF^q6u0#BAebD>7)l2a(8>=he?q
%1\P88AA^E<k6Lk$J(/+u2'^p@i=%Z`)2s%50ICacA<s<7h5(_X_'*^D1g_qP&8`?Z!,MA2#2oXH8Br#4i*loRej\rs)0bncSO\@P
%b:`_4kh0_h,mtG-/V5.][h_9N@e_PdG4^gfH'mnJS*n\6500bT?gL+Ha>@Y>?J''!^%ME">J"W-$c(ffM"Q]8M!#nr4,edj[lo(2
%FSFo]QlgoEJrhX3[30"eg87T"0O-#e+u?7VJR(f*b-oV2`kGpS7roEH:>J/lrBXcJmb`Dp=2P3#Jp+[EAsmZMmX3[%DR?G2OoFeU
%BR';igB;.`1&!K_([L&V+BEu#o^3[uBSIHnM:;@fJQ*)E<;MP*`E"FHY+]Ga_nUK[?cR&1mp(KAqq4m%@J!&4`aM")?H7frCg^BE
%U_cp.#6.o4>CV(Kc#03[E9$E]U]eo]AEo'oFp#8,@3Fbi4__@A-$Gg<1J4>WgK=>PG1`p+4$PP$U>PD\qRL^Ance>?!3+e"aSQ<8
%q*Mo2^!1Ic3jr:+>s@:T)f-SO6n]Ikhkr@@>=T!u[DMle#VNMerM"@/\q%"L,A!MQ/dt?lm_,dL,ED)<@rHR+N\WG\V,*J2r>a?+
%FSnOHg]c)$oYsnQJ(KI,1:2tY7f+uiAt>Buih'R,!er<8_S__/eT-#0OZqkr-f",*5$\lr.FjlhZ9;BAH)got2uR_MFh-R!!T]6e
%>9cK'K@VtELW_e%Ws6W`=''Ifr^gbPGdHMs)b??-!)OtKiD3gT"g59+6-MW+E8@DuH<ASOFoKb8We2;K6r!):VaJ4Tm>%;e4+?=]
%#*Gh8.6Q8W)<hFhJgg@D*G:i#dK'l7Tf$XlT)cVaK/$^/g1@>IMD"A!TcM.+\,il,o0<YVi(_7q>RJrM5#uZopO#b@&1j7Ql<H?+
%XD22CIGXX>`m$GKpq6&3."m<LB/cu=?XMN3P0qHDPtqjJ`WB:cXNp"H%DsDL`LdR_6@_]04=FY$;^Y/P$^@[]N=fGu:A@L]$dL(p
%YP.^.8>$spF3KCAQHZf1gb@U2!oN9c`IPnEr$"aC:!"5I\NaIuNCRf"oSZ,K*#:cgars!DL,nL>p&+q.;u!2XC<u!6Hs$Dfo!e/e
%4hC#mn[$;/4kfkU&@Wh=/,<'jHY62QpY?#$\J$&<.$>J]2?]&(mXcN`IiYo3mArLAXjm;Ko-#o,K<uQjB1`E8Tl76nfn11\lRf+X
%)2rm$,YmfP.sDrOcb)!uj:l;louP'*<k#M!("6.rrN'e>raubP%d2Kl??^UZ/M#+[)5H$P'a3!B2lh7/qi&tD/7=ULZAbZ/]YmEJ
%=A\87rI'9AW_2iTHC;2?0P`@:g%8MLG`NA+DDmW'`(+Pfm,&cKjP$<Xk[W[t0j*nQ*2#[*P61c.L7Y6>?@=/K1_i4>H[)%<^$YrF
%5B!#:Nr2th;K$r\SsOZgUO8dArDd80&1f\Gl.-4O_lEADm42)oK<3hH[LX/K<D!2-RBd5\*'j_L&"S7GODhL_&Z8#(f9Wg[<hBum
%L8`s.m'1-$Q<aagrnVHl1BS0b^/*rel29,lcf;2oFROs;g$Vrn-G<?Oro/q]ME[YfD/0508jea3"&R`^7)!6_Ol;YpQls)3M"Y^H
%Z5`MQN7&Q9U':G'0.>lXnp90rj`falf+%^t<5dX\&6rioEL1W.1C$G3hQr"3oCr!mcfbSYqmUn,W;i/uUeBWNXg6If*oAc=1H4b$
%#,dun_OgcAhSX[.1M]D!UbC6(=FoS&+%YWp&&c=r[+MYl7OM^DBsu`FMb3_.T)P8,2\n,7W>ED1c>fVCAMD9%O)]KD)oZ!)`-$CQ
%`V9+I5LBE`p0KroV8T&dZ1NCKLj`9druff#/*mM/`&CF*GuE@W]q\XL)Vk_soNoaEXJ'\GJ_P8U[%]o`47N3>o_mT<eMiL<IAXOs
%kkpMD^L't;N7m*O<mOLMfS$.mJ2_JCaj,uMk%E5-*\Fp_d3oI?i/cF"J%F_4E@!p_cBaUukQqg+g&.l55g<bj')cG_lL3\XkfX7<
%)P<;Gq`u0ck0bec=Q]'8A^+:A(m%RE9<":BVZu5b%tO4aqgP`9%:@lb%2IK.peYKe]!&$hW'EPAN>L9OXC7_"$)t->TK*JjJ(s>(
%Tn36N]=oV*Xq(rtA1Bjf@"UW^<l8Q-fR5rM[]K:4ir/oeTHB@A(oV-E/D>;,Ho6Q4pEuQY!Z?Q81WRq`?[BVAdu=Kq3sL>BR@X.=
%O1MQ1]0'2Web4,)<W"k#pg\9mK:p2Lebj0_F@_)AE<5[8i13#%*:PlGe$eFN%!h`R]B;C1I.]'4_K,MEc%`]`g@]4sBP&);hKP:!
%F>db(;V>_9Ska'A!n,a7r@!+lg-&TM?/<*I?J[NAedfWpP>EgYg8e:5Sf@Z]P^b9h*4LlGHU0[L:FbrTOn68W,AD?HF16N2Bm#>K
%.Oc?OMnC=[F'LfsP'C<n(*]4YiK_L8>-f5`*t%<f9k6'?DtSDsFCNSnVjYVlAEMn&p.d=S%PL&-b`sV__h;bK[CDpelu`popG(nZ
%ZkfduR<CEXlVpo/Pkf2H+Y?s=?>@ZM0MS:c*>I?ND*c^qlG`#T>r3W6?[Ou:]ALVVA?201O)22@p!q"7@Q,%S/!XN]i`GCO_F1,G
%J#UG&OkS>T3EGC_/*[R.`0$so7$5g.7^dK,0A/Upk]Zm_q8%e]9<X1o.IE1M[$QJ[/i;HnMmtN7?'n*2$*4o+7JSbOY=O_D>L>lZ
%Bf1(Hp9Y`p0;#0%Ap7hLiaBL+=Y(Ikr+)oVbF&^,Rci62[:LpPD-.;RV-%SSG<+/V^$A-D\YW@Q+;icoW/*-eZ?^F3M)L77p!rH)
%c#pFC[r&,0HFk^t>K&G6>2A-66P^=?m0hjB\nnC5,$3L&ip-dSR6TC8K\"@L:!M6,%G.#e83FRCJ!jQjAUJA],(6N9n#17'@<Ln1
%FLr\1k3m$>S]2k8[%j_HUKDE!9BEO3XP/M2K1a3^d#1eVj6u/l''mQg;Tcb#e&#f5]^S1]:`#LR/'Oh9qQd\rg2]Ao>p^(bs7fdg
%M2`ie$YduG.rKKB-b1QLG+Z77JM+F@2G5^D%j]F!MIF/]R,"/8HGpBj9=Q&pJIcRh@4tQR2VB0F4;,9Bh<dhWNUfu+jqBDKM=UN%
%CXOo&(Lg"qr,c^=n[K7W=,NP^G+j-pbmP_q5ZGG3Sqie-2p&+uh/8iX9R2E#oq=D`9ritPq`UWYgPKr'=X'0K\41F[B7BH88I7nA
%Bp+PTl:"CX3_2\CXie2]EHJ`a;UT*VV18\MelH:hrpZ5C_kanIhd[B7/e/'6Cp%Z""0"\JO)YEq#5m07/2kk8;QqC8q9E5%J'dG?
%Eq>8I?**Kds/P2$[QODnf<?!<bGsuuDPdJ.c!\2YSD>Fugt#*7CphhR1V:?R?O>a`T,j?5ki2\>3k#iM8tj?JL(iefeSr/$PH'pq
%XWL#.*b%X=GkjVbpqoEI'ee+@acjF`LV6eaftJF7Y&lGR2mN>Zr:ZUK^bi8*o-CSB>r5umdk,Z",$3X2Zq&aF[U0V1X`a?+Es5iV
%h3<rWn74?2[``ZkD(4O,6ap2A31o%Ld'[S*/ChS6c[r*+8#tAL2[@$!TC9RnM/[SlZa/2./CgN+Vh;q![2hfC!QrU_8i2$.5=[?s
%Bd8nm:9S&oX]7!!fB5[\\RlokW?l-9$3]8:PJuhQ;JuapPa]GDo[<,I#(5P+EqHHa>]KL"2>4j$/kbJ4AL/<Z]ZrBB)OEt_Fa/l+
%eYSISju(HqKohRr6ohjV0GG/F;Q7^0^I!U(")aK6>&rTHeXd+UL[%^sES\>1@<KmkY2tSr^rXtt0_)2teX^PGUoVnu>,2b>XO@dp
%kJo4N`8T[(.(,>)K63BWH!Y3hrqW>1@]XagKi)0c"%-(r?#)ld>aV$2h_`Wh_a$?kInDH`O=s&UVh=;P*Bmcr5ar@*\+.f>GS\n*
%:05?Do.]YRn(md@T7VBTDX-'7Rt9;GT0P19rH?NFdn>:8_9OkHhb:TtLqVRGd5:O7gG)sVn)&+]/L?qKYVkD)?kbL./VY[M+n9>%
%Q=FdWBLEY2K=AVWP-aB"=Yj:#*L__;%,C9^DEm?TCdG8r?2/I[F`WahIYdV5\TR1H!b:K>no8T4LZj8W+_c?Khere\N?f>uI:3E\
%]cOprWD<KJSK=hd35YM$^+uN.otdV_(;Zs6$ZqaS04H(CfV]crc;jU?SE;'hpe!J_r#%G!"+;';>ajeBIPIE-1O:$\;2q.(jXVd9
%Ms=oSYL)`7b&25Hm#Nm6*;@-7nEnNJX>h9Fb%/ua#b,F.[#BDm,[2QKj#rTG=HBqb*Oo,"Tn^KV*PT@-Db<B%^Y3*'%J2Y>oqam_
%M:pp1r,4#/WAZP.f*jK_:c[cg,*J$!7OqU8U"qg7GQ&dIJP_CcU1`TN6NEX3br>/;R_LguU`qp.Kk^5rpDs@:a8s86=LtDg>H,Y<
%IO2;AAc8[OMlZe_C^Vi)0STra]M50VrEpPd)]5N)W4_CfhKU%RR_tMu%%&_nqdI(4DVeo%;6d]O5ZtrX8ZS(>^bhL.^o>H&>$4H;
%m_2<]Bk!-8oW40:O6/LfH?(mL*Z2Up91AKlAhW=,$P(T@2FI=!ru+%Wa0LA7*7Rt1iXM]_LsC`hFWh<=ZZpp7<UUFC&dPP(VtUCO
%b5:qtki(VP@VBCkkDRm(p5.IC0O[G-5q'JUpJ[">kGcG`Gm-Ko?>>%dWTs;mH'g"P[WCb8p(fJ@q&3mR>SQ=<5L5WZ9U0!(GIB>)
%<$[JMi`FNk<9!$10lFZQl^R#4i\NjW'cu#5o;&C!,o]o%)Sd[)iT=nLK:u,8S^Dmeih<IG$O8bMk>6,ac#>0#499so=cQQaYN+s"
%cLuu;Y@1H@V(,KlrbuV6/YfXlb9=Jn,(Nh8H)rc3R-m$sl<;;"3QKPX;tkh`AG9l,GRW#QiS;5V<5!#f`dsr6C?k&'7o/JWX(BB+
%P6*,u8Om^>4nT'KhW-ANVBpR&5Fj.DkGrs"=\'il?n'2kOj[B]/J-O%'78A8Wd\JcC?jc,ANlAqFJ"4T]rq$-?u'UfrDljTR=j.+
%2?MB5f8lIh5kfRZH?u*n80rkahM$O+gIn&?m2!!4k-32PAC>CS'>dHYAJ;9&q);>up)Y<&qK3ka0np3KeY?+Ern6kXGW2iVo+7r0
%g]#$CI_gQh.+N)QW%*:U%)3\075-0<BD-h$C'nb%locS2L/1lp09"N>%!a_9H$DIW.;$O`4SVK)[o[kVfke-NaLPY*3KOf\"'r`2
%`@KC@oP(q&G*aJVT7VuTBc[[",Mu6[2Yf[Mo6`Rb.]NeqD/Q]8c+ZU;kJfC'YYjFYG7bFQZQJK0lF3T"XJaTHG53AriVQpP4Yq8B
%k0].,Td&R\QHTY-F=C(KbhSOslrj^anM;Y:.[[>TV@rHZYe"n(^G7jGLMD?Tgl0F8A!t@EYnUcUUE"@hiNlE1Z>oe?mDl<@17)ao
%SSB@I@&Wm9>D`$Rbt*nlbN=,iI!@uD[[kt9-+4h<HFYV;j;2:uP8t'I6ZD*gMOek.)drDC41VqsP[,GKTREb8b/4(W(>63F[5Q5*
%L$-Os<Q[H=oA;+<f*b]9`[JR/G-1,[i3%=mFQERcc?G-g_jeo(ff[@f`_beRdQFrEM8T8=ggGU(U6`ngjP*s25&uY[6ogmT!c`8*
%53bW!8G"fCbgqAa:m=o'HsWn+GLbm+pA4;J1nTVt4mJ`gj_k;HXcVD!B$]&s2lm7d$rXiF6.rbE%uX6<l_$2)'n@l[kGcMHb50jq
%Kq6gV8G_!]H/1'@K*s*2DH&,CT>UU+`L>6[@RclR?[*$V!k'.tF,_h`d_]CNI`TJs+,==53`cN^WST$b)^j7"c)/dI''Jm3fg&V=
%41/-RlpY2<8u9DjBU>2bK%"Y(;fPa87e6q=O4CU_N>'lLXiSN(BoRf.FuCSV7(XDm`N*2sT#=Lu/0B-X<KR$"gtFr,7lF8'L9djb
%mDY.H(V>+JW:])/\n)Up'C"LZ2C;]:SIt*NbkiQNE2T\N_/;a"^Ir\hJF!Os%-i#7C`Y2sbDGEXHV*%,L>r8sXHgUu$kD91A^a-)
%]A3fH/3]ekD^>eW2pGc5cISlSQPOV@a8)PO:q1h<I!FliWGFT;d_/D]&6fIV1`Jrcib^NE?h+`,b\k!VDT4,?3P(>]0"L`LmK5&o
%T23G$pOF8/BrhfA&o2d'?Y3j7eZ7).5-!m\car`_WrnbEm_^Xo(C\NaJt^1f^(8u,77a1sX-'NT->jL9C(5(FSMA>jFh)Q)PHO)o
%pUBUeAP]Zophsi15kpA:WMY_"4\=@F"&pI&`lA04O938(3"HnFNBS1hK@g%AWShp-'0X"j9<MF,&!'A?;I*WKg@9^$"i0Ap<1aEP
%R(6c)W?SrJ[_MRQh!aO5rK8Sp#IQs.`ELbI:T^`u[+:V>)X89<5o%0E_2[LMqH`+ME,2"Q38l\18gX:R+LMeES*NZ=1&ukJ^TMCN
%U,t)@Yph'K7W!.`("KTUi6M9=3nA900Kg4Bf/[Y=>AN']FXk7N*^T:T6H['K`^?>EN]62(=HN:\p:.06`YDPV6'd&$H1dl?r=rI_
%Z\@T3@5AWhf;!ZRmW^p\a<'G@MbONUbbb+T&S!cJ^aL4F"J5n.M`(X3C2Q3VKn&hA>G6$*rFrLfdN00ln"<`[*&Y2#C/bPYcBEg&
%i?!CSs-@"sHgQQ@!#?Qcrcjl:-7/l=q00m;QOc]U=<C$"b/oN&[JJ*X8c/BViMQn,YM7s_%KadG8/SnN]=l1sHOZ4:g3%Q+A5`/p
%!g*Z'-a_Dq(g;b9-,M$p/XQ%r-u4!@-+KfP3g(7%dtlLecZ7LaM\jZ&SoSf<VU\tQfG.;RCNG+jIoOnPTtFMXVZMX#\m*UYZDVp<
%GbGnt'q/^":^YA#F0%R']sn&AAA@ro2pXe&TkQ-u/OS>V4ip07h/d!]^rWWG\o+o!NlC:f`0uj83a1#t7Kk.Y>?HQ;+-eVQn&r?K
%1c4#p0.%)#Icu]=q5):3V"'\@Mq(mq>VWjoBeE)bH[H"V[TqtqhMgSP^_'a)^m#p,OS^Q3!6<R/r?+h[oVJsCQ!3H2c'["?5q3!D
%\LVg#0(j`!mPLH8`EllVO[Qd&g.<7e!\)o#9s^CgB[*Ih@S1g0df/+Q#IqJD%^+'h#AtQ8gR9dhp8pbZ<urMs(@/Wf3?N?)>l&V^
%l]#'>VubOKb\nIc'Y:9A#GI0H-MI2rDqk]-D8oi.!%jd^@Zd_J6EI[(,g&d)H)5T7fhO]]_X#+g=:]2n+HcAT](*"n_]>T(\$?Tu
%%1tjWA439UAR"=N&(dT1?FtjQ&-1pjNN5T3GVtgI4Lfl8Qs1)B"/2uYi(8O)?#G6A\Q`,n$7AJQDo[3IaM.BB;idLH:b&bek(e0Q
%'XAOqg%=ii/4AepW1q+]CO:Ce>5g-Wa@@lscgm7l`fp(d=O2Ki"#k:(N`_Gi%Qs]?>FG$(mFH&&RZ0-_NnRcc\=0?EYIo=M.)q6]
%@`;M(W`rr\9\u#_aaQgF]&^[#F"*&J7T9bLkHJ^,7imUD/UO8TTD$l8M/JQd2bsI//;Fk;7e?s1C-EK8DJk.Jf^`XqB5i%)DS@qe
%%)P-%1[+(.9FdrhS5$;rOa)&[:8^I.hVkiZ^@UQVSU"+V?@u7%@Z>2a/T53`C\KPJgagkZ-!fLH7,p?:RC;^uEf_\SR:foN48XBV
%O3K%mR!gdeJGX`q3L.R#E9EqE][AjshZZ9P$P*('2+DBHQW/[f5R4]390(=af"knCf2@NS!4(q>ZaI`&^Wa6&@%Ee"Eq*=n;M7Rm
%B%2f!KD.I&VPTSrSf<NlID8C.VKWF*NouI;=B3Z8Fi2IZki#64)lN`X.9K=\]5nM:ahF.o`O1?CeDo9%``m3S"6Ga?Rnu:2cr9kQ
%P$5jgFDY^=r;iA0?IXF@YN(b-PJk.W4[6=H4`CQD#KFa1J-A<^p*jD0UX\kk@VW[7c^Q&0\m,Lg%T_b(pXHUr6F']q/((VT94?Fd
%Y0S\noH+[dD%5%:n(#MA6`:sKa43]$9M:J'YD8(8*ApcJeZhui5]effH%-l6)sKJW\:;4/YV)$<7Flg\Ja:CC^_!V"TQpg>-<!Qa
%RHEG+;qSj\?RX'JorR4Af/H%E+,[1%)C8lZJ%fa8@e]C1A2-8cq/;VIDH9hrY6f(ie=_mVqr91hU^ZoV8-[?IHWY/kjMh/Rq02kZ
%D#um^`cjbi(YcY,4YF'b/<TnVm-S`CEfL(EW`<&C5:gYb.+]('^u2FF455P*kI"I-[guke&)hs`_r#^+NRauYg7<31m^euD`dZ:$
%DH)&Z%M[giA)BIuaOb)aJc#*6GOFWA^3Rk'dqJBGV'1HE\=#;nP+C6KF7Rd9OFFr/g"!D6Yt+iecAn8o5M=XI;oW9^4-hB=c"Fu>
%A&#d$an_:!rNjSb8Yi+cWM@)?[$0fnKbX!Z^]*g$K22fgIq<oNmggD^@G+&o,Z"CXr"#[p$^'"SRYMC]/c5rIlhtl64tN;BT/gaA
%(,>R9MO#aE6&o4*^BWZ7nhPVf4r)NOpiVe7`^FZb(VcQGcM<sh#(A/Pf;NjB2W7#2%L:mKC>"q/HjXcO=,_QSbMhY'Hs+9lF(_0.
%a!,n743$$=JDTk_pm%-pKB!EKiBrF!X+3uMYP@c1^P7nI40J\_@)*jiNX:t;MnUr]FBG"Vf*<;rrnMGl"_"W<JPaY:V7%KtL;hC)
%MATP.AY](Qp0oKh>7lDCJbrtd@H3Xdk/:\0Hm#R(5=KVM+G&),]Y>X9dc-CN=Ld2FShBfE^]%DO0!lfIDP4_Mg62iuNrL7gUBo2h
%NX/^d2ltDLFeJuoR@ciQY<Gi/h@AoX5jIq!"12.3?K\j.'[b#I>Y1Os(9E\I`(kBcRWs#rk4`?:2eUOEddC!a\NV[oM?;c"f8%np
%:3AY/A7)J*`U8tg=EUCG(4!U%@P3WY%"!U&L*O<4:g0l.RI%JRg.J2;']lQTk?dmA<g-#k*m9&uC,1u6<lB]0nZT^YWs=Cko/eP3
%k:@-%SC:'U-%)\T>//eu@oB3+p.<4/26S*f=!b8'bFcOPcd?@9]mg*GCon)*HG0gYHs)G_o[@#,n@D<4O[r3*e`=]dcrj<G*Xu]K
%oDn%!fDp4?]#Kn"Gq[=L6?qq+d)/n.@Nou;[.@>&N^WmkAcBk;+65fgq=S4Q5?HQgnbWud&h%ZKme?/kFE"'tNkg5spN->ln^X[i
%AOBfJAS9GF/roT/mdV5!?X)Ri;D(>E<PZ/k)I<cEP5CUDF%c6HrqWt?Z%#&A/bg,^Yi;MH'<H0MQT)E;Ipfa/lOP=`[X[CX1[JHP
%kiQ6aGe!6umZK7&E$5qfY<Q7GI]f8*p%*%NoS`=3"i&\Q=8_X;eq%12Rt'q.r+!pR7?0dNSs&gG)s@2*s(7C"WTN)E\lAVi3sR/4
%h2CZ5J#'oaqI:Hp$%Mkrrm@?CC+]3Zg"2%0J$F:^:S0K,rJ(rWr>B,8d=8g@)Y@[/PdLIt&@MGHoTA3!kH<,/(YtE<s-:9`o\VcK
%@ijjK]/j$l&#Zfss&361o+s%)ErOKeF2;39m:?,0gZ\F59AI7r^2a,:[njkfrn$/kX1ttfm*GLV7X&aa)*=9kMTmg!"Y*U:F0"h:
%DD'FFI%')UN6OAF5H;UXF7RMo_45\]*15L9B\^l"//qf7Ok03k>eG*CRnGma8os7oFDWXO[sp/W;EC!'c>'8:\b"*8IdWYWJaT8?
%\[fbNs)G2<LT/IdBjo:JLB6]3c25%`<l;eo>\Ek;R@h[1(?UsZh9(,l.U:8SEm"AD04&GcnrgLDYLSX+r79>/Gs69BE\j=I4uetf
%cZ,r[b[kpD5'qK'c0&HB6hAq$_<(K>]fA#iA<#0Qq4+M3^BfTJ0[5"*/7+`_01DKLk"^*C$d3>UkCqHA]ugDcH2+Zfqp4R9qVC2t
%_TlT=^CX31b7"2V1ph5/H7:M;XgPVS0#JWT$[:nQf`bkqrcXu_FBD\E5./!1c-BX?dD+Aj7\I;6FduT>m4JJH5;jF<8gh3]\95Hk
%ZP_`F\])8)Bk?huE'(Rs;o=a:lab<ki^9jE\la9`Pf9!0VsIm!>c]US989g\>V2L!KpV)L,tXZ^>h[9i[n@;`MIi6Q4lt[Bl0,/$
%=NW;!D(j_8mM2#rcB=Kb:&/t3OgkfQF[O!gje_Z^BK9V+?S+nepYk5Ye'5MdfV'lKVb_?0jm:gKmdd1hBJ)Mk.n@coja)'[Sk2.!
%GH-d2oS1ONg\sIJXBu,F?.fL"^M'0'1:;BB3!(0>a>\-4J\+"=(apC]1P&_g;Z`NBiEU=^Aep$bn^VGPc")!L]+=:JE:5[3%VEW/
%;XiroIMmO=rJ*[S-]c^Z?Yc+CZC#lB>mW1?cEAYjM:\$KIAsf`0.rVBVb=J'Ec%9V.tsF3[o0X%Dc]!nj6^S8pjBh+B_LKOk5JUo
%2=\VM=-(rG[FNHqX4F:*f3V^13RYdFS[gNkVHF9hcH"Lh<;LiV.qIP?-/0kamA/C+?b=%uMJL0Y0tC=<<%gU[NI3St>236iW>hOE
%.!kf;)*4jamEgQ7-\e5\/rr?Ln6%'eID4[WX0LESYd.6,Kd2j0:(oh(#[E*;10Y,pj7%F\>WZWKf&mO]XnC&o=^bSdc-,GCmf(-#
%a[Sd*^H"N'=9iu5f3bip"YL@BDK4\3I$NHON>-T`aj+rDc\Y;tE%9"8""*.HdfD!'nGI9FS_q]r.t$(/Nqd["(&.hP\,"$mp-Ml/
%[A&8W]t>i]fZBS$(k9%2Y#`Dd6HRHN_J<b4=UZWt%8i7>:L[RX3Z#,;lp/58(F%j3k#mo1/l-F*>$CC5=/G:9F\+X(?Cd:_<Yd`Z
%H+hRjg>YG'?ELAPAGoDsPP=),7JV?0,UaHrc^apE[\>6%/$WAKj.H%1<,=^qjNhk-8td$!.BiU@P.GZ].B4F?iK5s>n)<b.^"<ps
%C8kdJW9k3%S"l0?D/4X9W?&ugP'41<H)t/(OV`HF,U2H(H'm,l9,C>$1g/M[T?IJCHu3Y9A&Z#Ch:P9Cq8%LHmVQ3u(!'/@gBfuD
%Z#EgO2l6:UC,:uSDK"YNpR0:Sjh^M"a5ASZ\A5bi'oB\->M2V']k(l$_6)>[c-piLpH$%%ZVh-J*ugL)p>a-/iHFfX(3e@'%U2$L
%M8K5:n_m)dkOI[?<FD_=24&JRTm1^(kI>ZLHd^,KGE(*U@^jlEoZ6mNhKgHIMT_,e@*p&FeZ6rns5C[1'ocEJROh`/7k^JfbL)Yf
%UCpefWkQFDdr%<lf]65@LY1I2XP#)+@_*F@?4l3p+gVj.FZKctEaeD\Z#J5F-.J.=G2hF**)>9r<hbH5dnqa.^9hArA(jO/H%+q;
%-EWR0F_^aCV4H=FYNVrqZ[/2mS93J3rf,k0SfH0"p<pceS7_5=Z$<YM\f,DPF8B<m5ETe_pTH'gSc/CWm5_kG5MSh#K>EoHq/%jX
%IaRmn#JmQ^I'@,+Y9)cqQ2?3VKt27A34WlJDVmQ]*1iRQ%aNPgA-,s#3j\c5i;(tuDE5:kWEe5m*!LWf`R0\\M]_',/`Gn>[cp"_
%<M(e^;'gL7Hn!A`+4n!i&guY5eE0?^JJ1drkIPFVYK?'M<i?l,g%=]<2uD6Qka_M<bM?)KA^?p=k^c0ik-Ve$"O@/8=mg*-Hr83B
%[.W7]qXOAIDV\PYcg@j,'ljg4_.MOgGIO$mo"/-%lpfnYs4f%>c<#l>oB3C5_i=8W>ibOiQ/AZLa:I&'`DL40kb>_SI(9[*EY;&e
%)1=-0?f#ISF-j$":@_$1^ONdT=Uf1R4]d]%f;h[Tl?2+c]Pr:K.qgkj_^aP[<&2'Eq6^\/VOe3.DY\="jn;MuI^gsm'R&nrgI;-J
%I*oO9].5^^meulg4>(lnH+["a5<mD(md5BrI?4kKro(eF;gtt#Q1N&cq0DNc*T5Jgi`0R_.4D%):[nWrI<rEj'TIfgiQg)8>[/1+
%O_i>,VR*1Sc*M5pE)F3f(0W5BZ_DWu_=L4:>arJ[g4sC;UoZ_oPYR-AX&QjD%@Y]G-_&fVS![?:Dk<65rRYNSjRT<TY*L<lZRCXo
%kEF]Lj)_VFq^^Z?A$_>(Y?t7DeQ0kVmXgqZl1r?$eMths0RZg(`UlgkDRKJlHqnT]oqbikHBF#`eb2YbW,3hV[G#bi2sYNdoppD>
%.p&o=#cWHrE^3uL,a\>=7WG!R[b'#Ja$/,l0C;A?B<*J#-hGT!md[8jYPJc;RTJlj7t/-F)fmUG(cGT\nGPfAECJ]!#8bS[E2?tg
%ZZVNP2W%*k?#PaOo,c=KI$6!kdf4L(%@%u#^tqH%40PdJI>SPBiJRZ83]+q1ROS13?\'fo^(^-M)O+AlT)[Y/Us@EqaL223Iu*Vb
%\cY,B++laH'DDdASbF6#K+!.HpW:jQF0C&mpV1$S4jiEd?DPap;HT5bhA>/T<=^T"0DYZ;_Db1!99Ps[04]ein@Znt79risI5'"Q
%c,7F!*kqRH^HUf"QOWn#O;c]i#)KQp1nJLF`^\a$29aX>;6me#N=E-o'hUE61MW6Qop'I`42]+0_$,5'c$/Sco*sU=D/I/I>atKb
%ghRS;[5S#&Y0Hilm^;TB=r[2pfB3#qpY*-d--E]FnR\W5>O@Qn"hs4;`W*SrnAC_Jl%Xm&[6*aopb_I=;`H&uUG;N!%gVs,hkfY<
%G,d%6bR-Sm[>E4U]'f5l7#m](B>(JQ'i2K6Z$nKM'a(uOfpkq.^JSJ(ju;XNh6_)W8i<qt4S4r6Tg$@HE2EI#Is&jH2UMURHLE<W
%r!I@i$[5/"e?C8,OtS(/HC,@Vjp)&b#]#q=Xg0#1'jbmM+<QnL<V;&6%N$IjXHg]tRB$\%npFP;FRXUV%&8[u2So$S!#K3,XQmKG
%<>7kADMI+m;5RAGX9g(H6Rp_i_\"mTbf_Ie6kuAOdof1g.1AqF8oP#/,)&HlPA!>n<j(G8U7afQT[ASR]lfpa<`'23WX(Cq@TXCk
%S6?!"1^PO,JNcrL-7Q#%1nGhD<LLlc'tW@-M.d?a,?$+;H53V.nZ%UJ^fl#F!DEM;6_[""8m$W1Kgt-3=d"`GZ4KJt0Of]8!S2fX
%6Vi\s:\[D)=dF":;%)\49j^Et.m,KDXWe;ZG_H?$;&5nT.^9]i9/oXs@3G4KlafV""PsEi+<tf(Qr#!`BIXFJU&q13Aa-uQ:6U#5
%"Hhq@=I00OPQ548!\oE7p2`"_j$@`#M'N>>JM5Xj,G:\2.)::hUgZZV@4"^f-4X^RWC_[B73[?hS`=u9#8H+-+KuH/s!$Y[#Y+nN
%6-.P(LI!dcOr,PpXJa-pnKEt/FtUuf+Ba(6T<-GR33t12GRu`IF%A`S.iQY_JLi,.Y)H'%FW*r.%[mZ]_%/"+MjF">`51Z1)Nq1Y
%cldpb;+k=o8H>Jn0HHr9.*r1rQT:4^#-%eQi$\ki"H*k''I#2b23<BHg8j.U*K6"-M5#`M9pJO)cmFp9+@e_/TM5s?3q*`G8eR7K
%cl#7RSHd'n7+<5ZX!TM6K98D/BRjL4Z:Oml5kS-_04:CZ1I?T\'cMr=6k*o5d7YCXY_#W$B=8-o."\"BP)5(3lp(W<!Q=MZHPM),
%XA&h7"gs*aZA+YGbL8][I0q_Om0odCaM9)*7ri\gbY2#f);mN"Q+6ol<uqYP"=5QhK$K!)!nMuRJ;]/55Z`*`g]7j0,0=6/dr8hj
%!f0HMR<ChOLfra@oP$Wo7)+:92$pr(W"?$5SH0Qr=OO/fXH!O^A:oKMkU7[C"r<sfY9JLkJjCm=XFh)3+UC1k8[Jj+Q79*W8%gG^
%>"4jL5_f=QM7<tVfEm0d*ul';]:iF!*9/X-%^qCD!IddSb5cPIZ6D""e<iUKB@%&]WUXC,]j_8+""[]o\MWf]*'+Y<G[)Va'/33)
%cRj`9:mmdc:pJ@Z@2m8ba4gXJ4CF*d=bd!P6WA")[L1eiYd5J3<(p^s*B7lr^lr/f?ii]:+l4EB5YC1P;;#bH84?&'i5&fO_8JZH
%_;M)M=p'JO.C<Ce)k90%"-t(9O@+U6L]\W#T%rr.A.9Y>%P<TNPJJN#YriQ_;KVK2U[pS&Q7s"djBE=3Ve&.fe7Ea4i.\u4e#42L
%%k\Ste`22^(.>kS@k=P!]&QS@LL`2,Ct9=n>VM7S_uLZ!Xc<SjMirAA#NH+)QkUYObuMV(5jNPh&Xg9T(p>&[3.oR.8hs%h^pU0t
%"u9$2SmR,C('^(u*Po6*"=S#=3Ak,56NCJl$Xg([&=#Km>6Ga<&Y%r<G_g#E&:RT8do^/11&,a!L+k\W5;jch2lJY`[u=W<o+&$a
%#B1Vg5W4dfEtYf)$0.WFZpMu&rIHk(71UoALBfQ?2F5\lPK\#p5f%O"^O\oW!p#bW)B#CU1Z4?bfH;DJJHh\]"q<i"5WuoIBI$Cu
%<TD1Sb)Q^X-Le@o"L/,r!8g3K5T;P!Uj:;eWhT<"OoSu*3$uEERLb5)1riZIkRp1S0Tb@_PlT*7d<.o9LR<\$b36/O57%"n>a\-K
%Kj)N:HG<V51tE$/%ClVcLR9Np2F(8)CP2!+Bi>blEQ'0^?ue:5KCK+s^+79Z6&RQ'Tq[GD#4*?UL65_2H"i'Z@=%DHWec0+'EgnW
%IBY8Y&uYfg=r$+5&VE!Y,aG>FTHi<Kda1fZH13AZ%]Tc==-4)r_R_HCWcTK4!JUWmUX)p_fOGIXO@X70F9>>F8%4'2LhK+o(H>'=
%XA_Cb$qpn@3@(/KT`I)ABIbiN"\-P+BB(_j$6VX-)(#@W@j?YNHEB%)70%,!j^;&$Y(6.(9uf3pQlOlq:[:8R+m9',+?TW6+Su1t
%7!X;@6L_tPJET=d,mLpp<'\#r_H;Vr@/0dH'h#1(U,%)tpS->mYEsC3M1@]KJaNYE3KD[K%SMC-%f]Q%*e"25Wqf*jAIQ@.!)<a[
%!d5bY3m[.,Tf\,B+=h\QOl?s$3lY&m6p-CT%-GOJ$&EO\R<XU_8)VH'$"W<NiAQ]pW?Wf%O)uKSi=R,>4I-PIi4Tc+5b_s-FLO49
%QjCWG>TSJunm$uFYm#[c,3L-X;*$A:n04jq[t"_!&+nL(/=7YQ2+"@]"R#k2M(H5oSB)nMK'sW9a;][OTSPsKO?/8+!'2G(!3RD/
%+nA&en1QLgA/#h_)orrQ01%=J)hLg*AW5CgiE$<N3%a]!ja"iL*V1f/!DOKDD*UUA;[%o>FH.f]c83WK<W^"/>7i4h"E#n>:m"BN
%EC&K],=$2S;8alj%N?NKnQ[a<WL2M'/g+FNoV(<]d#,uDU-o"dU37\^Q$@s6)?s.p!)dJ2<C(16,6nm6"4_KgB#Y605Z!G;%nG&E
%%lhQl*Ba`j3$"C1Oc`6!F]?D.n7WaHb&gp/EYMA`"t1VH-`IL73%-FJs0"C?6Ym_geDUCZ$h@lE<>jRV0gN`86UnJGd:$P7#&"@h
%%%Aq6e^5Cgd>A"-#=_cLf-,28=p/pi+EX$n)T!qW@'jW5&e_1N/7=4M9.1?CA[_`PTu7$h+HWTkl&CnBJKdDbL!r@d6#_\1>[^qQ
%9ho.(*(E.Z_jIe"jI-A4UE:DJf&6\'"C4DW7-t^TB#Fln#pDNP*drUbnpX,nOH0BGA.f7sPcSU-UF7P',)_;J8?Pb=&Bj8GbDJ\/
%^aP0J"^@-XL$Tla,UeTeN8#<q&Itm167kQ)<[bt=@d&]JOC&6T.unnKbJ8I)6I?^X0EC&Ub?RF:Z`)M;g<_7]%O37C8e>g<33tkd
%!"hMS+VF5+dJ]^_Up:*R&3.nD"jHG^)kfXJ+S0b5;g7d9i.X]c*2C!eZ:L6*mfgp$HNL0]SBf=a[?ejd#h(-mgh;f_^>(n?l+Sc0
%@oAkM_jnfq4V`qb@lJ'O)DK)^:;SOfWt1T'N"FX:)pOQ<N$J"(i(ZPM,gi>tMj0<r?'59IgKJ1<F9V%EeHF>::=0sP=G8+0&aYVn
%6E;AR$SEJU@%I3.-@&^la"iP4ddT'KM&8jXdL1@CMK^&['3#DYr=9AGBrJ$nNg/T*=V/^li<AciH3"+6]f=5*h]]?C&^Vd8SRRE;
%;,<;VWoB7`GQgr#?3dN-A-?4@>ldnOOt.1oNbb#!MbK!h<[K4I6%T0;2c@Sf8^\k,+b2)KP@!_mH8PbsN!h\X+ED7R.jRL_-rc2#
%)X)l+@_g@;"VL&TS%qQb2LmE9<uj8qTO',3K4O6q,8=R0qhF#M5S2:';!ZJDl3nGk0-sPn0[K51O59jC_o,b)A\\FA+?p#i.N#Y=
%Q@p+b-PEXLJ3a>M*W6"fi5+`3qc>0^!Xsdu!W),flJ.<sJ>_$,<oPM/3WsQuO>MIh&>sdF#T/"535C'XTZ!TuTF>&A63=!E,5MEX
%Ed94sOE%u\Hf,l4?=6s5?p0<n,NiTK.cD,14ok'r\#U-l6<cmEaB31dVM=UZQm7_6auUE)JCREm%o7lm)1`D=#DQuJg(8pn)WrBJ
%3pICr$-S@VY^%K^`T.T.,u:Nr,?1X1eC/TJ$lsC-e.#5.9gT[Q6=*Fs+Ar8^H)=%D+qE$'"T="s0]:(ndqd1VaHAhU1*IL*,)h`0
%.Z25VWFPaZ$ka`k=TTA+6r@L7U!$2R=;Arp&CTeO,%q7_,hgcN0k9$t8>)=[%YYQ%,brWsoEP:=E+/Tq"_EQ[=T%/HKrpQ;-c8e,
%g%QQ$4\eP8A<;B.=>eYM:5E#$AcW@N/!+4+,QK3IT>8/d!l=(L-)sa+1+f3pQs([X,*TrY0/BX6Y9oB5^qpb1Ho*6RT2S;>GhKW3
%_86c?XnH3A>,]TdiS]eSR:eU\^i5_^NJn`8WBVLfSY:$5+1k:X7[.$)`PbmQ]gk$A#\Y='aKTh8WtH.0YSKZR6.cqVUE_&G*,CkF
%$Ai/N;[HU#P<p^-3eNsSaC,+u1b>Pu0le`M"60U:A<8p50KE\KNbtFM!gLL.TX"P>I:*&Db"t3$Q8g@'C'^%0&jqm0]g0K#oj4as
%(9,HL;+UsBKc1(Hh^G1W!>:!(Wpg*C'P%C^A1H;qLBQe5!7RpsUIu$P#jCor>QLQK/=liH-Q56R4@NtK3]_[0G@jAh'MK0j;B:s?
%->ii7eg*cD\4X_>?H;?=Ls&dI=%/o0J=H;TLiuqo"YlZ>g&kb(^^<qm-itq/OJb]"Q@Nrij?-$W,91,PmVn;MJJ'H4Ta,1`$I%l_
%0IDVO0UK_rXFi"<Yc:/p)9XT3^i;J1BlnA-QkpqFa$bWo,%fZ29Z:S20KmE<*Ck_Y!0k[.Z@IX"%=B_o,#M+T@f[R6(D2?nq%u/;
%=f#5NF\c&h`0?/^rd\uS2i7\]_`FP,1<N\DqtkiLj+ft=K,<I]#i;Ok!sf;IPsIH]M7Mst[u>TbMLndb"pFM,@0S=E5A4V!Y/CoE
%;D8t&I'gdW,AFZE-t8TOP>SG>nE$1a4?Q1?UCLhaclY(JI>l;m"7ELG$'@rUc"T9I?6`T^g^mW]$um0'8rXfFATT^(7a3ka@W>4)
%a5'++%<ng_ar"ZpDW_4(K6.W>qm`*uA,m<@Ym$[VqJ%45.AT:5+&WVJJkF+oRt?ne(^T_VgkW[K*eat>2_/Pjcpi7N",A1cSKfs9
%r6&NFJ0PH_WU)l<E@_G?1fZR$#$sb(VL^(/'R=Zd'uTkRFiBL&=\fXF5OiR[W+d*GJJ0L[M'P7n#Wbc#8;S<)X:(O+7sd'H3H@I%
%]!]<VauN9hKrda/_usaA&eMs3!sm?cUe'SM_XJ[(N]@\&_hb8\!-8`"MR]o:d2o0b@`8h?+sN5HJbVN>)68W#6D>E=;\p/QeV%?M
%i%T][;%d/lJGWClmGLSD.mMUaOe^`-Q.:#&/><J4V3!rsL@,:/OsZoI,f0["?,4ZQNKu!P%N>\4m"GG*Lp%?>WKaPAktjNsAXj*R
%I;76XF6L!k7DJu(!07FQ7H[H9L31Ot1VqO,"JG5tQ9D1(Xq7>F21pN%-1PJf^lUhb^f&#G;dftH:8*)S"a@LG:i%!m!S'#Hq[DFH
%n;3p_T;(=?^-JVejKR3cK7U0U)!92!dIo\i%P/UZ^-F,-hP_YIA@4k-O&?PiZDB6MLld@+N@M_P9F6MI[N2D&lRUD\#9[B<4CW$+
%8LXdFn30TT7Q*T+9,C"ObJ['lXAluEAY%Nd<C.Yf3&2Ob+`[ZD-PUBZ*0(\0YX6C<M6]kq-<Ml3=^bY"W11d@#$Q*`eP$!o!\fY6
%&.2L%)+/XZT8]83,\(ea&E,pLTF)$o)2J)E/7XHHaF`^(We6=@(fYMT*er+J*[UYP./[0\YYZ`XQr7mI%e0N$#n$(/.9OC(I8b7[
%K\mL5`8EHd+-qaoXSsX+Y]YtkBlK+uQ)Gm`"p&2Q/N!#HT]YGq+a-^lNAoi4%]a>p\9XWg1LpjATL,"[UNn?mDcj@ODi@=Smu6F0
%OH#X*&ZH-*<<-A[Zr$UpYilK22+"$1)0!?R8nJDWh%Io0d2d8o%K_0d%lYJ=Wbl-H`J8pS.,[%EB3?&]0%0Sa9R+r/d9?%OK!7qe
%mo62a5e2-"f`96R=p&VD8-X<1-pcJ;qDfEs?sl_RqdKSnerR&,)&*k:Yf$ZVW2_%=!o2;@iJc4YYo_if"\ut@&#'+G@9K.lEa[Y,
%(bA*,h-uA)V/$q-JaJ=*96Zn$@7/'rJBI0WGT]o'R[OR5/mu\X#TWmK.^+T7@qrl,K&U/Kg'aX%<QqPL,`DP(W">=_W(qW!Ft',A
%NX(Z\5e#rVVSJs7+bi%p/V8L#0lXm]UR6WZ%;HfTf;03AR6XEc1IRVIeCiLi?K0WYJqSaViL3Nh$P.6ue:^6pek9Vc$Ect:E'c)*
%nA#1s;0&rN<C7mdW(s$[P'@#1OTBag\&_K"&V2<j-Y<o/huO3.7n6g;9c?Jch4]pCZQdo7I4#e&"lc88@O,=d8dIf\7VVfh9@-Ha
%'\1Pq&cO"b0]:CT+q2-bFi!FL@R.aIU,iOD\B)W=U<\8l/k;WV/3899,2tK67\rq=7pDnuFG.)V<SU&3jXW*+kTXF:9\9I[H&=$P
%g7X=9a=t`Uijd'EM<HU(k'_5&9.,'e!HQ"n^jN@a7Aa6C^#Bf'#E9;\<Y7Bt71+^Y5.\Tl'/WKHpAtCdM$ZgRBo`eJU#Z4dE)M:a
%;Gj%9pF)N.'5W1aOe9]`gf5$oO'o45fSA2*e+#<j""\%-OXH>8e:<RGN"SiOUjW^oGL/')7;RO8JWV@e'GFQC:eHO0(>uC3$qhph
%_..nLf7!+Lqh^c7"/XqQ@cGSV)IP`^d?Zs#=Zce?<EB>sZ-]5mEC!'u7'TEO8DmS\BF15iJ]NIJ8Z9"@eqi=td'H.N;7qN^.$nl]
%%mhET]!.-Sq\k"MJ8aMlZ#m)+Te@;0YrU*/eCe^WDOBWeV$FMjF\n>9IYI'F$8+oFVRNA4FTeQScskr`D:((Z_18>^c9689!pM%&
%&+nd'6>FBc05VILM1S)*T%.6sr@gn-ObpS&bS+jr=Xbg^GfF6DKI3,S0@6h'''0CsEBPZtiVj+;,Wbrl9c@c$bXdsYdIF2\HpR3)
%?_5mU9I&&<jU+%C2bNHb.`.t*&ji@q-edLtl3TPVL7t&NkdVY0&E3g7Y%)=n7BhGZ0IsiqE[76SNd)rV>T?0^689Z)o0F\"h)U'A
%)TE>nB6Xt8Bp/Pk0eotA^ecadb7M;L^`M(q"?PE_@j(pb!RSX_:_K@:0H_Ki;.rIM-QnCo52t6m@bjX#+mY8+5WpJU`ZjBX4-^sC
%R=#%p:W=>M3F/C,WjM=,KjaaNDopdkM-(37-5&uq>_]d9(b]V_09GB$4RC,J+*(SIkPu/H)65$-Y=&O*LpWiRY]r8g8Z0C\5]DZU
%]s.9""(J*#Q@!dDG:H:O7VVfp6T!T5a5@=(6:-W]N57i_5]HqS1_u!7*27u/$57.l:Rkl;=f"I!L?B:_Q4%,XQ&]:++P;;6!_gGT
%!Pn028O97Z26q4RYSs*ujW$"5)Y6&;MD:RL&.9&>;o9/lC;Tn@b1.K&T456]"[7qX!L9-/(ukHqMo,%:JAm%_Lioa(858:"W?K2b
%lqea`!k?.A;SWr+Cl\ohVhS"f:[+$slHV.Nq,sd2n0kL*[-AKZ:i03)iAEa09J-U[:.1YA,^+Wg$DFu?M)=K'p?@nqcJ],3?O1o)
%(WV;!:j6HEb0DFS#n)3(YDA[K=@*2&"cbWq0>pK642cTB,]K*Q&I?0.d%!Qr9rC-\T&C8&pU@B26T'#1W]<cGFANS?(KaNGF]N*^
%i<;RlDG"<A%QEuI7ofubABTp14Ios50T0H<HFRd_2Lnc^I)B18AVdF4![1.S&f;N(JPB5PShsn?P/j\JWZ%p[,#r8."+6&+A&&P_
%G=ZkW#Te(tYoQUZiH_dko<PA_J/csa#r4Npr4o<G/IJ^,2BcP,\cf1"Km#$392s0Tb)@SY09i]`3L(Ig_[8AYVf@PYFOSI*Bodqm
%7`jk1nDFgIrHZD3Pro'UccX$K&SI.<F\?\&+FlPZWacm1gLEYe2<c,Z5?8=H2^f@U1mK'uAB.i(h$U1ma9nLgeoC#DB?<)D0IT>[
%eKQ\9,<)9(Stg'0HO91+/9t1UNA-i\LIfKP;=R"BB<&:Z/49]-T2gt1VkJsgcM9elZ<o@eJXmrbM66.>&XnkV"b/t]+ra]%7gHi"
%q?i;)Ga(n2DW";<.&O&T,:TtVE8W-P+#9T&>Qp=TUm'$e*%lP.:1U;k/JEh5,3Ej&:h-UGKH'guJAOp6G^^3C(tLrpOu\maV_\h2
%H#*PJ*1`qCL%C2ge2Z[I!Dbr[TXlVq6K.^2;@*sFLY&dr:'RCiM%PeVi5*W]./d7*0ZTuK,6di<F]SA6s*UA1QK's2K3-EHa:7>S
%nP,$Zg:O;'msfY;%ma@DoUiI-QCX<iMMse##`/hUZZn&aOm#4djcC3kIU:F<?s@@M*HDj!PQNEO\Ukpnq60ge$5c`L+B0#%`uHt.
%gN=#QhA-9"P:oP<_YXVDW]D\h[l+UP!sB/Q3pg"U_<)E*!0NALOHhCen''_MhsU'?19Rj.Ef`3`=/>c2OGHk89N'6>EqdqU<^:os
%9M7ZG9lY1+gU"21lJ$o+&1a\U)rRE%juS+5X7k@.;#D<:e22Cr<k\hs'UlB6$gq].6nT`Ob>2LL&P4GdC4[AJU=:bK"+;g1S%JfT
%Dg1p`*\)mt&02+S4ou;W:aJH>?B6E"5pc"O+TL6XE'1+e/C<qQB+rIoB8HB?-7b>\cB5,s<dXp<j(GW91u>8CA[F&>:Tj1r/e`Dh
%VSp!FrhOdC-2YeeiG&An#D7UA1F8>2W^#J-.9-$(9g2UpP_+^-6]*?>Y5c<uT5aCJ!qFmKBkpc,LC0g1&WM_5`aT`#gW/R.Nr+Lc
%4CU[k6Xk9?Tq10RGsR?086qo><"mgR3ejuDPe3TaErGN"_Sppt8,lM!iPEd=8u$*1^ZA5t"<$Iik8jQjocQk$;K]NAm;]^TG#6^G
%Y@ebuqU\-$CL\/06Hb"5[AqGDRsbrLXE(MC(^]<KPo!"5"T;KiS$a)D3bjb3VUpN"IRp?Q\^*'pN#;noLQar[XCK1=iR3)m@QcKT
%aY)1a,qRU9,+dCg7sELWZY0^jgbX>[Z*cJu7>Us8B^%OF$:QC66R1c%>+d:&-YcopV>Voq+Z%4!F#6f-d/ifYAM^L-1#i_Ud\/00
%Li6@3HS$AgATj/7L]I4%4o0u'r%Jbe3+U=%2:^Bnhhn,7Jp'5tlE<E^i*.U/>5Z2HOZE%=9#]a"0F[th.SqQ8@9IkhY4tss*kB$j
%+]NV7N\1fWY<(^=9F4(%Do#EV8:OjA5ELZk>,t[<IhGapPANVS;@P;JrAb&S;HTRuh[2W+<+M5oa2n@n`0H(V/5RBobA8="Z!'O!
%JpTY'/tDc4AUMCP='+/c*UZOp(9cnD**r)/HgjQ+9!?cf7D^Q7AK=,7]_:M=MCB*jOIKNCfu1'YVD35O:Ak[,Q!V&f:kG@P,*1:/
%$/'W^/CZRP;bLH/jct$X@7HVJ1ttTU"tg&cXcbm8WAEaT=[f,#UFpd@mXlL[U!bK`&=]SEkY1NVZJI56M"CpcKKs*j,uU^.1C#kh
%&*PiSF[%@@2afJa@B2Z8m,C<;,GK*Q6b(^'o(["!Rqo$2/`N76>-96$77;35V3d4[CJ[pN;F9N>jA?mF&;Gkbjo6I5/2;(i+(^Rt
%oM8,QJnieb/3I^\"A<Zp7!\]f&f)m:,*s$N_.s?N^&>"LlVUEM6L.%<+nA"`\qNDe/QiO?h?Y\_nDt:9/9"EJMGdk]?H[1U=AVh[
%Ji.,rIit7,Gbp>Ca+D;CONB@.[,7C/[H=&Gjl"#>+U)2_Q(A\Y*)t&Z>$[FS.tsDjk,Cru\%d#M!Y?p2R7T$f.0rXI.K\aMi;S%<
%FjN4;<]WRHGY73\:bo!eX-ZYMs7Mm!WGHmE1=C1HQ&M0nS`+OhYKU:9ZsW\k&Y/VCPs;1"22K1R3<f_AEm>kPRFkS$bn?t"V)Zp>
%+]LtR?nc+XC9HEn]-^-sD+Bh`;jh:$%EC?>->YF")io\AE1O)\!MWs_'<@S;AsHO':0f6L5'>[^&*.$"(N=cN%OT:iM#cc9@hcc3
%J>*D-:i41sgQfUkEg5LZpFY7F.77n#&Isr%M+Oah5=:2pLNopY@))$`DkZ/*7?Wl,qMX@B02&3B_1J3/"I`?^M-Ga:?FAn,(@s,b
%q"'B[Y1`'.1;1D'`+tZnhR8[H%T7l?Vlj_ZaBT@#KWW>#'^MC]^95r5_]O@b'TqChpK6j)R3&4J$UdjE1($9F.A@\uP[9;;WNfLI
%TpkU#=V^*#KC9-m`:[ZtKa8m;=P!b#bs,9n@#Qk>q]FC[$hH"@Ze*H(nTZ'Le86(&Yu%DHf\\HuG,:6aDW4GGV+'rA>Bi=%V2\4^
%giWg+@=n2\JT@hZ`A^!5:mmar?Gq3@.n$M^RhTM."mpp/Q>)OWMdj1aj:.N?K+gQ8)r$0%97[L$/&Cm8_3^.GfV&FZrn:kYq;t3a
%kPE"gDB.q9i(*J1R2bCe$:dh,U\NIm'kKL5YPoX0'A%8Q7gB&W0.Fq&3*2C+R]'?BZseWoT9e9=cC:t_WoOU,)?,f-8HGX=5?_Ut
%D6b0c+6K]hZ\)_=BuuM_"$B7or6p@AXlo*]%g!Vk#/-3]o^`EAXk5l!7uAOkZVVAgouH]7W2[2_M;i+nR13#(&o3\dWjpA:PJW1@
%k?Rng(a4+*`2Q##RRJK1QqLKoRh1:L'^e'?9gO,*2._)G<-;q!]$gDEJkDA8Tb;g<K)!dPjA$+)]'C?B=Sm.N*>1(6=sbXuE.ag]
%=(*eq%,137;1R.gW0P:qFd3>GALOD#',HAu*6lE7<Db1SBLBLS-8/G+=LF5p%q6n!Krn1jJRR6I.85EV9%d^h.]5*tU^'L@r6"7\
%6D4H"enuB.ZrL8E3T<&].h;TqCY=:aL07%pBF.thFDO`E0'"#(d_(14\EC2RO?#M'qO_j%[Qh`[*HYeN,$bk?WSg)CeL\`PADM$s
%Rl1f=+l5u-]EsUV=9+'<Q'?t*"Xh.V'^.ibD4hDraB7P/ZaSp`_%IH1Mu&E*oG,?5"B^[':&n1!ZC&rP^u5`'1g=aNhh!#Zc&.Q?
%qCo]KU@-;TKI9bLP$LYFQ=:91^?d(AYr8;IU%Rt8"?a=)=]_H58CVg?XA_1LiDXg5$(Iq`/n9.0ZW&RoX%SRe)=a_M$CaIB1c%,s
%=@&.ukXg;uZm;E><`'pt_N_^'#Zi;/N96p7p[Rc\coY7J=/RNHRc=T2770udq[\&(hSd@M)*IP&l-OniGDFe'cM2Z:XGP\%e?2j[
%RP(X[AGJ<_c&i@=R^R6]jN,"@cNN*nmeqX>HUODR,&V?Ag4CdP2si8%eU"]a[3lACqU^MGooZ0ko>%Z,W;s&7U):QXV1L?l^f3?l
%C3BB!U,KQ63HctI<i,4?ikXjfe8@;N(DTN.;"+TD-!BmCGosDBMCr7;9S1@ce;X$1-,%LgL"N_f0I>6,qW$1UH5T;&DQHL+f*0FO
%NQ&i\.ekSK%i?UM?(jc5_2Jp?LuJm_e&Y%oUi7fZ,87^`A8<?O-Q4HTM)34H%6iP9b,So:/#TN9S.k@bla7NK8C0n.)W_P#EJVBl
%'\u(%S>n_Q^iaX9VT<lHCh/ti\F@4Q%9A!*%i.-K's3'XY/d1I^S+S:nWW%?'7kA*Q)!*76A+dsmm5/fk5O#[s'M0`])SDI=J[b/
%'2]&D3gpc,`JL7`=pLP<KdT!\d/rF?^.__J.gnH^0Uh`7_:Cq_+]X%CWsBKS;lE`"GT!=e6%sPPYMJAcQIgk6;:bnj!E=09POt)A
%'*e:^8Q1ah^mjnF3%3XsoIn^cE\is[(H/:WM1MqQouAmu;QjcZ9!^:lNoH1B=W"6V@Q&>T_&/la-?CSd8*I^N#MNlUWb`;-+supq
%VD/pb!gfqD):ca./aW]sK-hAi[IL9_=e*T/*sC+</5G<+(h_Np-W;r4h;X8lM.:U<EuqJ4gsc=XF3lj@RsoHbrQ68jPJ75(#g.(!
%G=<9$WX\^B7qQTi&DZS>MU5#S_5]u4)a4__d.N-/gUT)u8fT@f*<IMfWGE8gZa5cI0fn<HT8#1FpQ2-ePKucc9=8iikL"&]b-i?(
%\Qaso2_P<@%6(:R&S@aRD&A#W]Sj6ja8,D4PSOP[f/Ltmkog\]&%ca"0@6WmS#6m]n5n*#+_+eIR;W1[ejs3]HWP$nFN'0V"[J7j
%48k`_@>OHp7ISXm6i7e6aRpC-mgajM7Stl(a4U&'^aO7VomjfXFaLj^D6Ts>]>*q*Vn;nAq!ep#E#.UdSlHAC0PlgQ@:/YY<"n=p
%s6ZLI6?+m#[d6mo272USA%G@P#=8IL4D6:h.#P_+)D7n`ebe)ijZk4ob/V^BbW[$NJh4+uPN1DTbXB:ZP!D='B+@/'-I.DGJn4^[
%IeK`LldYA^R2i>b,-F(8A#'_"`Yg$[?/1V&PL@=pko,;1<<ZYd(L+7LRh;O]ZOX=.Y2(o2f>/n\X@nCXiM$Ig&N31BVGs.lL-n:k
%U/##qN2:*iK&P4H.1K3ce(BN!#@i_uJ%b7$Z'Ae"g)#e.lV4<49L@'mn3rD3$IBW@YfG&YN+pFY+R`:F\OGj?mEg':Bb0?\'MJfZ
%@[9qI9aP&Q,m[e.W^sO%W[>;*'GlG&r(bdE*GQe^#o*ac$p;-;bS<<l/7'*,M6SS=`Lj*/#c='825X)/8%:3Z7*2$a<.7lD2rU_c
%i[=A:i,*d'9Oc2Dojctr<f8:I;C;9iL(r484&km:3aj5keCC)Fa-M3XWtP8^T"^.:NiH9I\0_K'Q',-e%*f$7:#U4g>$YbHcc!./
%%8H>k\uSkT6F)P&=>FJ0/]E8YCAFa"0uLIMYfAWaEeMn@V$+ds]o`b\XclZ-CWhQ/8.h14Z39]KCpT+9ic%N:RTaOjA+7#[]9Odd
%2-hpVBc*Dt!0ulmDNX7l!`iNJK0C^oj;co075<WZc;e!:>tSj!#Ui10i-$C44ScFa0I-5_/L=?h`IkEEh_fE&7q4lhmoll](W0a7
%\OSXE6-'W9(,H@@.Aoik;N!:-W#3u5@B?*UDaV:H\BT"sZc61P.L[[m\YQkh)<p"@W7InDI.>qTWd]@G%\`MD>8-40d/0eU9(U2g
%&_B9J,VEA5(4TBkc)b6Rf+o93DMqF]_:G]lH@uu#b1=M=814!`m7E/^QX15tHR1,!Uq:'p#,MU$ki<k$?uX?Z*)R_jR*oZ3d3fTT
%T*FRFL7_]A=U-OG5F=!JALeOT/]I4%$cD'Y[USLP,jMpp--cC?F:2E$NJNmWLa^A^Pn3+T7M[V^cBRW%_qg"e;A=@0Ch:`QeXZP'
%V'H*s3-"T5T<MWI5a6Heh`/WU;QFRnl4aZ][3=S=Kpku<,U#44Y+Ip0Rg9'ijd''.XGBl.`T,"G<8g?==*@D\pmd0per/E[<OEO.
%L`JC!7Ojjg?&>Mf<(]f`)^f&jJ+bUg=X5J_U_W$+E\WaB4A"R\D<<E$>0$Y_C1\KD8s:.[3#=8BXY6\$WPd"Nb!_hH1]!2)a$Wj@
%VKoM4GdBeP@'\[(ZK0b"Tt%(*Gl9],`G=Y3FKQ=V$&?5)M=Sf:"@t(TW(Huq7JI@BQ.'/>hn\A.>V*joODa\OIBXuSdUX*a?SiE^
%=k2276haIsXt<+o<-Fe+(0i#G%ZS]a'kV08.XFn+dlrF_!=ZbgVui#[K&lW9$\uic_M\S'=R[%SM=^kD[A>'JAN$tCY*2fi<RoV4
%FVh;GMVP&2(#Ls.!)bRW@%FkVQ$BB/M+:=_\5nKjMdrD%a1,jg#prlH+Z9Cb:_ckhgIfJB1=\?80qH_`Q;!+:+pinO9P62BqY&84
%NX>gj0XgDd>F038_R1k7iMt&CgQ<>uLG#[e5oJpTq7\sZ"Iu2;<+1eY[[ZpuGLN_)TF_268aYXu2?`'g`Q=3b3N<_07o?G/MG?b*
%^C_s;$aYj6.]H;n#t)S;;S1)dTC4>t&NKqjdbo7+9EX;P/qk<c.GRV?7C[n\6f?-ZK!"g$Dp++l9*`C8aIbpG1<2N9cq&Q8`7mm>
%r+\P7s,GZQ+<eV"'p9_"P_*g[IIc0XD)fG^`Jr&fF;D/G]O$MLSG#-7Rk[%i%AK(:RR?dff)ns/Yj05a9D3."`:)Wfeo!6?P&p5?
%9pks\f#pW-$=FTlf3QV&fq<sJT!@ib[7^ScJraQ;KUL*c<J<SU5M-Va%2'IWX!)eR(+#N01^6H\'\T;pn.YA\"HeX>n90d'G5t:"
%99Snkg:!D!_6a++4I3m]8+f44!#!(KH^o/:&e/'TaKeDf3-rp1jp$u1Ok<6"+b;;O"Oa;7T3#'p3?:FZ.7b(!%QuHoT&+$qJ9KMC
%5ot3,Q.RG!)&:nu"L6DS[^"Y?S$jZkENcKlk.D3jl!ZOS<SF<^2,KEG&(NCDW3Xle9OrN8)4<tZ#in<@G4g,bN?N>N%CpT[qt[\[
%L35OWJQ8KMf0@pCOA\;SGRYTFdFe*"+L%sL]+&M/O]fICoU-s!"CeY6-j8*!)oI)E4@3StAj@;Eg1-fIN1D\DSc53L@![).3/Ld(
%*DrYM'jaaSSiK^)&,15(Z"heTg5:\c,2[TlV&7Y;<K)$$*8S1$9g+iR&laX0Fs[A"(T/9T5m$KB,F5;ok#O$eQoNLg)2XN$Oopf"
%a)[9uBC_FVKgC0kWu[S'dCkjhgol&j<IKjA!MeNb7n)1K2+C=E!F)$2$r?7a+ZHhhMo1K^\5jgOSnO$!$Oo8kn_p*CEYe6fWjAZn
%GEGm8ar>h=0q;gNTa4r886+mfcKYFp+^jBm*EY2uM-1^e3e[_!h+SUUf$PU>M)W5;L.XS$hXsij"NIl$$o?2lQl"!QIYQ,^,Y$5,
%[IBi\,K46Ygg#A_HEnPLX:EM/ArM.B.t9eR2!p7(U?.=c9U;#R'Iq)Y8J!K*RG961.t85:QXg52c7u&/:(aaC7c!aM@4ctlNS(Y$
%%KiR`9&u24Z@NC16J`h;NK1i*=J`Q9rYN$F)QIj@%<%-dfEe[3Q'`gA?8G]S!aQW*C-mkFd2rO;9E+-K^@iXmrq@#M5tEW(f*`MO
%LsinoKH!Fgc>VKPU!Wj?L`d%8Y?r7hUcQZM#j.J.X&VTgn7'rq??ot7_7^.3;*VB^eg:;fD,2^#CODAR],@3S2BU@;2Q/m=:ZnjS
%kfr$^BXk'1R7'`k3@NI[S#"J-21#8nepgmi6b#?Y,Y>dN1B0"*ZcqFSONp/5'sX]2SZk@KKraroT$C>8q^D>acdoQcYFn9.6:W?s
%'LQD/=LN]F"?YWj/P;Ung/j;!/^![Jkn.hKH0#l[f:bJ'U-_>L]9Fn%,ApI1d>f8YPYh^[P]8YR,_"PFgCif!+sLS<ib/&4FsI^s
%Q@@\4@@\V\d[U0LZ#A#C:@2aj_To).Fn;#io<i2X$7?VJCZY?E^(5$T\Z/u-@VS<)'*0H%N;J:3Vl9(6jeZ4jLTr0f6VWalmS$JP
%cnH`-,i>`W2o?GqrZl:6Z^k=-n:'i@X<@m`;E4gn/8$5($HBTD6ou*_;?Of]EWT+s:MXX$!W6_,R;Y>dP/omA9_-'h<3R*.2Z=oQ
%$oT"X6L%<(Kn'#[FcAC!LNJ-T.ZeqoFikp6E'ZJ/,$2bi+Pp(CJTX<TJUN$HD!"-ZLZ;nSER_HZIp56K'I"jIngJ786QtF9/uGfV
%+)ma[O)Z*rgmrROT:D`Hb/1_-+u2ncT%@H9'OU<eA.c";b'%7@9:[@J(Ak`CNJe_*i<p:HlsMpbO6KMQ:Gmt4M.'D,M&!BOrU%UY
%.rm=pr7"<*lgD(5cWgEd"j&G7g*F@:ABO!V=S`'cUH0N7g8.]6C<"m'$2Hh7--$NoW?P'o%.I-eOJ:8Nj%L3O>eIS4?h5Yu^Qib;
%s$8,5gQ`@0eO%c^4?ZoiKnjLpE:dQp-Hodn2H!N]G>IVL8HHl>(]5A_Lk3UlncqYp-\u\"rEMIB6]-n"LPOl4rtk2`*)6Ql:*ET1
%a>FXad)`R+7M/8Q"A_r3m=/(HRb^o"YV5h<;h]S=*#6naN\q[h-?\*H1E\bbe0LG6Z;q/AJPi%&"pbtXh(Uf;ZIiKGO_]3e)-B\O
%apdQCAsJRf^_Q`ln%YH&eV:?E^MDT#CSreU*(m`?l"0WG)RZJs^^>D:"Dh(LCf>5U,%14S`Rng:&<g!%52)]`+Oe6o#N36"ZUq;>
%8tA4EE>O8qG5=6kG+)ul\UkTSY&]iAs&>K.!"7uTj&b?oP5N]abfop'kAU6YoUWSlXs<jeZAUe[6m"@;6@Sk,P+3")IIM;`9_"p!
%m[9f9P1"k:Bu,]@!l_pLJg*'ig85.K"P,Tj<Q-eKTr(MWf"0gP.qhlrml:AahG0i]/80AaNZOZ#0!h]-$ud&3HRYL\$*,$i\o5(V
%gVtJ0Y7=tBgGU;Sd14uqj$]SRIa6+!=V'kg*!miF5m<shZLZkG7//<1=V=3KN_hKB(kl!=$MBE:E)MDSRhl*)%2"1_IAh*Q8tLF$
%81Q@t;o)N2C0/?**omAS[L7+GA?WB!M9%;sFQ/#DiRZnp+!%p%=Rj?"ZJ:63'uVaq`cIXnNP,DFiinf(3T-E[+J6.pef1s1<pjq.
%h(?\[&RFr;k'BA6)`VP+5.CG*rf(\cC9Nf=l-IFB"A9.n57'QMjN4RaUa>^/?t]BN]5hYX=?qdV.5P#;9Ql0WoAS8M4hKcC;HMe'
%Bh(BV)?sr?C(EQ3'sNkFmB_/&7VX#c79-kYf]S;F5`Ie#P7aBT&k!1u)N9c4+^*-m<!buc\;X(r^H1s>9TUr,Y"HYL.[GmM#RBVj
%1.7RTh/8mj![:KqJE>4B45KEudk*f>qV)Vq(3U=l8qJsEpg`WSlH$K+,>>4YA0ri[Ur"l_U10=;PQTTR&F6Vhm?5k]o+_=PeaAXG
%Y:'be_lILKQl"EcS2RRi]DsI6CT9D[13GCI!X6Q.-Uf/l:J]C7:/>YHk:_]SR<k8N/,!cXE9G!<+E_BC""aM<48S3Kr9KAZ@:a3[
%PBdKff7)$j'Sdi%%!lOnZK+&B?6LS6-&aiGM>bA3W.bt?@R("8&MKRYAVnQ/On+qP;e'q]@Og+NE#KIK3iWd1<=fhY/I#m^!2Lr4
%1o)$Uo=BZu`97g3]^<2YURdrJ$,$kqGc_[=:.d9tFLJ1$;Y>un3lq;&!t\38GT!ag.,(R1VpO*KP4\-r9Y&6B!VSY`#IP%6C="qW
%G/tCul0lFCl?(>\C$u@W&eA]%RYM=1Y-B.7h7pW7M_M''h50mi'd8N]Xq6kJhY1r^:SZWH*)`<]p0&M^fBt\Z9P4JLSS!'E@($Gh
%Aq:\hSSRWR>nB-75_]6V-Y^")ER/?C71niNM%^bP&F\$"@tKk7b3etJ]lc:G-$p5$*R\-@l;$[iRqILHkQn1WZFmpsG,H7=OW:q3
%NuNS,I+5:=5oCm"):An]g#O8mA6O5X*7R7i'(EDVKF/`-"HX;Ci,kCaXa?7qc^D[N0m>_eUiDfqQkcO9j</0EO`+KWecLLOSMh5"
%i5T^uV:h_tXt!.U[^@takM\I\=r;L!`+>QL,3`hZ?&OZCrOhm^<m[SKRs%$EllIsZBX>"jM?cad)S)I%rQ3_X\l@tf5qTR74LRug
%Y-nG%MCjdAb%0qYLqp?!hbK/g"pt+V,4seV_pQO?`hna3Q9SPl*`ALe6j<emC,MqR8j1Ku!gjr;$'g1,?=tqrj9e-?r+ub^d>[9_
%;,*N?n=P94br!(FH?Q1g+#Fd3@7['n%N6I]P%#"+NW08@1-@$V`u.2P!M.Hcau5s4(a:uaC+FTbl'dJl;2IuPRA@3Gbmp!=2jpae
%@RMIO_O*E.:DU_m2iDC)lY368>ih7R-M_iF^E$XkHBYk5$:Qo$;pGuQR0CdB<8\YR=Snl[iq@k]F'9]6"<a7))MD\E5%okIZ)/"9
%KKg7.j-+Zg<0<Bb.=YB"L9;ms<k^p![0Z&Te2\pNA.I_9W;(]$FXO_63Z%neNK!L%^&UBO1$%oul.4`%0ZeW]MjPihkh)ZKYXoh1
%4uIZ46$ec*K/_>pICAf6i6c*+ijFW/boNR0jpLH*ggn22)i^8p.3s?t$F4[n4#IU[K1d,p`sAedH./a*Y2[R?8;<K96gHt!fJJoq
%g+o:`Y6+k=kF1i0o>Z8a5Y;To^$[?c-N?N)QPsrT&WE&r$K7d0+qXSVfGP;'Pto]:B"BdP;]TTYCO.s0AiiJZC^]iDm)!S4N:CMi
%,R>^4?H#SEaG*+DQ.7B:(G,0/?$-P9MoMh.T1+*H5U&!YIN=I^L_J4^TRm&elYl)ZHi'0Ber]b.([9mt#eS%))IYasMT82"q$2mj
%Cq$:]J&,I1Tps*!D=SsUcuG>+A#86[V*ZJBL*L?WEFZ!c6,B8<1i`WMgK1+KFht<BXUtY`)ZjEK*bh/&EN,#`E6Bs>.QU.WELS\j
%TD/<=o')6ei:UVR=1iuuechl"/3[b'rCl/l/Z7\NGE?]9YP7N/OS!@@J#a6)V.27>ENg4,[//Sj2\loYTnFYG,#6jM'8O[R%&2bP
%+9VOReqs1&KUtgZL^M?m-tc>"j?=5-A\rZ/&\%PWW+W706%$98\)jC5%!6FhKqh(M3&j8$B'%Z:>g:;)JZZ^O]I<E1-_sbYEcV@n
%9Z*Z=<2`/+U>9a?[&??WPH\^#,Y-a9VKS)u#O-o!/9Z#koH4'uNQoBQV`Aot*[XmAUN[",gsOQtc.B9@__Tc,a$/>TcNWs6fm=mu
%"L/'oh\%@,,hoB?OUdE8R!uC/4eA,PnUk___://OinJg!o^tthQS>i'IioU&dZCX!Q+&4:)T5_B)s:OBB^.bPSTK?4OVP!.h5'p`
%9YGnRnncaf^+XE&[8kPh]%7*EGIr-qh<Tr^A.n.C]@S,JW[JD;4]ej[!+RtXrYdD$ZG).hN)b0ThSac\k%9J+`-W">O1pJF*lB?#
%-Jj*NKrF_mhKp(as-n9%Z"_`R&FVcj<dc@PF&-n%IM)%P0bHLXThW14VW[CEFqa<To3q`#DW\VHa%?MLJ$u?N#<>)q0mbkRrW#m"
%T[,Rmr^cH?6jq2_^-CNdVmY45Rsohu71Z2O2uik"HHdhd\dA-:Z/S=9_8&:0Ye&D<Jq">_SYA<]3;<_Df17hD4%T,O;+\U-/6MZP
%8.--^(CgBEChb3WnE/[OS@@2*VbP)o>Y[XnFYiOuNiK`:_jcO5OIKlUOu=-VTK'itFHc6+LX=gZO[$)'p]m&nG7)(Kq"b*`D8:C4
%oC3=uQn=)lr?gSI5R+-uZ#3%FYI@qjFAq`@T?LM-YrVUbKtWe#_a2F0.*O8$_OHg?&Fu&*qs[>'f/W<_PF&Jh.QCfuM"q90&i`#^
%@5IL<mf0r!q(Xk=L<\!;?s0r],KTZc)8_4<f$2K)9H8#(`(eQB9[B/C\'kb7^;d!n?KFW&f9e[oT`5-^s%)Rr4l7^b#?YBBCiFIf
%rV_W&dnS7T9VrQ1`?3_`rPP/53kj#6&)bnMrq+IapY`9E/Vs7pErG&\;r=3iYIU.&mtY&J3")ng!MhYY>hMj&=._<l%:7rEqAP\t
%c@`9L=:pe@K<MI5rRp_#Yj_,!_RLK\)Up+D*gHU*QLrU3[./VN?Da9Z@(kEmI5u!*0Fb&<c.YC<HR<'D2f8R;Cc\&V<J.c1_!fPt
%*'A,ur]qQhU;@jjs.I:i$\dZ7mN9:>:''f9[koV8Vl[<UQ9jBZlV6i_n]ouU+?Q.)][QTcb"$R"I,jZ;i!HBJocWaN9=BEOc/:gZ
%"k@kI2hh:9U8?W7l,DUGi68$..<UaI%j8VQ=6uEqIt11gRD7/EAUSPe&&!DOn]S$\gYqX]aKNKtLhE2!9R[GBEg6#'._cBK`,W#@
%s,5((&<'ZGq*F/pTKm_NdN=(K5G.0;^/;km:HndjiXCK\S'ZYX06%)\S'eF$92(aXeJXU#Kg<V!JJY6AnPT])NZe"q\"Q.VF1njT
%FmHs3V\cK8!*HllW;PTH+,5YRfH>!>s'a"\Gid3:5@?fE]DOJjJ%fq"4jSAe^QJDAEF$Gc2g2sU'b*EUg[tJiZ?G$\r;HdbEnd&)
%S)Ea88fR:ZLAt\XqK2WN'RpX:db1,MImE"0H&#t#jF=r^]U$l&QN,td^XN)kMF^`Lj;ZGFT]EJ[--S[I5JV%MDpN%l+5f$KD<>"[
%eN`&oE*ms3r=<"Z[>%`H-Mnm8KHNN5[_I"nONL;lpG6`34acl"]q0T-'])RZpJ\#)N<eMDY[E>riMQPMjhcA\=EAH\jcC^kjIG\7
%J%ZZHG.7%fqU`7,=Q<!MpIbW"qo/HaTF=]GGUNLVc'f,+T?Md4:FGW/:&WZdm1JO5Mu2tP0^#s2:&`bK@#*Ing&F8#2)0%As+?bP
%/*e/S?]g3'OtALTD=rZ$`L^pN!T7o#rq`8eZ0K&=!"KY2.J<40"Q87HN3/>8oG.(b\_F%8Y>g-R0)tk@ciG,^bUF7h0-PkdCJ/)h
%8'&\PbM+#?HDf>e#WmK;T`p5[<f<2$0n9d-G0ka=`smKa"#sAU6d2#@^uJLDhB.=L%tY5&'EK7[3QR5i,etdImIcqq^uM1tJ?hTE
%*i.-V<X!`HkLdsq=[6M!B1NGL?,/bnWf=Ech`pT!]/&;pK9%hDRl'%g=EqD7A7u)C;D7&+>9"1\A.QQT<X0UVr9*`I*hZ5lc3Nh7
%JAZ+'@4Y3*^]B;sV<(DpT]f.rgM(R9Q3_/+f:SZR!=b4_V2%UWK:F,<DhL_*`n,U\"C_pcgT;.YDk/+P&[tRZZAKFDi)U1)+M-7.
%iO;eE0S#4TfW>lJ&<iZYjh&J550h377GMVYNJgDtSoOi@EX::#QX7J"/0fQV$tp*+VqJPN,jhY]@=/\5hN@o3`/XWfVcE@n`G\]<
%SI_hDV=e%ME)9%A`U8$q)`Z&;ETap[%63OCGr&+&E'OC(PbR_H%f!@nHKKp'i1TQp8%:&+g4@.62klpK4Q-0[i0ASg#7cr#d[KXq
%!@%j&edu%Mi")`!^\;dbhTC>;7Xn7R=?$8,9*c$[g:>(mh&:ltW_@G+Ub*d0P]5ceVqW[&7hd>jYd]S,Yt$,J]6+7r9@eh/DBZgs
%^Vj`D\!#[BO;"J0/L<C#:(^7<2/Fk\5q.Qkp(e;]k0_O1rR3V$[^J)l?LH?aL(<Cg>>K3'#dZ\h/LWU&T-J6d'a4j/\MQ5cF%Zia
%c`->dBMF%BHR=Q,>?'OR.b@BgfW'N*B8Gl,Se"tTY#hK#j/FOg@,$t"qR`ui#S.8DC-u.^%lZI.T;LRaEG^1'!>-sAqNNQa3)Gh2
%A;eK)(H<#*mXMY+"d("3c-P2A!p>cTbk)G`GkQLZBSXGiKC[E\j]u>7:h3mlg?[<,*0c[$#hU^a32lhS)-X[WAT1J0:;uT66=t15
%C0l;VdldP/le-B,,G8.F]dXC#8/N(pj-CT'OB0@V?TYV!LKV;BDmjP>%1_/LMEO6mD;`_US/6+S5pXFs($MJQnDQT_(2gs>:OY7h
%]bLd-Bu'V:hN@sg4g9uRRKJ%_R5+JF(>]hYVVWEAH$bP;mZnk5[OcFAS#nb3TYJ^&S)+o%*:R;`Msc0!aogh+',f[Z4n.Om0)a3>
%*70XkgY/qb4ua[iP\bA0W"0@D0>u/Fr4pEi'3g$q[Ijb/a4lH6B+#85q#uP=:Xegfg=g@jj\c4Wh_YU&E@4c(/OE:be>"@1Wt7*)
%Xk?u9%2m$6blf)S[gp6H[5I^p,3XfVB<Fo$TgV_5-ZfAQDb(I^Z-)a@UBrNhJYroVHe6,%N1b0)1!8+M7drpSCWJ^fi2rT\3Va8N
%l3)GI,WJOJXr_ILJe9%br4XE_#;-o=kIt^E*!+FlqB\aiTVfQ8fW'VB]'(ubaV$F*S\9NdF9rkUiLtQ*'+XANeep0YX\:En2;OI=
%9+r:NpTaT6I@l:%:W/pi)ui+VNjcAWiLiB,nbp5a#m\\*7GNCY'+RE/l/q5IJ\kjSP^CYlKn;NoE+lg/$;j>BF\Ag;;)!=/!5!03
%_I5l4H)_RKr6iX\mlq>NJq<I>k'ZA,r*`Z250^t!Scr^*JC]%Lq$J%%._*h[C^%JZ$3ptDLk@@c_>u)pc)nG/C4ub!"PqpQ\Uo`1
%_el?]?GY`eh,rbb=:!:0h'0=;_=2gnm3u0lQCi(kL<qK]e<5H0(8?N#i[VT(IS@RrS(6Zh40#G4_Q6tNi4uo?5Q)-G33%.Cq5mn@
%o\3OhA%-P'b&M4O\"[0tLPK"N>J/m1Tk]birprr>3+9mo")ReMJc=(lFDh%De.__i=oKRP32#oACm@76)#W?G%G%FkGh]M^OoI[!
%=aM'2]RYgSOh'&Zf1X*@YhZOB/Rrb(O,<b:A"[=N]O+E`3.q^3Hpq%B0."MejKdVCa-JLEd_!*KZJU>$iBY$&5pgJ(K*G>-Ms`U7
%RR,tCg8:d<_6Z?A`Xs;iiRa8I=T*e[c5gJ57=t^.1K<ieBlI$g>ijNn3&'-YTjFIJ_hrM;#e-hMZ1<`&o9M6RO<S<J-am72i09oK
%hVQ,(_ch*5"Lk\Q\FA.YcWf+B,WksFSqjbjT5AK@p0elr(>%^D+3;!*hI5!$2`NRr.u-LnI=oH.DVf[F*$"=+%>8VQK>[XO;Wo?_
%Oa32JpugKP#K+^Ub*CgP%L66Cg<.*.%`XTIKRV)aS3X3^:ZSX!n:qfbM-K3%!`WppWH<C/_Ja4*F8d1YVcpfK*?8*iS9^#5>aIJ`
%D;T(5#JYK6Em#J`n:ed;2Y7LYCi/tsG]:0]j*eQT&%\tWh10CbK>Jn9F'OF.k!<u"4h/4_*]/nc"=DSU[oEf(&r]Ubn@#JXs8Tm*
%085kb(-X])T9dQ7jb#qs'23@<*tASSV]o0JVaC:=i8(p9/Uf[PiOeX*Xa\V3\juDMIie.cK8PXJjjlX9p^>ehl4uW)3$-r+eZFAK
%E)g8mp]F&04Ril,d"aXV/]?@H!/E,+S_L1p<"OfIh4Q**&H:mYYa'tR_T21l.mQH-iM\3;1qo4dNis3gdOg/4+Es]oN=<62idfri
%VA]CWL@Bs+8'\5kE8\3R[pO.]#:m-meQ1lW%]H<4+krndG`/f7._m4U.IW0R8VH=a_u5G$-K5=1k=cC``.@Vo#pK-9cU/FeTW4F'
%Qs7WU%L\2X)]4;^_Vs.XI<KO;KVP.p//eh+KL<%=6uYdD%[?6[[^SE"65sp;C<r-<DfLFtlsf&F_`[k*[^J`bJ4j45i4\A"1nJlo
%M%E5QZcSc6[mIqZEZ).@Cl*h_V^it6%unM98dZa$/WtpI</P/\Xcb[%ap`lY>:/;>GBY(_3XGn8[07T:(.pPoaUU\I;W<3Tha1oO
%Eu*UJf9Qh)G,f88GHlhK_p`HR[p$YIAhN<sQT3oc?S=]kf1R*l\$J@m#UVZXkL_@8:eVkFTqC@N1?%-r#Lcm5iLnEN:i=\!JWC!t
%\Ng*V<"fLK[&lQ(':ua#C$X4nr,rclotY"6U9P$9><-[ggo0X<];62?n?lj%LN^PNcmTLcgu8VF:TM+ZDl>$'AmI(WHH7HRODVnh
%><d*MNCgpI[t*I'6PHQpXe7AJpL:pV$&.E)@*<HtKaVWG@5RI^)W$Ll/LGGtFR@`F>t/fV;lS]k[uTGRh$bco/Yk)Ifl'15<`0c^
%m,ee5Pep@#M)9*%Kd4/`2B+iu'F0><f3`GRKk%EBPPd#1E9)[H`1MN#HAVet+*b(E6&!3mPE7t%_J`(_lO"+iGj!?^\#.$)b<0S8
%6o8O\MK't&`3$'/Te%he]<&lc;or(fKWa<"eUO/ULg*u$+PO`GjR5;DA]8)TMAmCNBn\bkMOU`M0W=_DkA5-l6^CR>Cj!^J`%Xu!
%mH6==XfSW\E:B*,<1\#Z`IWR-$CO_?KYl`QV@VS+>@MRp^H5("Q++cMaQ'!u^I8oub,1B#Xg0oQHam':+gZ.[;[F4XSV;^%P&1LB
%6445tltcUuo2&WS&"M$nns3H=`-,)>:NQ$[_V1.TiKb\PZn:O&f'$LaQ*)OEgu<i2FrF!*H4'hAV*pZK>B$9+-$-$u14Wu`Lpl]"
%_7&FAE+g;6]k]6B%76HGdBc7X``W[lY$6$W5W3K(qj(ND#6nfQ+[bHG%X`mF.-7@0G["9SIpb\:3b%Bdo\qQ7l?)S8g5CJ<D<S:E
%(Btq7FM4_.%QFHdZ$+;D!hTt58E_]8^ZMijE=4JE!G_Cih[5<Mh9kKYQ=+BFg3_4M6te7abTR@#+h%`pF5JN@q_/CBQe&Lt6)!-/
%FfCc,8(V2>5-n];3U[i!d85t"YUgCTPk4+>;^rlV#;+5M<$kN-l5L2eG3O+;\GKja(ZcQ4+#gaU(K#$rk`DY<a_Db=:?tJiD[e#c
%33O]XpP-H;A_i4IC"slH+ZH)JF]+kuM_7EPi\b_LnbmI2Ip[%(O(&\D^YO$$9LN0h=,G=oGul8oWVTUh`"a$Y91j-6Y.N=#eJ#43
%g++Wq&o_P5X'OHpO)$YSL:TKmlB_ng8(hsNAcJP$=+*Fd6A4#j7r+seTT2QWKUDIZdb8HT7#2k&m0aXF4`(b9%Ec7hOcAb-ro7l\
%DEu&(4DA]IG^P++R@:.%`>&i1YmblF1mCtuZJD65DTn@lgX='4;%>XEC;`G6,RR1hJ4k'.KiQ`@EEFrtc6'7IQ#1LKSX1n+P/8Tk
%>c6R1.Fo,X>6]f4m-iN!af!&Tg24coR0nYfY08D2Q-M]ITIW6FpMH=S2QG:ZmW4;rLbJ))j6ni"ZQ_`;ap?)Z!@aP<:j&gmBX49M
%]%/a^(&649md'f1^8PmaXY$g42;)P^5DnG=7F+l@U&6@DJZ`ZQ1Jp/o`>6V?KQp=-7W1)(4S@5?[;/L^WRFb6YYMsJ+#j)O.a`;N
%lb:`T[lS*$.TsoM8K*R\PZXX0?(]S=#S*`82W_aJgk`6^m8&tVWoPi^8a).08qE6r)?HnK`TUq@(h6===U-G(A/)@HlFjj+Nn#af
%iCdtK/)><Am@qDk6).LE&"Q$e]E=J-KmN(N_p(BsLc`QEldMbnI$LmKoD5R73%"/s@=)&;_-rQHWshGgKnd/`VEnETdoSs?eOcX+
%=ZdL_*sdt2Gnct5qJ1[O;RdWFROMV&JG_XeVEeJ56]*?f`!N-=.f%I">]c`R6jMEjEFNMf`aB/JF:kWD^<]?dhJ`(rje3.aU1W`=
%Q/1<2:3q!R0*)Flar""nQ$N6Bg+73Dp4_JM^,:_$8V>_VQkmYhZAfL_VN>.ciL0hD1HWL?1o]l/*$2C)Z[X^X'hRDaY<>hA'Y<ua
%(i#S'@d,8/]M>if>e$a-k[%11#n_=:T==[*34)+f"^pSi94B)eKP4MG.<j2GkZT=]D%pU!EjI6a#W&/4$fP;j]8jsJrC@H_QELT1
%PhLuA#?gL4]g/mWK$!`/D4n(0-+j"V.or$+m7u9Ef2Qk=JI2]Tc1)QQjnPu>:.af&"]"S$&F+?hF4D3aqY5?F^TA*Ia[Q3XCd<ba
%C<idE<>7K$%%JdO96)t)ntp=`RCguu!63T4]QKIg/,nGqo*\g2Gn"23SGf7Q!5gk0iA9A^(erW)OkB-@Yt[Sg\;05;<:`8e4!Z/Q
%A4pF90*(5%MM7.ClX6fs2s/8N<?TRo+7Ai>R2"ZFlR%DN8$0fqU*)J^W\>m\bnh+u-"`o"p-`V)'Ve=OQs*H;Gk9ICVCL\7^+*,3
%of5aBi)'YN7E&K5WY-,e?6t>^efV&:Yq'*U6Z\Bh#jI5ui_r_#oNZ'&^NPYfg2?*(\q[Ng8Lea:V<C/4p:"V-Ue8.bmO7JrAQ>=W
%1,@?3>2`/tpjS'I;q82ene9J*]4"b/hXf:T9]_Qij!_-AAjjZ>0.)O6VS%]sXf"cQ6G=sS"!.1u&iqL%Xhdr!-+7/i;107U(nG&E
%7&X?\Z?mEC*MHY*;Pg9?U'-29T==^+:-'Dq4269RkaoR7&-5OS\M3[=<M)<V2&Vfg>MLip+d.;]ac$Zoc`rG51").!9J&*OAkN]U
%9X,s.%*.4h1QA0:-N!$J.lJclEc4?FbqqNYo)\_ii=`_JXmgmd?UL_RB@r`jiI9YMDp(PE"i8$/D'D)c[.pOQE&;UYqfNRcaT41-
%D>J#0`Lo)30JBFW#T)`X,dk!UP,>8DdEF;WBM!7$lj$W=7aY;f;gp3sY0r8]MeQir?s_K/cqGcSYCiLUC`@TsaHE-`R'*\T8[bfc
%WR*@r+TB^!IBJ_[$r2&?14ZO.6@0rX),Z/=]H1BI<Blc5CM4h\Q)*YDCB0N`S^gc;JH@Q^XG3oN?,mZ!iKM8>Z*;kWk(/%4:6$V)
%^Hs#Ro$Kah&AC4]:Bc`_atjCX']tG3]NE<c4Y?5$6?oJ8Vg_Bt<i4I@o6u0l.*,J$26,0*-t?h/jK7JK?A:QJe:]unlBp76?i#B>
%C1s:RqhZ#*NPpM\$AcYN<!bd\9Y;rsqC07>*oa`Z[mkFDKiFcVTCfm5FLiRT5q)'pDH?$Mc/b$;L[PRc(W8^X7tY6]LL-0d4h(G9
%lMZ"7DsKg4Hn,&=cFY6\SUWI'Tr;.Q<Md%Q<"sQk9dZ4,.?_+"h2,CQUSRBO.^0?.a;'Ol$Z]=h_Ho;p)q3@a9"IBfC^&h9:!gg]
%;eh4"`^1#>PB1,g-0hp4Og:HeR7&mBq4lH(b(3PT`rP>Dc2P"<Zn*SoKQ\D"g]&IU.\_8<,#?F-6-GM#CPhL(3#=5U&P=S@ds"H#
%@Y:NU=A..(52ns8(a)SpB)uJ+c`ZK1Wo&>cWahm27W]rS0ErQnk(`)_]?7h@ER.X.lA])N%Q70HZI;OeXnBi`Od,mYf=(mM\GUX\
%.LhA]#->Q$6Mbd,F;du>DlWZ:];\Qrl.&rO2+ZY0G=Jcl?[KQ/V:i1WFHtI+2o=-\n4&G.*8L96ME.C`396LH5a?*=3m:TC(Ph)j
%&jDL!I'jr@ZLZhFF&7@+#m4T!MXV8;ge(sU5Ap5),KHa1A(t^T$ic,Y.]^as[]Brb>/rm:4'3ouZ;Z-3\Hm[EGPHj<7\G<-U?ft&
%PO^$C%\9oD"+7QbM]n+LAN*jq#b_7)MXs/T"\I_GM8*GQl^FjkMd"#"RbR;4o+]$*^m-YU$i3Jb^.>g!?hj5AhpYut3>ENH)QuU9
%/,kq4O=;Bpkf>c/V<K@n79?Lq-?D[HVXM0h[`ZOj$(OMAQM)Zem0RA*NCDoq_Vop`Tm-n\6Y[?!4cP9u'!E8>O[Vt":5*T#?ALi[
%9n4JkV2U.(2--eDjJdQU\CocjM&*\4A(l7E"oaF5l7B_&7AQO]Q"<_\-.K3HDdHjNP>&*?d=q1*L$9fF?i^4$Vrgq'UjAX<2-`I#
%cktHroc<OY0d2RFB!)T7M"W)cRe.RLX:eep\I;;JNsYkIR:%$N.SLfkX^t>O_VCcmqmK0Dm1R61$bQ*d@T?(T/lWgDR#3%aW_dta
%2Uk;*;=XIJ8hK;7hYB=QUI'7Z'.Hho?l^sui.JAJl&F-E?1*PKbt3JdU9,*s59#Fk1puaOUo',^E(;-U'=Z?i.NdAs%$,(;;'d#t
%%Dr+jg\ku_a@f&H"G5F?5nd6V'm(^7,$GZ_Hn^1+iG)0*IiTqPoWE&*m7XO`=\C5J,7C0.:>qitD1`"JDM5:W2Kt+_5\P<"J4+n&
%$GT/4!N!^jU;\C/!)R?E&c[aM+qR0sI7J^fTdbneJj!h)B^tJ-hj0*+;ehFuE!M@9=@mF2E<V<2\;P72_k6?E;m]UUZ,F-b$9`.N
%f9G;U^sME0Bp@UT%puCMW^=j*V\h&j\_3Ro1#*mF^tQ3d&V)6Q@b:RGJ6gQ*SrUPU0(^Z(]\ZV=h^psOKKMe`J\)@K_Ol&LlRJ<c
%=pSXNBm=PDla.cI_]#>'<B6-6=4tT],cU7``6(s2SG)R>)sJ#=JI"E^]:uO"1?bqd^7q>^Q9+3>h0uT<97XQ?:.u(QjCsi-'AVW>
%4p2q+WTr=8<lOWD&<,`#YhZl4"Kf))WW'Qb[g8:#n[_KF75JEKAirbk?&OHKiLd0M..DIP/Hi\C%5t+1#,ED:<*Aap.P*F$c7'-<
%Z)fE]1,;6i;FZRSQ/\OBLaZ`5#tl6,)Od=)jjKTUA`G*=k:b5ZC*#Hj^m[7Qp["fA!Esba`n/Q6r,$k<_US*pS9DaG0=HHb<<6B[
%=/a5T"g6bor=3:5SI]#BQl)Ob^T3!_d!__5`ALW&T\M;_:gkE6(oKMdKmN:3\W:Adq*aK\%@958GG'O'+9i9dXS+K8p'AZlb@Y8]
%X#u@EMU<D+%%:"KB/*!e[8d+Fb1^h&.B3Dc:s"nF1-6jH@H@/\*+G.%-V'_X_\*&Q>&`Cm8G">kFkKC1$ilT]NV):'h3Rj]Ij4B[
%9-SC/gbQ6$X:sn`bg5p^at2rCH!1_L"JhC6SWq*Zik%OAVAiSCUf#@9=K)*akOu")i(4GD7MSPZr)gpE^A]6BPQ#gqh\BM^N5(1u
%Q`A$!<J?/5pbbJ*cU:SF[u6Z"nS!NP,(iLX>8'8ZesKdfBp2hJ3WqPsJP2>dNg+nnK,#!uMG!*t16=(b^30mHCVIaElQ_R3Z-o\/
%aRZ<FW)PY(2/-Ns-6BY1>IBPK/dG\u$"tIki,`*1dV_b`F2IR]S2lVR>q5IY[4?s.8P77Yff@A,D^AlBmZX?sA58jNb)QbXic[b4
%'*!coF%dlH)7G]dG6J()"L$YCopT@%OMIV>85a\R(/Ip(XD"Q,UU2aonY]EK?E*igAR37`4[(:_P;F<1l)g6MA'24kZt]ir1pO!T
%0a\a5(T`GF)1`<Ebu7V26Qrt>jS\5@`N";C&M8>#JN9WE:YS@R''^<6pVK[Z]G+t"!aH4iRZ0d]+"+9sg+n-rb00HX\].1f6riVK
%W$2Ra`5Y1i7CaFE<O7IHeXB+%`jRP<n6!Mr%\YTA5t[m(WsM4I<@7l4bShJ^BRqCH+n(^b1.Pt)Ucm]oWp8+L?1Sl/'$cnMSlWCW
%f'lL:XU)o53qUrJKj(>OH86j,g(?E5c8n\t#IX%JR4blf"t.nl+SQ;EUFi2gFV-<@g,!PsH#8"^D;(P(bEbORp]fEeom=s-\o(YO
%pOfF,A<gFfda@M8="0mq)$S)\kS'1R<,.NXg\'tNa4I9$"hCI#/.L)YfN,(B/9W`1$M>pPUH-PNMR3F"#J`TgYZ0!&NYiOJCuF@*
%M>nBW#rs6h#UnP")V\_P6FGfZJS=JY-!+!m$13$)?sWb\![r0A\#:LmmG\JHY+;@oLB>25L#+<287m?dNeFJ&!VhI,3fYY4)"a1s
%WM`8Xo1!d'*R@)'TBIar,:Au7CE[4>EqS7Aa*'tKmF,4\5'8@g]5Wb6+jj7uf:GTBb(REMqCls)l6#Q6T1?gg&!SA66)G2#D#`Ot
%OMenV;6>KP>iN:#\5FKD7%6p`3=BYiS8?%8n&IX3r[kFdT\5cApaX+sIkfZ%6a1MmpUaQJper9T>>p49,+UAe?u0'n1S`A):t!7(
%QZb)2Yal9jY`D*V`ue8m*_oD_=J^MF6Bbkj25on;K=Te7Y7Noi&.h/+]U(j&PL=3Mbprd[<pm`tnOe40"<&!EfICQ,<W11N=qK:\
%s6+e)\[O2II?fMQZ0B1=I]8AAjI6lg5c'/V7_.KL+_!^%.MW"7!>V`X']"[r=rcrQJPqu!_*/K*'*UZO$73J[E>&KX0(h$NVHkA'
%.biOOLaRn.Xo5SF%7Q/X:`iYPcDoT/ph1";/-]'!N3_K&F1>g(-+]j6Kcah.(AaQ:F!g@r/H:^oa7@h"nHpTr[f3-Zl2*N]l%gTc
%(rpmY;*e9KYV=rX)]#1fQD&21!psYU<,s_;=r:Bp&h3kJ270Hr7T`4X>kdbt]>O!bRHCKqlt*W$1j*X/>++#eVl>R*3M-JIC55`-
%O2Z$nI.C"-7"!HIGn,Dp(XcS>_U+3H+\E'/Z"*FKp(B5l.0*NZj%;4nR700>aVO@Y9&8BI=!jcgd4PM6fV5^O9H:;6EqFBh:GSI"
%CnMr_a:Fg/]>oO(nClt2c[&7`eLCVriq73BA1pX%'"re.0.Kkfm%5KOAtVo<eEW);24WYK1QP`+]@Z*9NsZI=3pYiJ;.3R*p;8>.
%dOTG9*'Dc8>qOBL^I_%;f\(jSAOlVNM=ID2V\(C///>@DI7JEW6e?@p\CMrFJkAB=?,;Xf3&7G:b3L7W+dUfG>J5DO5b34[9_0Gs
%fp&e$:^0ct_0tga\kG:)a-fJ'R:oaU?=P'R<\3Q2N]eqgUlXdT[R:TdUJO]ID`q=76>0oJ$!EGC'c0iILQ_K\.=A#-1Z)2CauWQY
%,dIM>*O%B$Kp\MO%2CGq%:*meKZ:$^8DC(EDlFFn-r4O>1sAm,6:h.)`)r]<p`88'h:3\jW;*O=.-M@B7Pck5i@2.']V/6SeGIL[
%ZM;tIB]Z1!dC`lQ#p;:h732mh[qbfpDnI^[`(KHQUh@iJ&+V0O6GMtcZ#T"c\2Gg$aqj&ag!3oV$*I7IJ6HAX;L9pb,X@g;o]6DT
%XH1(eX:g.A"(t/-GQoo'dZ1OccOdr]4!5-`qJL^*#A+`!681NL<2ILVQEFSn+b*a:S:K7[2bKDD>'J(lp9#$8&tu9EdSt0p_j,DZ
%\CO/.7'9G1NW@D`U?gUTj$?,*.[2"jg)q)(Zs!9(%(TEOWK[W%Q;E`d!<@#>7KcHTa7SQ&0;p)*]*]7:/(Y\:5r+eOctmIAVt_&O
%1/pr@\GBeiAJ6nSX=AJGILCcq)]tBe:$1)Q@M[$!f<)%q]=+gN`*h9I$KT@#X[SqK\j%SMK\aI3)ql(HlG;Q6YA*NH$/5bl*0,n*
%#>HIbLr_AHH()mf4_,muQ3aoQ6srCi5t7d_0Vi3@Te2kWf_)9J-l/`G)#rHf_50-UM9_4RTC5.)r#!Qg]tja_Bi?N&6sLaK:9AZi
%"k"NmeiG,PD?[Um.%QeV1WsupeuIFYaG3cdn*F=0%g\q2M7N$=4]Z3j)3-nCijd#NYH"7)?@*]AH<>9(bMaWk+K%bWWU74-QJ(b>
%bNpDZlRQ9<;Q:)OZ_YhK*]lpFL;b(R1/fh?g^2=1R#^0%eb^*%-oHgP^`EnipMDg&:-PnY3R@]\F#3M=KILd@V?FD(g0:cFONaq<
%9F$&7f9GMBe)Jlr8Kf%n6!YsfT^'mj"Vro1?ZWe'j1TO%?`e5DM(T0S,a\P\i(&ZD]XBZX7P>,rl))B+=&[>DHE6k<"BOg"U0Ilt
%RZN)t^QL:X$X[Zt?J6G5*\0#RAOU?P!MP4<=df"^8t,*Ejq[=34\.U!IuFq6?j5aIWnaJ26AiAmNA*O+MGXLV:#4OJ$>Rp@"\UdH
%=%Y_h?nAg>L-4H9r/KMJHk\(I,Qb8W*pWE3"A^E3cTO:K*<?@5@A4_ocas1>Cu7eXYS%8,MB_I$7/s+k!NWh:[=i4I7SHE7LLP';
%;<>I4G)U0f(o=IW:j[UC7WNj(BRdFV(esd&PL^YB?+ABt5jVZ8^d[uh.$RXHU*m'^l/,;2qsSGIRj8!p>3j)oJdAK]#te[d<TF4%
%/<O_[r_=XF7<TuYP=B!7H*^^9ML%uXV:oRl>fp%GFN:#l,3>)TVb<_)*ZmhZUh#)&9k"G<CJ8GCDtBQrQR5Z!a/1'6atnUh\H/iC
%K1qb+Q'G,2"9bWooR<JY4#/th@%%6mFI>_Ai$@RQbtbY<mto>^+pS3EA0Sj+.8sD,]b15FlYsp@aG`FZZF>\A_B1eKo2-m@6A4Ku
%ooc7&Dj]0c46WR]dY,K\E21W"-VQXp)!fF6[U3HVqJbsYq5B'_RSD79D*3cfDig+_N(Q7qkQ\MIM*atT6bs/4R,#`;9-:bT<4+f@
%+QNe;&9+7QM_27:Cm;CL;50l1=.D)%CRV&*`iZ@(Q:>3&&VYNmS[<W0]?!Y&m0/:';GEMEO+epIDsIiI4Uq(6+/&RIbscRr;hoMD
%gi<kmIFgAt]'6`mS2Q&DNn]_n\DNt%fcXEj&p*=>;YqV?CimHHGmV=M3gF23Kh%-N"WC'X[a&_j2\1,A!]Bt5.gP3CAqJEo;f""\
%(lJ#^l85Ns<)Jc+7FpG_'Xi:X**kG=.GhDc@cFF2c6OH0QjB9qBM-E['?h_d@j96Oh(4^9RcY9AI[AF;\6@H3!fCBS%bH)ENL\sn
%!d7K?)*!R&[i7X1`LNK@*&--sV.q"I/.$,LFk\FAGG8^Rh/c"0okGhGTT`O=i\_r-mO<nXSu#&*Hjtp6h`[,Vj,enBQ7"_SS$87:
%dI>l74g4%V4N;!l0j#c]NVg3<@It7Vgnj6c^NKSl;FO;fmHa"9Cgt>I]FrNgd)>D4Tder83VpUraiUKgJJOoS?<H,Y>u;'GH3J?+
%i'P^q:LA3Wc1E[9A79jAl8BtBbEW<`J0lGUSnumLdjWUFeANYqMb]PFeQ@Q3rd8l#TN<1o#H"1;Hpfc]FrObBH+MQ#7"X0lma)XC
%HFJ4p(d7bD93A?,;F<c!B(s%KlQO,fUTY?5)$f6V#i:I9N2n@f,Ih2KH5<e*9pL0,,:^'&U"/m:a`PHkZ^W`1$Yt0[?s^IAe#'$$
%6S)o%X,dJ0>&j@<:H-=u?nU4joLDYr`oo@IDug]qp_<WuUD*CnJaXFA-XGZ?"S0%iEf7Q"j>4T@,WjmO2N4IYe8@Nmp6;\h#cA#$
%:;m]AX9uquk]Nmjq=N3PF9D23M+hm*5&+]p`Gc0l+:ka#^+G0W?u(]jlY!ojNLJ]4cKlOUX6M!;CplqOHW5EV2S)f>,k,*B'^"r@
%k.7qfWW(qo>OHYpaa[96ks_sr<r\.U`aU4\i1oB./a3:PdimF'D4L9^fHiNack$RM6PBZTbbTSA7dT)mH`Lm>Ji96N&W)&gf,s"N
%5;*JU[q(s*iR;hY'LCdTQ4T1NW:cm%GY[s,;h]?`.r$n]em$1aXN]?++8HpVi[HU+go3]AIo%dZg+9_20%mAeI+Bg-`]%%,6M*2@
%CkC%W"/3,9RYn1J5LYa?o[noR*N\!%kYr@2SC&6=YHhF\FT$=I0f*\eN_(MG?^"B%'nF(>Dal3SId^GWLLB.eY.34QO.;5K.dr.K
%$>rEZ=FV4ZEW;n%3@qN3EbmK$3Q#;aBD6Ab0AE1c`oulE/N._U^-9SrI8@.(Gjk5$DXl<W]IsNKZmr=HQWc7P:CK^dq\nMdgdZ<+
%)YZ[o"1['A;''`S'=XDApX`]pD,3OmhIWQd@dhgO7dSRf.bD=-3VUJskbR5P<h8c.Y]3Qs--Cdsc0@0LKPLFA4cU*6HBa$0B07&H
%[ll`h6aBAVa'n:?E<8/T"o^?*=CVCGYHsl+gO6Sa@?&$:pK3CA"T6aa_d^_q#cEbWnL_%[(ag5"5?`/R:i>BZf1&0;0Qq0e-nAAD
%I-cY=45#$J(^9)m.^Tka+Z[tmXeMU8i!^8g;+b?t`O*=M5/o3sOc#DMVuS_oZStL5@EBO1@"EFJp+Vs.\q:lEbEdafa"H$J9]H/P
%7$%DH(BZLdelAe2`!qb("?K*2oj8+0UKCNdH"?l4QJi`4FZ8814iQ%'oHP-'1('h/-dY\N1Ctc,no,MsAS]YB)2%S&fYCf/It6sI
%N4er;3<gG4)"I9+V(j;R>If=(!rm4PER,g3/EHO7Ve6rL.a&3@1^t8\&]SL\JEB9Y/:;m*GGbO`#aa`(OVZX(W_348c:=GFNXrNY
%'_l@C<iXu@*g7Yf=K^u51*uPL]N/p%s4HP?&kb`Wo;#`Z*p5!"h7oTNCYs-N&#K'j6L4O+*lbDll+#/LQ48$**GZk/F)#r5[kH\h
%@9(K.TC+S7n@uPE;M*k(O>:5\3HtCr+J%'3OGN[4PTdYUSmmlu4,.-42f[E\Hf];<b$5n_.'-&:'!%uTXn5YmiY;RZ7ALWM#AWA.
%M<#=/'4]spkbmXr4JqKeoQW?'75:P%?/831V^Z75^'&3K<)it[RY2TjPL$Z53]WisRQD%3:3ACU(.O1m"AWZql4XFEZ>I/$_WUKU
%F1hVJFAF`u"A+`T"I>%(U3A=-d]r,c+WOR`k;@&sY6n3f^T"-%rO=YcOgLF>,:tid%Fk4&@eomc4ardu`nT)Vnsel\>@LGPaWf"7
%*De)3h/<RR%>qV0;0/$])ZZuGbqVgsc=)#B2]+R/]eg!_Y@*0GXaq`dA7([?kUiA=r(L>e6*.0N#:)_+N(tqN0^Nnt"lJ@+Le@><
%=8/O-pbnH6X&Un$VgJI@#jO1h!.)Ra"e7K:Yl,WmI^X)s[UUrSZTts4/8PXS3O\TUQ98Xpau4.e3!_!\W3CV0q>#e$^"nIZrR/C9
%<Z#R?4*p(&h$RrGW70!sV)9AI<nUl+M]pj_n0s!-TE.Ff9eUS+m3C938GYO+qCcVTd+RYY^`iiZF")m+?k/2Z5pilB!-`4G8%M81
%VhJMG/7=qU]'Wonf5:,F]3)Mi_l)KdZm$[f[;]dLNe0lOI&RN/9hI35=&fXs4<kFAC#7SKNUOJ`Wh2(9;SN%EK75Cg"pO!c&cgH/
%S!sR2E\7?15O\K[Ie8n6g,?A#m.E_3XJ9?sR+8\gHu<aedf24/`%,G)0f43;&.Q54)0`NbH$(<(GBSG5(H7n?K45nS=<"g;@>mV$
%\]>fpj'^[LIngOmBVt1PY4Pt(YkW4#b'c[8cWY$oYJ"te/ZtJ;DL)9B`d_2UJu4i$<YYncQmNOSA.hWt?kn8&RF0Z+<2WFoUQs6F
%$*[LHA\A>AG,=SdCe,N'JEjMt?A`KRi4e>o6&Jsu]Wo5&&"@@8]sapris*<D#bnDX*V'R4j+;BI7CQKOJVnJ=rN6_MUsaIR..mV:
%?1t1#Ip51O=i/>LNrISFh2Hk`k6!3\AB,lPI?\`_>O>?c.[8BBF!JbhBq=YlUc/KA4RH^+g-8PGZ78UAoWV"IX-77JOH/GCEYaJu
%dSq!S38,rtEK;%\R?L0;0@0ciYT@-nd+u=62=WbK!WR9%^FUKrPKRf`"L*bM:Q7`LC1nb_<X[t-<AQ+ZiH!I#,deAVobFX*4Y._=
%Wl3^FDq1MWP)6.$W9jTZccZ,`_7t3BPZ'+tR[5hRRL#a&PUI0<ZE.dWcrNHl:0SD5-rEtj$X.f6Fc6iQINegrqU\'+.S5*#p#cD)
%=#rZIFacHR'lF=M&I<ZWUnUFWl9F)Q85]d0+Di-`@r-?,9WDUb@2i^A/K,9YK3un7akeHQ<El-:1:k`TSCSsr@\r1c)DC&m8<Kg'
%-SE+UN:lBkhdKANQnD!!i>ea?WU+hl^p=I0RpQdImaJ<<[Kjot:]07JMN\ce(75K!SKSXIJR5_/kQ<+PNSDG&'#<-(&Z712A&#nf
%)'C#$gB,IHDL6QfC/Q<=$)9[<_S:jQ7XkLO=bQ>[0$iN/kR<tf/]P_<.q\#tKCn94[$f5#\_&u/5V@hDC^mI_P)"c%rsq'fIY?)V
%47m];\R?Wd_-'9-)eAa-PB^4X](oBkQ54!_NFhYBmj]$3R=)^DUTC<N?WmeLU<l@u?*c`\\kfTf/KnU-FWYk'\spA-Lp#s`3tdD:
%U@$@JI:Yq.QFTTj&E-0r@U1A-GP&(7p\rnS,%]MtZRk`ga$=?"65<!9.?%-b<f,'H6(eE+kiKb)=jL]uN^nHBja&s1M"WOi[a"/U
%@2MBu&n/(qdf[>IQmg`%M;g(epu58T$Z*6/ZA#e:7=Sp$]p`F7%ErotK_qLo-!T<<<24\/gVek/Im:jcj:JTWC80X9E=fWIQKh`b
%=A!4Gc*h@`Y;%2dnBT+DJ>Gn<'FJ[n#`h8C#nQQ`bPR'BkUNK8@K$i#A=R(CGiFLai(VQgh#6-l=QZ?\<4?S[fXQK4'JTa<ilsAM
%Otc$q9460N&_6imoA:>1&qc[LF2.uSG8Sg=V<^D?EBQr/g5/UJb0kOJ@:Q?)<iS:u&.02M\Z2pB^90&0_*&K7!DA=K^G[;OafRPU
%XRUX1]95&(f.jSjQfpi:,@%=8e(u9:I&;"*4=)OT)sh=">AZlJa>pl?QCmUDr>64DI+QXH:ihM.F.qok^m-4TI1G9D4PiJ;RbDdJ
%"u+ER(qg!!O=1S_6rm[PN%C!LB=#Me#u9W!8iY2+NdG6MO0N:bD?cK*"0^0u;QrooQCt"]42Xkr.dm$X4'2lnYL>Qrfc^BE#X;9t
%ZJP'J[lDGdd>4Srp^Rl@V)/5RSj'=c-MGsjl;[2>Ud/+,&lP3T=^qaD'K5G80U:*"d'CQp=H@ec["f:OB9n7/@AV#rjU*bgItd5=
%r(1?\<k<2t2CsP<*)2CP7?tR1ThSE*F]nbqihu0XWjYt4^DBUqYQ)90[h[EV<Ec-nYM(O+K;0oCWPll.5F0`=Sr+qnEsSe2@6Bql
%SJGZ]r'7j^)!jb"(:$6I6qb1[X,a5o5HuYqp!`,+b8&-d98A$;9G5$JP[U(;2pdJaIK2*WNul&qq&*;H^95=`P&4P,+lSb7;:No2
%rtPsr:$<<K/>;Nc6$O]IU&E4\!.nbB70ojukVO[SNK?Lk*O1(WOGZt$qD6\$P6<LOQI2=;fr0Gs\ESp;bh<a83h]S9R3ad3U/r)+
%3Wqg%-GS@9QTd"&Y1,?@E128UEBrb#XO3b8kN@r;i2?I$"+jM)C,5pJVDs6CU%8]Nq)WB4#O[0o!/gNNhSaqLPp0q=eOmb'R<J!E
%U.^s4J^7l6-2`o9C@8N7kca!]BJH\m\A9Lra;kEF%/ISU=I`eljL/q["uWi`mgtjb8OP[W^Ab(t.):*'V%Y!9a1_LrLoF>j":Z(q
%2A/tK'U$9GaBntHE33TlFN9L&9:ib?&uo%T=a-!314doij11")GhnnjPg\=OBqn?09*#Bn25LS4q&SR:Vb&Gk2QiW9!%u?\#X622
%E"IJhQ.]SsfL,k#@\;C59jg1)onOLd%L#j3;ds+(\jaZeH;@&@&nHbK>(Le/VB/PFH;gOi0ikX8qO1%=@oHa,eq>Dp^[a%C1BRSe
%Hr0lPZ<i9Y[tC3d'G8ZSR(5:b'c;1iMcW8#b!%MrccF&kQ,1>cf,K6pVN-,,r/r;*TD/?>$52Y3=3$%fF@OZ&-k%TEkXgq.+V5A2
%>oACfrY64sJo+\4MT87f#2,kudZ?_J4.Zr8'\1@@;QURCIi\0`=k4)#eP0g9#?OgI&DXhQX=DXir>%C@L7Jdcm2^o0'rCf/a2WmJ
%NCC\bg=WDih"c::N<O3?,XLU*K0dU2?AK+R+cEQ@9VK9KMp\1e"3LmZAre,I1%X=d-"9FEW;)DX&(s+4DmpO!,_Qf=%<Df$7[MJ`
%J(Nq`=iI4&":Jo*^g86^_Pol9Ypb>%QGi':pV_qN9#R`:MDF:SHiGZ-;K1Xt#Tb0/%h^,OK]c193#R:HYR:eN8\BT'SD'hFbi\=g
%%^:NL<&#:&F(X/IF&)W(JP]C&lXCloGgl(aGCr;e0AC*&*CFj%*E""4='Rd,H]2e&Eft#L.pIo-k=N$_HFX!5[;f)#pi,9Nd@`i+
%N6Zn#Hc4;fg7BdY:p2KWS5qk60%CM*2CsljF-!Ti;;dPHdXbKWDGDm]&;#2%^J.ZR12J(laemOIU:'.<FLe\Dl6Kn`]Ll>59]Jbd
%NceF"<?g1'RND`Up%@[48u`=]WaBdSp%-IYNMD9_a6M.AX<-sY>q.$4J1Ia%Mi$9:>q\#c!aOe0^M6?J*j?GD+ploc]:s5=qTJE9
%,l^M>eJa1+ouS*/Q/W4q?/!qh[ZI/-de!VgO5j3>T`C%/)T1tm.<(`gcN6'V)j!5E#ZPf5')1>%ID<hL!fb2RHo]1T0X:!dU><DT
%i\6`2rYisD4,B4"aU;&SOos$Gaa+3[m4=p;P0>utXu+=,SucYSNQ;ES`N*DXmM$d^,<tDR7MBKiadDYW)A"&c4,;53+eM&6.`PH<
%+dL=/^I2i2oA4sLTEjrBqXgcJ]3)K@,2XL,<-TqrW]0Xb`YAQap#+_7K1Qpr>aJ1#f:]A+f%q;>)AhuGB)JOaa+oSbrr`X8K6iUR
%XTo76)OH<td-O?A^W*<H%Ar:n&-!QTIntP*n^UB'Oga"j^6n]`2DP:BT2^44FZI_#fjoK<L!e$#js\'cG9=\:28P32J%4Atm:J6s
%hu.O%;U<V.G9\,u?Jc%aDOQcnD8$n`d7K*iH;jAt<q8tb%o.S4YFC&,h(>)pY;]D;?"GkF#]QECI()!XW-Rq(h7#oNNu'J,NJ"Ba
%UV%93h5SOOl-7FrB=(!MGuO=j>FE8+jQ='9hPBDO:!Rr95DTY*45[1<-CE)BT'tNhh.;hqcZ`H!llf^=IJ8K>[+9LXoV2`Ll1/^g
%oFFig'Ie?Io\G;u1ro8TdWaT`F-U$OVGXrMigM&0C2Q/1fXD9q\V$f0:g@R_##YE)ZpG_jMlH0bM-!1=NN2GJKOk^kDm"PrC]mkP
%ankF$\S@UPD#K!>;ZHH`lQ;5hO7D/o+&EdZ($[/TrubOP1$?g65G/uQe0R%bhc%$362cGBn)fObZhl*:Hd*9&H#D3I]4<f\k!!MV
%0g1Of2fIS*,W!5>&GJ=%!8N4;n+#@goVV&s?qm,gJ%@l@#qLH<qT%n/Zn:faK>$_X3/`J.rI.&n=+MO6PJ?QuPM,c_-LeW]qIsDe
%0_deh_q]qNKg-@:0YS>Crb*"[R+b9oGCT8?c9PJjMuNb`(oAfGB`&*C!kuu>O5DN')a:tpO[".<SgB]jB(ER?of-e3*E7IuL5KG]
%q;'W+'G%q!r!*R]`RR3+r!-u#CAn10o,m,%ar]Q]kBAR=o,40RIeWCj(&;J6C[b<nYrjH5mL_CN7m&g13]D<&dlXPd4io/_W1U/?
%*Blh-?@U>uh8!d:&^]\5]7X.,6`LBrhjqd@ZK'_ug@#5T#mJo)mFNIE53XEgCP\Np]X.M.H^Jp;GC':oZr!l#HI2PM,sbb?$.4[f
%Ik6QC!)tkiru0AGDY*0_mlqS0fG&9&VY;0jC?5foTM=l>(@aO,b,4o?A+GOiV[RnOokiQVrq/bL^OAhBb-H??q[&QXT!A02HN,iR
%ClG$/e,,3*2fW[3(k+\Z$)$G&n+Z<G$TDboplh3)s!^qEoB>`,D1%"1D=dY\MHrO0:%*;La2."ZoD<sMT0F1l>-;?%EL^s)^XfDg
%:.#`N*.KP>/PfQ@5=keAj#6tIDO/%!8QLl@S*'0_VO#CfH2^!8#.s4roQNB":<K'is(Ms*7Cuh`iedui?['r,8(E7WmlPXGa.)D`
%6(k!Bl`[RrJ<ag07J?Hke=7%5f`#cIH?PV_K'r*QS.=:k^:uaK2S*6Z$30DqRcua-@f1_g_=3,0W+U+uPOfl%HC`r3d_?#;MYN\6
%mqAB@KB#8p=528(-5$(>anp;Zdm67k,lTk,Ck2/or-'r@5HrE15L:G#@GKd0rV&dK\D/J+5<:n.?/4Lj[iWaMHbA&3DI$Ad.%^'\
%[ms6>-m&;9,nF/8=6WujTQ)98jWsn'nc;cRD?YQFjHGTVq&odK`W_Hum!VD)1b;TKXbR*GK>K^qq@E[@E8!VR.0<=PPhd2:9a0H-
%_qg&d%iKn-mlAStJ*?r\W30Tc4+mS=4P#2oc)h+f"6:NneOp;>EP_%MW"c9mY'd/K4C3n,DM9&Q"t<:'H2nJ!)biO"!Ua>uWF\:/
%!?O2=ALdgkX.";t,QSt)`;WIEi%<qLrqa5T^tg_,HFp()i8ZE/h(STR->8JO=hlnbjKog<!+Z*OU],AY!r.(6L43L8JEsRA:C.U"
%QRq&5eN'4q%0Ws:`gZ5&+U_[kFGiFkZ@M8FQ4!NT9b_Pp<hq:f)@o]\Vn:[WX0Mr,HV[LhLZeJ4"^GR&Xd!;@5S\6t@6uoehGaM\
%1,$LC'Q>UG<%prBdKK?=2LG6a6ig'4Rih>s'l]g^FW9></AP\$G!idA$dbR)H+a-c0L19&ipfhL\8sS%<\J0;K?Tk.G\@19=R:k?
%-4Yia4Djr8<X3;C-=AGhKfm-m*ee74o`5takWZ`;"9R:Qk\E'5'`o:TJJ`$O/J/OD1W)!9ed*+m.1LggV%V_^62Ptc"F0bi/T-OJ
%6Z/?3CBQi'Sc9.TqH6d(`hu?m;)jekW$%cHLka%6/8^fj@4c^^dJp$Vn<._l[WMWVC8^(B.9e4)_^Z$'?:oddb%)U#>:SRNhjM"B
%ed<D<XbmkG&$^YsGunsN>:lL`O@o[%_b^_gS;"`((fB0.&BgYk!?\jRG.VsB2elB1,Pfst`IJ.mU?>T"Oo_as-$`iNc%$"6FGIIs
%".m)=k5%G&E'sg%&d`rCT#*7c>r+;=dogsJPZ'qCY_<1>\B[+0#)dN;Ij+?4Ds>'XC%ugfajeK[_hWJ%H]&/(84^1:^fV``WL&'!
%7gR,Y?VgWNHV!>^kU-K9qCrSjbi-!^^eM9GeENla_!?4R$F*f'i"^07h-3>+^>\BH)[[I6_)g%&D]OE&7_r1hq(3le3!o%HX5r*9
%lQIQnr\07U=4S"oq>%8_,/aU&;_WO;fN&YFY3f2rDE1#Dd&r%WT&?9dqT7=Y'GP4c;#LYk!/^g[ZE:X<(QnhEZE:^@pX0`qFI_e`
%@(3)M#KX+Ys&Kk^S:oc8Q?)A93Zrn9$A;4<G]:-r5XD:V"!cAd=J-03Ig(m\-k"f`Hn:U36<^%l6rpTYV-@0^p=Rj+nZ=D4+thq=
%\%'5s]nEg?e-->686MSM!ojrrR8Xjk!aU=iGs(f&0DIL3DsL#&Rb/ZE'a>RP&aeEf"!\NuXj,E6BM9F5Hg'Y%a?\cprT#r0:`3pX
%+83*lXmCnV[dN\YVDHRY!9Mg*BAh_:loqjEBOG5f%:#Mt"#hc,,!Nc;#4?B#bDPKh[DBmdpiU"V>W':Qj9@ZB@=acKQeoO.RtaZ"
%/NE6N?>X9F:`S[0B=1j=-l8$K(M&h7?!DBClpo.rcIP=(TN+,0@dp3TE'7eGNo.,EI1gRGqKgU23;N-ngq!SnJUZ3>aUfM@RY:Eh
%-/2KZjeqZ7j*IU/>IO5jK5-/!P!Xs8S;0i.[\rsej0A`nX<Zd2q@!/@f1UOb+X#G6od2oMppAr297Pmb<_#K#$P5-CY>Z4`6\1nM
%H;At&'F5TZOAB4:$,X_Sq"5o6..tcq#iWR1L6D:(L2c&u"5\7F&.FGb5Q0(T*1/97)pW:DJiDpogaP%D#X1="*71St_:Zt'!jT-=
%hQ^,2+@;%FFO&V*LDW=,<tZSb]hfs;!p'2N?"V7l50h!RK2</ER=d.YJkqNJEkN1o52"9A2E)dNE)l:YY5Zor6jYJJH6Gm?U'b#o
%6^;UY]b0_JLFg8S@DQ+=eg:+LbYSgf@=jPWH_!<b#nB`DZHHI@E*t,;;Q@=9#p8?hf.BY#Y=/O(Fb67E1r":Y'+EMeb6GC=_>"S?
%o0]+BdC^dA>G'hZ\jeL":al,.\CO@gTsd?T]2K5BG&%e>68uCQfcgS/.XB-u?>l*\EV@'3X:R,j?%NCi`_Jjun8T)T*JW4rhZADB
%%mt>-k>SA<PMMCo>H4>^=o#WFlV":OEV2H#Xs(^j`qP8ACKmqQQjcjZ6a,FSE8ktg$Pn,/NjT&Xfl_45,K@q^3,Y*c#C<:qIqofV
%LlNTkKnpL.cGHb89>7uNoq/Mn5JuJ!_:C45@2C:'>I^=l"[T:-^6B$%b6fYiaou^skNOa08/HZ$[(pmoE^>J^P0^[SGf,:<X_@L3
%X^0;1,5Ir:\M*K)O1<;?FK65M@krq0_30#CW)&WHm5/(J(e<gE":RJ%]PlX6"s<4=o`(42BMd,ChO]LW_8'_fK]QFV?t_C3<6`<X
%J2!u!;A[RV3Y(K?$Keuu5l'i8ZFQ5/5.ZZYS;3?F!D7P"BknSCLrS[[9p@ebn'gdlau[A]ldqVr_/\%Zh6Z2O`_@6AJ6U?m_.$m/
%S"S_jIZo`?Cdl7H`!S0a/mH_B/Cc'OMrgXG30n$^A8uN9)NH+5q?Xtf":`u'MN6,eW=;/22(UOZ)\RjtiVIO+MIDff6,UatJ$,as
%JS?;:H70]7@9R?."b`W/)O#FtPXGltoZ'c(:-S=ZfB62Qe6C7<%1S$PoBXs`0N5q800-p-.d'WD%mnQ\c(AB=,hQ>HE/gipiejum
%B=N].>8+a3%+gkA4"DRCcLC)$J&eZ^?J=##T&IJk.c9_j*ZMPTL53436.h9^(Unb%,n7_XU`I<oG\\3S.%_aM"[gdIG\TP2H)_dC
%E+*Pn<PsBWV<*$4XMN7qFSU:*)@e;&c0<s!L'[epe_7-Apc&HG!L7KGiS$H&%>K&)0#,=6#)?@ePi(a1,BKujoe(0%/WO*'Q8]XL
%)IZnhq?Gi$+f9Vo*"JnLZ_-WYE&d@R*!F0g`5-,UD:G0r#@h;8^#Bef(lgBtGcMfJ:;a7C9?9Dj@K*WV%N8\_[WMru2WAdq:XC/f
%WN(tof8&bu@![XJ(&P+UnC'"eg2F76JK^k,Y+KHaK8OWcpFYG9NY^5%""<dO`e9dt,@5tW"/Z2QMdM>H`Ha:crd$"750gtTbc4eU
%pWu#^Hp09D]gWG:gq;+f&u#Vdmrp=i71YF#m1+6=*fM`5;7=Q=S3+WUL.EDt#=m:_[aJCTi0_/:']-t;6XfWOH7C!n/:.sZ,!u,;
%_7SMg[eA\?,lDuNM$;7)i1!sLTHI=`'M^Mirid!,r:Q4;.&uY%kk(a%E;2V6?a9hH##5us"1J=uTBu9fJ!3,;<;KMLF=k(Y&1b=#
%Iu>EX$(Y+d]MoHR277DLTpTp\@q*2bET,J7I%5k.EOpu(e7p$s#\,qtGb2ZV;@'$b]qAZc=pRXe]o35O[MU2tEd%iGC']Up1SE'U
%6hnq7/TIA.#`$n;B]g.!3%1ELO]*YPS.Ns'#J;;o#0DVmVHX]GiHp&h,!Jc>Y=hM3P"RtL<J7)OBe,j1Cfs.k4q=m,0#Bn&NMbTd
%&J;fKJLRB,Ib_>#i6^2t=IW6@QT!iJn,R?GK^k;UJs!0q0I50!Le).$,BR].kT"8h5/P^>D67`-`5bIE!F'\_"J-548'`PVWEUU@
%5r$KTb\iP2K^Y\S@&P=p-FY)<Q:X(8VZl+_PAlJn![E+",of`_U:=DV&L$to]@:%s5[hWjVh\72JA@6U:iEI(`9tk$/XH/k$,=OF
%lG&*,j<9lZ"6d[(>;+q_eVu(t_8H@gI15L6:W8"dYd.Se_N7GrnK0@^f%3PNEQ*cKUPCMI`"cpcnK>X5ekB=G\se3NH>_!Gosl&R
%fV`?@)P5*g_A!4!">T?63o?B_O*CUFVCQjZjREdU&4C/XY&;ViZ$)i.aXrr(,VSljI#',*kUYJXDpcK\->t7N*ee9Zkt7g)4[]t8
%N6-1tIOQG/+9LF+BS\"<0kK8p5g:mL+GOfQRL)</8<kjQ`2?i>\W!t/!r@_Y=*7;AfkZDp\PVPSIOQ699$jKf9-&s>D.(/ch"jo1
%\:+U"!-#OY5>Eg0A1#1T\80Oc1.sefZ1N4O139*=%?NF\2!gu;BSJ$6h=="1>++=$%Zm8RS5B''5$;U/V^=:LDU@c>27[M;q"f9.
%IpWWoESR5G:8YGG+K&/)T&lhh8mAY@UkZ71M$R[`?7S&RZMVO-4/M6r@hhE^,>U`H:N^LV$>qU*M7SeXh,6mVqpHKUb$i1&H]cJ8
%Pq*<;>J)2%<j*7[&"?a/d-3>\:SD<MM7':Z4%^1I3e`Gs,4ST^kD,Q"<:&bpPti-+7e";'ZN8\RjN0<Z+r[Pfm$P8lS^p]Yas0@E
%Lr#Xl_P12l,HL]Pa17KlEZ\BGPo'qYE=cS>6I8Au;c,"q)[Io$&eIr$YB%-Z/?oMb5H%:m6B>0i2m\oFSS##f3P!=2DX!E-DF9!i
%r-Bbm:a3c/Z7]8nACkPg(U$92`)+m>kt;^b1.1FCeJ\'=ULR5@UaAuOf``kB02Y66V&-.1).(Flk<?#ql&_o&MmE9"MY-b',+W7L
%47RVIrgbRKd9`9t5ZnN2+m:#,*G'adLnSX;."E)n9!tgodG[5k1IB<>l0/^:-\TX1eV!Q&':JtBpe(npUq4;*)6b>6g)eH,-JW2]
%?=FOUhQB'kJ,2VDNRf/=l`LW`NWuhTRKCjp<@M-R5:jD'(.A)Md\D6!]MKNVO4(;g9kLMT6@Y&69R1n[QnT,TN9!lY#I\Q9$4VE`
%$1Q7Ero^[,FP7CDO2pa&QrDc'7'&VcBUf+tch%[@8mQ^_a&85f+oi?mW_?:U6i:!%9Be:aYeI0u,YMJtom8\^q""hd4k"E;oLIa^
%94m>?X_B6)mAMlO^K(Bl^q6-cH$U/e6`QjdFmTi/%U(@P\YO!U_Jm)0T\>Fg8WOe8/'C?LYT?M$e:Q7$d<`(n*>X9e:eVRq/f+rp
%nfTk,N>BoC7B8[X1?!i61)+/TK0l<nbd_"q7^U[I:Dd7lf+c$"att8<a]iRF9i"-%J_+5s4BE#=pH4[ER9sD!WpNjU9;O^>95pkP
%g-MCZ#:DG9QVD%?%@naZp;](bo#%6m1Xl3\TK(_LW;2i-Bq8=aSfFZ$VT<6cPQZ,gXZP<8N2$H>hM3pTq("G,M*%Gif/nY-7`*N;
%9beAn=XbG-Y91$`jL>3</K*]M"ed(qD.G#8MG:'3\mA0eW(c^810:TR#P)Pc/YphdfN'lX/uefXCbFL9TL8[g*]Sr1f&PBAj:A$\
%60!$&4j7&ng1Ee&lXl&!Ccc[-JVjAi?/uo!3t,Ak[u6jlrj,VRo;i%nRE98$Sbnj_a"ZeBTT8dHC,A3W4ObGD'Ig++U>sC#0g)@n
%H;SS1WEd%sJQ;DL$U5oPXPP:!]c/j9;gqcsqH?571E`>AL2j!'Y`6#YS*BL08A*,CfBEbcDi%d,5K%Bf!MSCB'i^/E<>3t'7Wop?
%SuT*\+3.]Z1DpI"F'o_a]lpm=(/<N/"Djhh>7&90)167sm(MP".=[/nbo2;HU>96Lbc,Q`A<MDp+4H-%aYY$NCC+l7c()*I[B#=%
%C,Bp^))6!Qc4U+5[+W;"8>hH%157p(+2n]GK[b^l6jhfB^E0L28i1i_2/;H[oPd5:FUFhhOCLE6IE@S^lq@TjIcQe%=8ql+780db
%8Csu+"t,PsW6pU.RnBO`CT24IkMmQ]>g<tuKuL\)K^7IRbbAGVhL&.ue^%.,CGK+agPBSm`sSlW3ZC"m=?0k!f[MFWWMb(M3L/1D
%oiKZ=;@V^nH6d%EY+%><"jr\HhIY(>"_lY*?6ig)=#)8<=tqoK,/`lXnE(89mf-qd%C0e?Q#,3XS.=m*63naW[i2r90ja5_J,d:G
%1dK-k7q@q&&"tQU6==D@fs:Lck?pWUa$=7P0B3K\Q:Gjj:Yqq:%CW4nm5n19'&FBlcX]HR[aW7#J@A17!WaVGCALY*>1mFj\<l>m
%WR1N`k+cD;B7hTJ;O"@MQ9pLK,=1@/Aed#=g>a]tNKl:\=L5bZ^n#MH9D%02YUtkTV#[SEE\Cip=a(9ZY@Fob?fUMeJMo6CO2XT3
%'mpH"2F1;1:D,3s3`K'@<G2IP!lEA[<@78CCC1!2;Z#JPjPa7KhN+C5.[h>*Ga&@KaeOA#^AX!M.(Dec"bTQBZ!pM"6EjTDOG0X%
%-t,O)H+0j#+eP5*-ooT4D#]ZEr<g<$6M/H?q`M[;QK`&XfFe;qHF_/g5e!V"A^I.54foKEhpTqG>]O!\3;hNXkbjRR\6=RnL0-OO
%H":n)S3r7=,^:,JJ%KKD!IS[RO9iI&R?b6oD'OaP9%G+H,=@[UP7mI7>K)OuKQ8V`%BraS!)_Jin*l[K`[(%e3VKIqmSU(5XQJT^
%9$9Dn5AnA>)6]:67ffAfd5qVEXtL:Zn-4tg@_l6!;'qEW9Ou&WD@3)ZCtLt>X+tRH-\r^Q],0h-:M]]JC[j<$\+qHs@O/A.a6ro,
%=2,(:]n:Z5Pd+<NpNs,m'(D9j6P*D?8\<hO\2mEA?!Wibo]MI5LHi1VBdjrJ]>F\uB>iqT'a_'k&6:r>\*U,/O5E:d]r-Da;<*Ph
%X_T:(LI"/k"G0GDRV.DYIU0S]Yl#&OM6CmMGjb0)84tZ]Jq"3SLFcf..?OM0Lt"(fm?9f/aVlISM%[e9TLOg\-WjRX]#KNl6LTG^
%$%Z0$m\<5tmLhj:FGP&_]8F,<c:N_AF0TTu)=U0"reZVtnIgoH_)bP>2L0fU=;h??h0Jt5G),!O=XR8]@H:`gS^ZOOUd2J*BCK5b
%<O"eu+1i<OpLsH,J5!R3:)>N"k^R*ggh"25.`f7*\5=FHn!Ch8/a.EG23?d4Cl\Kt"+qp[ktY>SN9.B\TSUG/o-,\`a4<e/a:oNo
%1KK3Ag!MZM,Q0(RlRP.mGc-%D-*e620_S0E@>D!_k8LtHg"EQ[p4Yb^dtAGDNLiF$Ad8Xe"B!V-YV/;8=*9Xo>+i>:*Y,lNUMj"e
%9A#,9BUGYEi+[3Hp+krO$h83ulY-0(;`#/C&Y&FL6.h('87f/X%AE[:i[/)$^flOW!HF=%*t*tca%GmZ84BHG%3X+QU[?N\5GK8J
%G1P1Q<(`p1nlg1'AI4H/\dT1*b41Ki`,8jFf!]_#*D%.^ah,NZS,6SOSa\?#Z13+.Q#,_G2FiiBpl7!Pg*e[5:t\3^OoZupRsnW+
%*V:7%@TkL=kYJRi+V+FHnA'o(#A+-co\Y;gP5r!^HNs$>"-%p4`dX=%eT#9[`tW+&\#<GJoI?V:Tm^3M2Z_&9oKk+Nc2+PQrMt7j
%*YUheWlUcu>9isSQFLf:9&d<\p[f.D\..Z;9?Vci81#]Oa<;C%_u4KuKFC34kF,s)&4._329oilr_^l/Qgsd+0NR1Ia6KagflotA
%`Y9aV>:=tiLJHm2fnt!ddqj<U&p?MiJU%p@3ohtEY=AHacmU`d6))S78GfD!mK&I)7nie:_$s8P%51eth_31t?mnDV+4#CnQ3jRR
%W,Pkb.+nt(76,KM^EF3*(C#rfQbiAu@.dYMc9ccGa8_.G>#IVVK0)@F_URE$%KoCnOaXs2YRF'Im<_2O2d:hgfc.An@"\i+@J1:T
%fh]j/dlnsON!6R/ehZ,;NUH8mqX/fC80RD?-ErWu3DP!&NI3?-1D)p<hAfCY)IXkFRI0UtG[hr'l79BeHdJCl*JkX/-%:q6WK\Bt
%6cTf$JMQh@$Wa<_2Q=2<`-SYlGO'^YDj0VF,BJT1gs0[);u)uJ#+huAZZ[t9-%A$]R3"s0p`qB)aI&`P(ZEscW]-@O%J!_\kK<A$
%'lj8#GG'S+'3Z2L%/tU`j0Te[MV2L#?L/U]]LlQo<#P(0cu$%pE8Gc4D?_lWJ/T6YJiue&B2OoW0U%9uOh?H"pUJ.Y`15\e?K89B
%H6*TpFRi6eUp1d_!VXoT<!W3Vi$4#mGao=6=?mjp+if8LjdIhP=Vr=(3(J2]Ii7]71a.1UkJN72UA3V*_,HC4*l\B5&8F@?Gb3mJ
%S95oFfJP'=)@b8F2&s]h>D-OX0%E&^D$AQeEV>nKE)obLd8AB%1!A',10TJK-#ger*'ah"7ln6;H4b[aJoj!g]Mu-OM7bTJC&/b7
%3&ABnC[A=fkU*)\&T56lo`<g_30YD5j*#t;(g9,DVS+!)'J0Ok4RVVbhsR2H9WN.;1p(dIE-d;ag/Tj?9PV8LG!m=#A+)6N_\1:+
%!TH%Kq5R!E`,>$pWO-/)X9!Ye:!>,SkZfE[r&rJJ?lg?3@tRKF%6_C)4%H1AJj.&n^WYZSCYPL&@YGgK2Jd-fUb]',bC.O#OcBn6
%]mCac%6e*9f0j@)g]Fe\G<_tLXAkLN#_6?f!/)P[%Ng7E25B)2pLY]ckqsDT_qHHt`ignn6A-f]F0su3]Y?/PV=cE2&aj&F*_/*1
%5CcV$r/kZ[#>IY+_]uVU/&X,rePJCk=MVFSFJm**an!m!JuIi?2H?c#O,C-eP<YNF&4`<ca_W^7CFE+</_.Ac<Ot-4E>dNGV^3]G
%ldSWhaUd@.?_\X>,s+:[bV&cLkWL!E/mrdu[_9:<S#RTUDO/c"7V#YMd($)%[KULPQJ[JG=W,2.3g;KHf_d7A!H(u"3$n9Sp]'&F
%Bm$\FF=p$\NK2_GgK"@s0;c?`.V8)'!iKVFk`+%(#Kk89h5j6_rQd.7*J`b5AbU@HFk[L`-+Yf-eRR[bJ2+l<N*ca-W(sI4WME_?
%_<*nd-++Z08hI'O!tZA,'A2J`"^BO6boVHJ^K[43*mtCu=X&kSJ1$qY"*]Ru6g$FH(7Eu)qZ\dt_c!ED5QZg5Q;>aQL)YCW,FBT\
%UQ&tiZm_cMmjU#]XFqSs*O;5?0+OUW>mes:_b6An.pH!=])k1rJ?KZsLQG%LpZ9[(`bh(6MO&el"JnhVlrFbseRRIKFg)1o^=Z-I
%K7JBY+R(,80>W`dZ,lKdmAS0#+`^_35.eq<;&!Os/#WTSl8V+D:CWRad/PikQ(.s7?f\M>G,ERYJn'#()CIg1b:6MHYk?eSgd2=X
%P0U(?c#Pi@fIj.=VIj7>+.\?n76CmXp$.+<("r1]"bN=8B!/s-dd$Pa(uegjR^]YJE>VTDU6+:;.4Y$D"VH+SGg_N]B9p3b?j'[U
%UNLnBO0O2@F!f"%8J7:6EL-=J3F5b44p5jriJbDoY\]X0F]N9+"rLg`_@nOIg"BBh]B0N@;n"$?^;5`J?YZ_n]OrO=FCB7:%oQs"
%MH!#Tb]47qn)`g!-$MV/0,5!t\)R1J"rI`p3lu$LBlL+'PVV:QA.k/X#epTC>!ZOta\W3[Sg2&O.>f#iD2ZOe?2J'b"\(N"ik:M:
%)r`f3;=2(#3,M"Z#*#;6BGYa21`>!AAXsNg1(43"^`GLY-5/gF?\F[gI=YYVJ.M-1UEBdUFYt+[W-`pjDT:D^TFRoAUt2(PE\a&_
%r:t3ns0dH`eY0@3XpCXZ;1L0Go<GikSs#5QC`kCC$pi-Z)gmpVKeG2`rN4tb7/a%;.=t[./N*pn+."GO@Yu7Cj$mW-MJ@1=WNPI]
%JOrsu$:]!Q4H6g*<Z`HiaWB6CQjF%ae(c@nD98KQs#'5rqN7N:V?Ot7d_=0S#hU?VZ:BHGCBc:&k]^<YHDZe4VXZh_-O@.df"4rl
%B,`.ZS4Pim1[)g=quo(%esXS0/.>Lt_i:;:(3*SZU!BT3TUQQ8_O`i-'!LLUI2]:O8*(nQQQ11_-eP'K`r0h6#9%@FJWE3Td7N%C
%>I=_,d#kBP'$A,gh;d!Ob0J);_20i\$q*#,cJI)Z3@HdsQm5;Q`:Tl6"Op>sb`3e*+Tr^:Ir!p2&;Duue<POu8+1\$K@LV'kNJ'd
%@STc1Q"%sGYDQCL>4g-LY=ln9D\u9uD6B6@P*_)pK#VrYOV4db/qKR`+r2^0lgsoF;]f'+-$lo0KWGPDR^cd'.:A3TCm.kMAUgMi
%-1a.J'KuNR>O.,)LVX#HYB3/Nq[%YaLI8DGStocVNV()hWl3FdMD"K<\FbY^E*i_IQaLn7bn:sT3@m=mr\X=\Xu=]*RQK!-RNnL^
%USRO-R7Q5p5cT22`(m8HU(,te=sfHb^)]An]*J(tg(/V$!5\,gH/p!/Y)&ZfX^*$ch:2:'&rK>+UuE'BHg]OCXCQ.[_r[1Q*+c&T
%V\u$%A`2nFJRh^oJ3W,GG%*5$ck.`T9QG[ISu*Zi+N\3oVA,ji%PDj9qL0tK]#GVcoSp4k%W/t`K<`S+L2u;4M`tk0qlFJ]]"S=9
%Ut[,OgLD?5IaK<\U5f&fU$YH/kKqI.]\Tks0%dC?qf67+G5BCls)%EGB(naQ[%s9PO)F0INTqWnBC,-k9051rT?AX%R6nKQZY&P!
%8#LsIYo/l\dX54n`3iBC+Zo4)M[@'1+#[+UhERG#WmauT!4(i$(HM=n?V2_V=u<"(A6W+B-W;/"o6O>(n4_Rj?:O_LN65=2"+REo
%i*R3of`.ng'(Z`PL5soA_Cs+*R``7)RLA_pM/^R`)^dC$!V`Hqj-87KYm71VpP;$JB?r_8T_MM!/$-.N4c&G]PF-a/@AMA>T_f_'
%Yp!WalVtti\)l>o_aFC0)XtchMXgoNkCU`U#p8rOZ2`S37@g0_RLjo5=`A=fRp+ukMcnGG;D<"?k6Qkdk9rQb8.dLp,+W!ZkELj=
%6jO&g"#0p_;N>6>Hj",,K!Y`klde"V1igDf#\gBJ9gUOP.B8N%Oel!)?eKrucca+"gLKh6A0/;NUBJ!T+T3F3)>S%SV;0PEZ`@\S
%bc!Q,!<Ol?41\Be<?$tn:h92A>$+eDOHi$%i*^5)mQ21,Y"Ha?K)8,H]+>=<?pSRjH,66P]=Z4n"e,N;g=6B_C2n.N:>s`dOh@+O
%6Y2s7oY_)Z<Wt+^>GX-F,Xge)2"-QXo/65kFhZ3]n7jsM4k8:$2-2k:R4-4'=et$C0r[\R1Sj<:612;L]JHMAS0riED<Re_Hgh<`
%n.G(GcqsHC?G[;bGl"QM0T5q"$*AuQ%tjbHk`Pb'>-#K"9Dc@@5[rh4op]hr<P8Xb"X$Q)LgLAc17jV'&(35:UNOCKf&meC%2mi)
%_2VQT90iKP5.-,aM/_BqFfCiSdj3!T]Z_!5CMrP/.ODYE^ed$"p8'&6^Uou:S<K$%!qHnLh/)"TKI.!6U+:h/D=?4?fm]8C=&rFb
%87>Dl!r?/jX^CYBW;lMj4+!M#,0bCH&jl!"C08NHmZCQTj\<=V@!7Ml^\s%IIN,Q/\^)&O1gp?pi9Z:Ll6IWhOu]h#HBKTC+cf!^
%I)7:=CVn.6#C8HV@R?)eP\D<=V(hrXX7MoV0038jM/e/<g/g[/A/@c3SF:I4cS'($G!2Ul]kuR4e'0m&8gn:O<)!"Ad6sgS4?ji+
%;Y\Rd(hK\EZXFe#$,WSHgdh)JcB,<F&*g9UJqT,[*ud6t&sME/'$dA0Ut$?*+*'%"^ontNL'*UIScD@58?#HF!pS?.%!)Nt?KNii
%hY#L!s7P01]Fs@+L56W&(*S=7%sK#J*nuRIr\3jnPVL,V+uXt/_VAG'ROa/962F?d`K_e%NXGL!>^\"s=6`g"q:!?!]r14/ouKH.
%fMkIM)1H;H<)CHhdQ$mKh<:r_1Y.p^-/)a"Se5u?3UZX8L#0M'$/m!0:B'!De,onpfY)9FCU9@`bqqjEq=PfI#O#+,Y^=b+;1&Tj
%"*q\<Aqo<Q[?REN<pldi1$C8+7-rt@=QJ\leeGnU%[@3<ja6Ys.NJ]cj9fdGr#4Fl)aU:]+*"Y7Fcp=D)E.V,i;\+4=ifY2;eg5V
%HBEa,)*elZDgPScT6F"]17qd;Xg,6-6jMEOD4]m2(rh,k)C`R?V%K:BS16>+8KsMcZ3>\5-L(pKP'j6FXT4&1Xq$qEFW46Bj'\^M
%[>cDlBOsfp[@aTZp?[.>*T=8p3Qa1.NW"9=_*8O(CF9#P5Stq)-1#JB?PQgB@T(OiFN2u2#t#[(,eGSOiu!&4f)Q(o'KZMtf+I57
%#V!("0->(_[o"EE=IlXULI\@kl=IH0g67B%`P`("7(9n4^D=..cFTJ#.]+]03W[Xc7fKRl6X7E_jD:$dDq(`hNA8?[HYi"1KA8f-
%9GG68>pmf<5tAMOEC`U4>6\d)"eF8OLDu:&pC04V9H>7A$od=JSm+^O;[Tj$J$OcJ\I5151_<b;SLhepQ]9L7aJl)L*ea1'/J5;1
%g%?`,LAk@Bk[F_OZcGP8rSsokm[TTHOtnN2C'/+BX,s%js#VFQe6;SS'gai840/&Abc!jE8F*(h:+VN^pc:t6aP-u',IJ=BU.s&T
%/Q#pdUHRmX.=$C_*FRapfd!ckiq<#^l?6Wu`6[C<*,<k"1@BXO)1l8>oms;FF,q3INgGmk[RG!gpQu-Xq%bJQeILI:8m)$$KE?P*
%HZjIOcBs[$V4J]QqqEu7i9:Y:dk.E_1U;=oRt]N7dcABC8b7b7'83W4+!BaN"8hd:gX5EAH_r2Q%&).2PaFfCLjkB][<<`@+Q2(4
%^@>4R%L0a=.`qb<B#Q+M8@kXkS#tEd$.1![9=.A^\K6M!0h!)BN_jUlO'ma#PPj]'%%gO,j4WVSb=@M!1M1%Q7/R2B]7_>E!J^U>
%C=E[SF-1t^<H\neLKgQ-jEoPZZ?5#uKskIIHSQe/`-P5AkWko);Y$/U?brJgPK_'dGgd]q&iP(9JkX,2iBM[XThG40"Q9Ko[R$]J
%mA;ZMosCq&g%HIkcJuOA<PuZ831Og>l=fdsct5BbgA5uIqd+nJ5TQq*4-;^sU6%_+?@Gr4c2E(Z0hh>G?qH^p(#9#Z:Rq`SnhCDp
%QTjX^:uf>CaJ"S;\DKdDkro0<V2$gX6?mb@:`!`EN;2(WghV.H'o'gOemSquh'OnP?\"GY%oR#)^X%p[DlJ(b8nPkh.;.oKLSIU!
%/eeb>[*8V@P/^ch&+2-6?+T_E/f\mt,MW*/]fr2t>VN9>2Th]?h:>2T[Sn=)[\.!T2RKc(NiHQ5D+^/7V+SXUc:::E,(tQm,bV%f
%$tZe8GJqD(+)cgHLPMBD=Xs4J)*CjQXQ(U'.SnSJn9&!%_7VnB4@Kr?_7\VV4@&CPgBZNn@ab^95uSu($_P2t#)p+u^8e+;MeS'T
%c-W:PV=5<E;sG3/AE4"/DNW3X\uD8TL.#hOY5i$pFa&WrL2k:(;*r=T<:J6R`=L-Tk-SF35U'04[r)Em+m"oaHCj*5e17O.FIo(@
%9%s9bT-J0#G"IuOi%k^>?;Zm'S<YUbbS2Z]WDBMZI="'pJ0LS/mNT[eLC#,n)HF\d"JgJj^.[?lUi32IbNit%'!p,NXALG2_!l9U
%(!W&mFZeXafLHr)Z!_Fu?m'FR9q_Q[coRb`AE?XjBnt=8f<h#h,;cZm.9<;ajZk*S)$CMHKjA,RMZ'6>UE3!+5DG4lGjDPni.N9b
%g&9canX$3?[J(e.>s>'Ml(dn\jL"PSaJ*Sr&aV*1Xe4@e,b3G<`PiD%ade.]"]`04W,]YDlEuCB"934+;t3Jm/&d9TjVG22Eps%%
%b4(4W.1-,9&\;M/#m_,@1TB!>aP6`:UW;(Vac@$QF]1f6Q5ZTE0EF(-iMsfaVae(Mc?fFgEsX-q!5h:2,LX_MG8W=SX=-@Iq5bp.
%GB`X6P3i!RmBn13.qN0L$`b#8%R3ZTbX?A=J:?sqnucfge\0Z:iZLHS&6#4f$N1]Td7u&8Eg??ne$sNKj_jEhmV:=#_O'c<T$1P+
%-a[%1hR-Z6it]mf2eW:0X2ON/[HicgZjZ02s0,7Yf\6)@me?2u"]8UC*bl(0*88qrFn22ge,[.@/#U[J<dHMrIotX:#<ghpX6m^E
%]_"h&,$#Tuo&U<4;t%]JA\T'3s&jshMEAA2-iKb\X<:t(X&-q;UR)>KMtHL-;81QZQ!%S]%(10glI<S5mp#Od6j?:/:q!Dag\j#m
%jV0Q_0^)G_)iC]7!?u_k*uBN67,B@2*l/4*P0Wj.N;`OfOZkd)=3W^`HZ$N9OFY^QhQ0L]VM:r+nhF@$J3rRfLS#Lman2u4DZ"'J
%1"@U<oua'a_q:O!iPGNeLb`s,HEq.(>W^r2+qb)_j,+2SQqY&o%'h($Aa=S]e=?`iQ*9cnDT$-N3Xb5#MCfM@O)iI,rhq3I&lS+*
%VP8+,3Mfl!21AhT<:Kre%:7H52bHtQ3t<e0ljDYF$<r=-%rS;;9%nVT'sk"$0-c)VlXctN70msq3&9G#"J4YLLKATk^gc@>BU4?R
%En)RRo@pqXh3T8KD-!;d#.J_Q<lAc8VA:l#!*@[e]6\=@WI-:J)pm?"QUq!sdnjLKe'*54I4GBh&[.&p/RDYfZt'Te@\t^eJ=]Ji
%P.u'.Zte1p<5g,)Rq4a)j[?VC,u,c\Qlm_b`Ul.5[WU;&o(18kl`h<@[ljRo1<(qWj[XR'%\7a/>NE/rBpKfE1kKj>\Pcu*JolQJ
%3=<"HSk]bOnkdqBXbPDp$KBP)Z@FZh0M-1s&R`S=%<i+D4A)9t82Q7\nH`uZj*7%kanS>r%(M9Xe1BrW#aGV%p#DFa[2Fjme>o88
%C]XJI=d5UbV-0TY*=`ReT30o\lP\bf\@i]Da<E)<D(0F8A5iYi2X*,Sc7*bWLticrn@C/Kpc$LV2PbE#Jb?b0PRZ*eVlWpYEjbta
%#)NZ/N]W$k#.F3]5@,!]dagXodUUsUA8*/>Wtt)2*=X7)#i?)$PLsp17gXd1j&9Gq`q>L;8L3H64]H6]PH!%tN3\J(c+&b@F*L$*
%f.tT"g0.VA;@E4WJ'KJpFVjprG6\50$5mcV6UuMR>F3Ds^;1`:,=k_M(,"2%&U_GE)cACN*?DZD1ckP<nmFXJ(f]1K*NA+u#mS<Z
%_VbR#r(B0+Z!V.nBo/HhUZr\'[kW0)Fh:bciQiQb3fYUj7C#CdYt/qO*`2@rU?3PS6G^MN1;:bYhV28lpe5q@?a=nLIc.8(&r-M%
%=UChXeHZ16k1HH9"5A_aa,""S92fH,S_YmjIc7X"?*E=p?9"-u7Z"Ap"O^dAcb7a;I(_"K8K(UVFjf%!\'>cgdJ&+*,14!doN8r<
%K=o.\ATfTO'3udD@$VCiC1XYXb_]8NQ$0<k%SnhH<B`[;NlcHeenE!n.^Kj@/[37Elb$.H1h$Sc#\UEi/lI?:[62^&&X&3bJ4P+S
%`j`qB;El3]2F)__Xl7-Z'Lh@<)g9`tCeiD=/cXa>ZC;-8<J?%E>/.O^qT]]_;SM8BcXFMN+W)QEdBe5&\J)ARLh-bn#I"t$nH`Oq
%Ga#&$6JY&Cc_s#UJhl?_8YQ=-f4c:rMn\h8$8sF*(!I;1#)'auX)*^BosA#"l)NQr7`@$9SuY;jCH#(p)m?P(s(mVXZL&W+4eb8:
%q8h#@%n.p'K_92U5t%,;oHgRLVT;Qt<UkD7?mi`h%6>hZ$ei4+9@-t<T_`a%L:;^]W7tr@e4QLulMEQ[`<]>R^bZ=]EmWn[;a<+]
%^aS>=6o:R0m?,;IjD>$/8MqGJ90)_TMUK\/e!NH1.ugiEZu&ZX0WB0PFc\*DoAfeJ*HF9sfFa9$V8KUjV70V#aL5@-fVMH<Nq3bk
%L+r-]!b9HbHjP%>`>hd90@YWdH"j6)cT`BQ[h80sN_+m6@R`^70t:nM%=09J14_oJo+3R/72?`*luH_mRsQFP$Q`65B/b8X:m3f.
%0n-hc22*`D\i^4ZrP!FFh7!(QT:2)uR(.s-)'?POUmanOVqrU^YY#gJ&Sg/WgZ%BQ7pH`8Ue\`j[eZ8,V>IJ:(Hlu$jW&k]s4C#F
%Srj[KhKD@#U_BaeY,rXeP`FG.3Jes53V-(QR6*6ho3o/&W%b(E*_rA=]W^/)T4ME6>6'cC[Tb.."WD+9P4PpO19J3@T^0L-3b4(V
%Ws-2-:icpp+;5`+4_8^6qcgHgU?=AR.sPFtZp!#Ho@Kh:r1OjgqisYSA$Zdu.GArZ.^[a[pGENa-NI7ZUCQa"^Q8D!DemVgK(iJ:
%SJ%pcedkBQ=bki[]6htF'M2/:*@[mSEodN7fCL2S!3cVOs+;i89*e;3WE"9X@^2cggm`W37^><nj1)D7(r'.h8[\DiNA)48@99O-
%O/Ee87TV:'>@.27Pf)E=I(E3ImVR@EfBB45`@llDqpBoj(^K8W!!bZ=/!!e5kYbV6_=\'o,e?9J>)5\cR]HCeH?S'NOV>umAH&rU
%BUnU46c.[1&>?=ZK'a>')Kk8\#PG73"DPRML^-[/0R&ep]*g70BLu.h:8(hUlC\d0<hG5Wqd&:QFAj-n#Q?7C'`fPcqpb+jMLXP%
%hp[7nXpe0jZ,N;Z)]-I!9fh9\h#F#QD`tmHC-h5R^ud)o(pX28&!bI=/4.E]\/f"l\4-`ST>?7-F3fqs,"uW!pBTh\<3Po/kZ)\N
%_=G*EfB)g9WgHqSn8b!YDjL-?Id,l-7@Cp2]W<*eNiptU$'C?s6<:=;>;B\6h1r0hFaGqWS@NtQ4"eZVWK*?5Ik)t<ALC<M"Q1EW
%a&4&%WdB!-G^C2XZb0WT!*\KE/c*f_n*)ZB@pp(h&bpUt9oo&r9iGaH5pcrHq:2Jg,RlY>^[Yh9ZG2CoT9fre>lgpH.&.T4Tj_]d
%GY>tIaM$`*^>]mfGM`eCoP@sm0.']g"&IH1>XlYrOL$)p,>(98Rj]h#pePK<-S1'soNYVKL4+e[(\\c^(pu`Q3sjFs/MToPb5'3M
%3T<Vg=XDk_L<GYmSiTCAE6!GGmBTbDoG9%'bf;d,U2BG30an@dZ<=0@0,"f1)"@nq5;0%9CBKY.'D(F25WV(EA_bPS3Kgl1m[Q"A
%-.o1j#3+ia=t0sn4/!F<NG[8mp%s$ch$f_29N3B_?$_"?F2<*HhHi9lf&u$er%cuU?7%@BgmAB$*.)5,_6JiKMR'l[J8=Bl?S^D&
%5q(1497MXLD.><$-KaHLFdAFWXKX*($'JW9JPhZVD_fMQ%0jBUD,2XAhAn!V&74XL!iFk#rPoYY#][JUOH=e<!jX>]!aeN\mA#<P
%q7_Wr//&Y"eD<u`hH4#0(]ic_-(ojLe!3'`/od%n#+#m";/b-gc5)(^Hni*uI!#W60[eh;)5J2nW,j1E*]$9oED4>/C9Ha@289(*
%'=+,;Q<#;/r?R4h)/3pH%L3*A2\00@Is`3n-d1EBd$':%04XsIj6'BYdDJSGZ4(L'IE;/8(>4qNrmc"\A1j:7"!iA3*&d<[[[rM]
%MTs[1aP@Lu$._(>0PF*Y!Sdt@[;jAJW\n_-#!]XBV`TdB&Y]QaA@bsKE,[#,CGN2_j.O-IJVRe<obZooRXi[L+r\0eqtjsoWs'0J
%%+,I1YF$7thSQeT\.bF>FL*%j;;tO6<P<]Ph<W>eM\ENN+^U0J05_9+?ot4l'^24#\_YaqC8]QJ:6-==VK83i:2YkZ!8Rjq_h$4:
%`)7duG32Pc7pAEG9A?6ZMZ?Y>OV&*?R/(=Ws0@HdV#<85ab5#bi0n-@4pTP7q,A.]7"kG;R!=;&FBBP2q;p'8NG-"PkFSFc1)/p&
%%uB%q6.(f1k&/:<%GH)>a1%>[.g9+7#[$EkX>qbloPtjH'G3LoZtYq8^/(j41R@JYNQ"N*2;EuUOfp:6QrO`QQRNLElRKacFSP.o
%MFo8kdUq<'q;tLVa)u%JHNJ?s2A.t)3fjOR3Hc;mThpms5i&S\oGknB-/s93V&JGGN8-l;O("1W?GK+UXW)?(l9malJBunCQ,o`<
%`sOanTHWSXI#\&2((aUcHTXsS^0q0%+*;<YP2M^H,YMm:MDgQ7H3WP+$;H#W(<S%;f:\G$I:(g>aO+GB+",)MP/#(p.),+$996S2
%c_&'dfQt**6O[r&*N_o/KBaYc9N+>s[/A4@.?R:-h*QCZ,M+fp$St`>Q_D1,-u=bc%W&WkI=L,:iMjDm"HGWf^`]''C7_p9U+e.S
%#.fSX9%9,"LDr_W:Ku>9dmArZZ\Bb=`mCu7KSi)(-&b2BOt?_As3iQGCmAH<!aX-V5>>_XRlg=>Qk?#,9)J\'r-3='.K)$iJ$Ffp
%Y4WL)ZGs,)JJ7%QA:%psM&<]][SO47DYoS/F>IHc,^aE,oZd<:-.6+iIi+GF]:BLVC/Mp>%%XHVYjA-D'"&M#0I''dAL^u+001!8
%3W^d>+CK30.'pbj@=Br5[h43.V2l"Ue_$:=)=t.OLe5ThR6t+6A:Lks]J4Dg7dUt=IAt+Ui"56G5c05M[a,:DXH+&r=H.].<=.A5
%Q2&]=eMqS.MN0:$6H"jnB7m"BW(9N/18T%q/[p'tp-YAF3U0lk4VUeN9B:!8*(m"7arTNa:?jLmr>3Z0U(G&G6T#R%)g8JL-HB;C
%pE>IKNWB0$M_Gmk5NYIjonHP3j&eLR?J@0US\:t(i.#D_Spo!/IT4fEj^pk5*SfM_J5A-7J6h0`a64IFF/V1=I\0WD%p;,qDD&OA
%9+YCV:nZhue=f\1pV+YX\kXNd*:`5$SM:fg5pO%IhsA$"i1qb)8,BBK.dg)#5>lY,kX*fB?7o-C&?N6'BLJ4nOs!((>PJ;50u]&?
%TsmII?A]FIHUTi&W0LLU;Z@.D%Y7bR7eQ&uUorWe8Z-BciBQ.:$OV'l(C1**hCiC;\'mn8BPp)Sf^;[I4@fHJ4*tRr)B5;6-FiXW
%Bl&_(YlrXQ^hn.m@NeQ)bf4Bh]jAB+M]_$:T&ROu!b3hr&uQpu1fd2K2Hj8]5AoV:j<G^jMU1mU1PaO(AQGM?]<^bpYMjAq_:)"N
%WXnQc&m;b9fg7bm.U#`b/&\`$QFZ\W$Hi(gPULW7@bh"lAG%8oU#YL_UaXHrX*u%D@A,B#a%"Pq1WZcWR)SpG-'dKJY&J+M&fEp/
%2PEQA]#]J+Z.W).*SKG2lkYcMhCUPhou#&h_ED=0[!)'d)ZdZj=V5F-\4q[`/M'1[ig:Iqj46`J7`9oLTJ,Y&Y?qm:1EE<uU\5lp
%+H.X_gmt-h<l,:IJBW$g@,G7pS3uBm0JD_Z>S1TLHV\;(IC\5jA]j"SJ[j)gd?N?S\V-N7p2^oqZD`hlYs-9%RIP<;,HC1U7>T_N
%>l``R/)"?_*!1X%p&P$5EtHf:f&aC:$sIGT]$b#&NH0B1Yep5/]R^Z:Du\p[RPjM<dREtb0Q6f+X^^+>E\)J\VEi*Z&2nIKjE1Df
%:l0i7M\Gh*q%C'HT6$0_P=n+c/:,WJ;),5Ynakko."Lk!c1$<YKh]0QBZFkmB&AW#l0KEk6uc`"1UrOj;&I2,_0TiFM?dRM+551O
%0jBP[7E<f6O!T\@27u.d)P*9%^r#1UFqEmLG_1^qg/>eDTufl[g&&E=D<bnDqp0"k>+[AJ#EiiedCm%*1-0E*+7dMcGMg^Yq!#oc
%U^EEd-Y<8Pm]TGDE0C9a5[0[pWJ.r1U8>Ou-Q^.!OF5d<lq=P;*LnIc-h<BD\8Kl&N"F9/S,ib1[8N/:puD6;)UW0j]hu-M1dDjg
%-OIf=kX'C=S*ler3Js__&5A-L]+km^6JVLt`G&(:?+d;S-&R0Gn6kMu9=.VU.?&-#,h\9fK9[I^D3+lh%40a>/?t#%A))!`&:PJ]
%Rs#SedP('l@sSnoo,`7SW-'[#&ghHqgV.0Dk+h23+C1r\/8hs+c=Aqd:%"Z.T[SGldi"F#4G`i\:^XSK-c9Nu$#kQgK<Cc,WNWjN
%Tu@p'$";C)<r\l;:p6YJFFUuk)Na%%a7`$B]_J3MaUoRU]%AIU:_Jhl*[:D?$aKE-h_&a:7.P:[/Xos[?h>.I*c5QWOh2Ud_o_1l
%;-'mZ;&!r=Nh2t2YQDP9rIs!>#&JlgCD'Lo9m#UcB^Ah?Z)cOCV6p!=XYM#.9-ao`>9DS?!UK7rjq9P^IN-e8+pT44231Yc'`j/+
%lEBN`>2Uh/\R]rq&5kp98;t7A`+W?h.s7Z#V[-TqC$RXh5&.h-b+\-*nB3c1P*I-iru<Q$\*mN8I#A*-`)d#.8,@I^&T^?J(A'GD
%$Ss@XCAk'6Kc3\i.>%f&aJsc`lX@_.([gL`dCuJ$k3%2&2M3IcXS8[h]`A_ZNUmi"G0Tsnc)P)>9U*ib55K(eqM9<Xb%j9Op\4HQ
%muQlD*H?mh.6REP6oEWsoY%!;V?mrL5'H99`0N8?M(:u6D_0>pd&"X[9X4hbeO;r;lL*<\DL%!C[or]em?f<j'u;eeAr3q`dHqqN
%;B")kaZY[TM]dW'hKe2hR`um\0-=e.bA87j\GJ[Y3c5/H+Z;H-@JLloAd/rf*g0=`Q3=+Wh\c0XX[KuG!^a/&94ZZdYdpnr4g9RB
%W&70i0Lqg[.[D"DiNC,b;k250,YSne#Uupp?'1[u.W"3X)!.U;7:P*od3hUV)9MLqc4a0)<KWJjPf@^KpZrgUOT@_;L2BVW#r4Nd
%B8l/tHRCO2%^ar`c"okVj.l[E<m33)pKsm-4`K.!r'nI--JlmOBHGQP<!@K>+nVQ-lsMG&%b;d.2L,Z>F'j[R?nF4ZjOj2gB;'=r
%Ca&1+)%3QCq7o</SZgDu;3iW5'douilLDg7<G4B';:!NeY\,`F^'=BP9;,qG)QjlHU%'!j_Oq<k7Y#E8no\@UF2a_4.:o^s>.+qL
%2kaecNBqBBRF#>l*lIO3]S'lp]p7S</"t'I<3!]S&fO*e='+i0N.bf(V+>_mJkrb8nBV.7+1MT9&2^c/Ko+0X;Us4V+Z-o],A<X%
%cp7<9.So4M[+^E_%L,8+$L.M#%/p8r\[PgMm"9YcK(<bl[Z_5j`%q(I:-J)A*LE/3K17n6T_4k!5c:>_f[o&1UDu*MI)&PdiLhWD
%EIX=-DU?8L4=Ag4/+tctWe5'5TL.T<%&-#ij<8-iBa-.oe$P8HmdiYXV@JIae^J^T_^<3m;+m^O-(+<+$a6&e0ZXD[%=67maSpBm
%!<pgRBc^GDK8sOQmS56F-=KbFY>YerQ\LB+E*`dEi3omFb:'dF#mG$QDqlmo(4:_GL#D*O:2hkO9J@bg2Sn4T`Rcug"PtT"nHfXW
%6/$MR#1B:[7)*,/Hk#N\*l7gP4^rI?NSn]]I)S*J"F#J27HYp.GfbD',/W7Lgl:lZ*t#hI+4/O_KI2?0DE5R4>R1IVU[dM0q#ckW
%^eN.=5&ak=#0scb#=q'Gq#6ZA!M>a#rUW1hs-5VFar)Wn$Zk6tp(Ab4+:]O7*G'BuDrCU<RAdA]#ArB_CI(GY+Ulpeg;q_IP8L*H
%gVlJ&ZFr4"G9[t0pEhsM"*]Yl.+;]8GUoNq$XqsOr%aCcLG'2ZK8&nS`*_-ucnZc'k*7KJ2$qYd9s2;1Cb(E+;us2E>DT_3VSM$-
%VgNCcK.(]JUkmt?ScDoKs3l$B#>G1uAt[:pYQXBK^"5%.,_<R]drf"X!b;pObZp>Ui8^'Pp`A>mJKW;N%_n%a71\>O4*T.N4#rs:
%(@8URC-X"2\DoN#(spJO,D89p!R5r)qJV!#i2o$TlCe?f_]f4ifEhR11sPVZ#A>HtVAC,C+YBUrh4Og+'5L:Sr]/'WBE4#!(hXZH
%)C0i&lAgVYTE)?nb2<"+!4XBEja+cCNM*^bo)\i+>tEN7cp)],7?L[0+%rL]fJ-e639nZgqDZjlL[*fJr%S0]]t=C@qnPfTnnX']
%#I(sC`Qm0FlK9ETS^IQ22r7+?SEVa-rIV"5oN6(,r9eN(;2#&A]6.34ot^@9gJGfO#_0J3/i>ZYICaT/Zp3c'1RY$d4EYJT&IA^m
%HUme!Q)BoFpc6FQ;#SC]_cBknrJ$)JL89,<q@/<l.#i@3T54#FiR!/<2[cNRVJ'B5RMiiDJ`L<>PgTlf"35=[3S+,$pi6#:p0dYi
%+(uT2-%Xua&P/E4pjFq?-fjB<N:?jth;9T>!ig*kmQD@^VfX-WpN_=]+EKAiqtj;QK:9R7p?m%1KpHJhp28e#H69)6h!XCj1'=nu
%+5E6CqI'#?cnt4mg#!0r?+.@e"0oUFPti((#f%MERD<D2o?2*&KBqu$T`X,\bC,sd<'+,*@=\#pPEiY'=NB^?.\GOrl;7H8aB.63
%0p2=:6I%/R[V*'K@)2Eas+/YV>ugDT:RF>IJuCl^;0jfACVm4s^".d\`uUrLTn+P=O7dumkfG60#jVQ=HX*/dm_J#S"("?<TCDd7
%6IDZJm<*NB3)J*PS_uUP!!HZAj,VB2Z_R6?AjGt^JO2i;c<Nm%UN9$q%:K0QJpJ;E)n>gZ#g$DT':-BP&-0:;^$ft?!m4H+4liIV
%9`AqB69/aFnoouq-IP<CmhWXt33WW1:Q]?`BFI!ebRm%m%``@1PV2/Yd.k4ma*bKG(uO_5gM7m5]_7Ol2D6IbZ_:K?Gp)W@o75co
%4i[LBLJJocPoY@*iD[ThZG(KPiD\GF]f[VIT)_Y[#Q"`1T)\ocHOK$Kr;COt+ZeHlG],FkZQ4S2T16'i4p:EMkS'H(JD]g\-"HX7
%hsZ8!,A2+Kn+S\UF4AV:)VZplqu'@>2tMp>VrW%-gU@:RG=sS82fSNgGC7bW/.L81DWI1pcAB-1'_1VsFJnCGX(u&sGJl.3Tf=C[
%I^_`8Jr[?f`H=Q]`W4d--5jkW^tX:m`J3tI^Ae;hScD0jk;C'KLq+NH^)U7%6;;"b!1?ZqEW)ut3K\L4\7=iH_?mRS8@N_J8)W`j
%g;I3N&j"6S>J<8Q2p*cBQNF?/+FBhB<"PBC`_NXeW"efSfFqt$+_`_EG%.ZiOk_%/ST<;3dH;HU7kG(GpKZX!=2WF[;HHB?n+VcA
%;&A_mi4AnfaAPcLh6/pYk+0lq]qHV:<dl1WH?t?5]G"EA@+l$b:0cURJ(mHDc%+>-Fb8%%;"_GWGuol8JElkF;^0W^KrMP>TZDSr
%&Tsfr<tpW8G^?\IX\lHVVDj\uO#NAR!R:-$^QA)gW>fikEV'XpN)'29./IK\=idRPkk>lHlMY?>kk@P=TK'^Uo*]]Mr>H:H0Y2)E
%l%P[8bUmJoJt-3Fn9I*5IYes!?c,.R05s;LZrbKLI\e#A!VB+->jntKIn[f9mJV3f(;S_Mgp3G#?LDF7j/N"M:TX^NQ^Detf.0rE
%F;G'[#$-3-D;Z-*250SfAKN)d]--3lmm_Gc"Xm0^)V[ZP3_o*eC!E"[-;Psd*pl88dr+[3N9[%idB=CtG/6UHq#un-WYRC)#=<<=
%@^EMe"NWlL&O3napc)9=Ll!2]4J%]Z<6^YYN[I)b1c3D]31bY_%s*7K2P,)9W6U#$BKT.)0+CLgJW.3Fm4.a&?p*sN.crR-nbXJ6
%'Ok0Qn[h/km,NeWh_3<?VtpV:h*gtlZ(6`.hsVRUYsTZJ'#-M,_cqO4iiEdB--l`+2af'FqmZ=l!tLZc[6[>fd."tYk+h&T(f$V[
%lAVWtL#65ZkAQ1."Va]8%cT&,NJ&7I;igh[K^7=b*6sRs]B^KgkEms5r^eW2>r5DtI@E"r"T3f.7`CB%&8fJ';[VAeqt&"PIj!ZF
%KPC\+?.'&,QAL)1><3(S9__gnXeb!2IU>p:&2%=on(S`eS_SdD?\a>5nq2:18aR0O;"'=%3)KX3H2D0DGd)\r3f5lUI;^`1n/Nt:
%9b[YRTFSURIGot^%Ck/:SI(I]B_O[AkhcnS:'\Ba-=I1;9rRs+Y]&_##.cI3]qDHMR/;KUOun^f5jmA5_o&EkLqAf/FG5,#!4]uQ
%iRG")p+tnk]RBO+U2(@oIF)gtA4G<\fQO$)/7n0SaEGINW1b'[EG\O.'U:$MWbj/9app'u>Caa\QS1m6a8<=-l@N[o!.hB2^&Zlq
%>sk<5in8O^W:.",g"I7/V1U.am?W?5kR5T=@7mp`E[I#F<+``Dlg@$H&Y:SC3fIoDlSuLK`'CSG>E-#R:Au+RG"U>-0@thb-]_d%
%b6,WT`Bht!+kZO)gVZKa!URG+7]EYD?c+h4HZi^+Hl]<=:'$sM[3nP1L[*f?ng0"RB40>rjk$Z,2kXr'n2BEE+P1;.J;:Q<\<_>9
%e;>-R2%jd#93G]hB0lMIC2LC*RB>%!$i_*dldKmj\:+5q`U,,KSn/Nn9C4(!0CoadkRulY(XYI$(5\rV4$qmi/n8LpmClRN,6Kel
%qEr@"hJX.6"uS_T*GuSA+T5k5]TkTI.lle[H!icd8UV+9G4aX4Oh&\go]Q#KIZt"-9t?)S7?1@%UXZN5bjRWdg.;4P8lQMt7TRu)
%e.`CreFU'\cJD1t,;mAtW'6E&ZZ(WiLm2&=G<<3Omooh_og"jfMo*g@XH`$?Ul:A':6Xl9a%inkF%tnn#&r*B#WV)2(Q&ES4p'tP
%qUp/o)WIr<USc[P<.JCK3Se-rS@X^SBJu.JGpA!P\#A?A/k;,"i)sZ-gcL#c:f$*^fbt+M/PG6Ef]9&Kq-de?>n]][jss/f;p!Lu
%P1>g(Bek[j[G5]W'Udt?Hft\sYJ<Rr#c^q;Pr[WhQSm(+mh)_'J[LL$Q5Z/CZkZOH`9^JIP>f_b,chN&Xg]\2Nj'&GPc-8?4ijo^
%$@Ui18hFNKfR-gXdW?$-@V)I/,f@;*[Kqdl#0mG-J=>N`Y9'cYUG24YlW/=p2)[%-69)iC&DdKG/;uM]qsORbb??%1P]m8toKr/8
%aga$qaS[[(DD@$!46gN_akpToGgD7SKm3g5Cf9)qo#@hA%dJE&>$RR++-O)_@<E1rPe-.`F<`dI4k:(@_%_&:e-_BZh?o)mf@e8;
%5+d(MoT?!"-q?cWiIRM![b*<Ao@F9"[:#-lgZh%Omlj0Lpu`Cr=0hhs()?)Ua8LX4haZN..BUgqU\Lr:lJGI"hRYTn?OF!;=NH"`
%5M8Vb[VUnF[9998UTWbp6M6YBF>m1<mBG%C$d)5L@1$Scrc[MI;c_Xt#2^KCV;H+RWd<PIr9)$qOG_!$[Dpd#[.dN-60B91q?pu4
%\FOf@_N']Z7ma%=[D88)H`005MXGNd$&o@'0=uRD7.r4eNnb<$Q/^M`QE%@-<NHhO,+p9u/gCU%#RYSNPFr!G=WtCn&\TUVWCS#*
%0j&<"hE'?-MR]l91M!0I0s8]NB_T3B'&YdS)Z1GNTljROb-OGhnajOS6+D;4.fN6Xo7!%Wbj*+J`*s3tD]n,77q?o5;aLL'G0Cn\
%s#kq;D+b#q\Q8juZ+PTtNuH%N=]6'%Rk>_OJdNWsf\SrdP]:-VF-%$]U)YO,^J5W%?c2c-IA*LOpK6<eD_W!Fp=WQ0o-B<Nbk6i9
%?*R/@]uPojb5LEOVH%*==a1<9U$,b;%Rr1sE.9@[Gk$>TFmXP@GXHd7r".5182QNEc$;(kG=T-_N`))_B;HP)L]Dp]U81m'i).^$
%"5WN'N#)tqY9>MKTh%D[QPJOH\CrTeGgq/K=sg]n5D0E'eUh5nD"<AO1K8r!&hFN5eIR$@jmI(SaA4hK55fFmcJGk"XJhdu%Wfb(
%Go!+"aJ_s`9]Wb\E=oF\;n0&(9\(?(=ChP)eM1riRLARjYlL*gf*MCf?Qf@`/Pj^2e7XEM"#q<IDEOX`q[`#"*8-\6WcQJ>N%,U+
%JC,(k7?H]*n0YjU=5B'apS_W/dFe&.;^^_%.,[N9!4,dJ`Os&TbHFh"<$aZOd;5Ui/tiBuc`p+YTNd8oA6cQ_#(7#$>mc?EXg<0T
%Fo[0@cis,A40:4F8F':NNJF$`gW2\\r4k7&$U2.fKN1WP;B6tGA/_1j:UpfBbD+k?$&)#g\JeYC%RXu$MPH;A*K"DD3i1<'\-WaH
%Itpcir63k"m(Grj':X^7SHUp%K/kHr#5Bi%!PFeq^]qh9C4eQfj<I>LK&2=[i'B%'PKrqn;'DGY8">bG[Jie?DuLEuY3[%-'5W+l
%C;PD[>.(H6bdS7O[&">mCgghaFHAq.]>+r)Wd@U6l87?Zl]n6FB7Jjbg.1q`QlG.G'&Kk8_%]'0)WA7?cE;DO:<I`Ken5]s_JH"9
%[m`eqUOmb^QZqHTjHj"I==q<$CmLgR2H-=[jF,gOSu-(SN8qnGp'<`iPA`rm1+=F&:"Q?J[Hg0-1tuZDNS5`j3GX6NJI(AK*OrmA
%(VIF:(m<*QA+016iP2Gt[($bRZ5a5_9?2LnqH@p*81\utp\uK\qLDsOr6"7.*0g']Dj6c,h]J@Zp/]\HmnMP\[DD]:<#qhJq'mT?
%J&=3,g"%ec/5[5EbA64\5EnmW=$-O>XL"uBpcb!?,)K+/4.o0pFuSVD>bsRSf)XF!J58S-YiWs0&7)N'-P-pT*![m='KFXIj2ep#
%/1X`LKPR_cI#X#Sb_\I?qh-PU2)sS?7!n\TOKPEWY*u1O`,WgU@-r1[.+3G.)Q"Gr(qj\`&;fC!FB0prb^2qom49;#=:57R62\KQ
%pb1b2n<I3m<LV@gI[?9PDX=TYXlK_LdLqsU./5D=1Di-D$9H?(Z00MJ;8C(7`taB%#7(5g`sTlBSq@4eT('Fj+^O"+i#?KPciO/_
%@;JtNL*`n'@C,9f'J0_-KC!Hg1m^0al0d0e?7l@PI-o?1ZEf9RV]Nm-HK7!jPq$`!:!urggr'hIXuQ:He_*)/Y]&%2=N-*FdXi'j
%rM"*^*Y\qQJ'`\W;B&r@G&j5_*[T?%"L]OYiH2#D2HU_Kk`poB0IJabJ!XIW0tZ^]<:KnUdJ]Of$+-dHNk01orB4V(2n/E5<)*gX
%`audEA1Y9I]H"&SM()S^&'nXD&n=HR/%B*^oG&0<'e'h[Q!TE4GQMUa:)s_1Dk5'(#kNhJ;,W@^^nK9IDR$J+_<Wp[#*kr!O1Km0
%I1Pl04a?kQF*'L=La5R822@leL]l-jM'"i!U)<35o5l+-,BoKA/0)OK8dl=9-7dfS'42J8bGmS?HF'VNY?C/8W-3,Jamp&f1Q59[
%pHn]./lfR.K8hV,;Cm!5NNj.Ug1"GK%gQg;6o;WtpM[3FMmJr`r@4LUUbFX!D79EFj4Hs+DS!>)!$=<k*Ds[+[8U1u1P/efHKZJQ
%AV?MgU0Q$KLi^thoB!t&S*[*0?r9:UPYIqtVkgsGUF?sG/J3B2]fpFuIa7\#D,Ms!$>a^bkUrD&TC4M;#K3LLX?iKWN8ti)dU=4>
%$A7T.J8aq#'rj=4-+jYp&^edMP<oV-`-#Vl.;NA7gl<Vl@9_7N62`dO/Qb:;NcePMb\Ej&,78jig'ScE#<I!R4L!O42_lMXE',9B
%6X=AK/Q"f-Kr!E$F+F:&2=?UibgF!Fl+gi."'WT"\)81r=jXt)I6V]lffaJ^L_a8Z=,K"2E8NVn8bL]Y(Jn#`QFJ@2.!ubfe9-58
%os;H?o/QWPTZ_a^QK&H&)f$<45ua;3kUWOr"sKFV\+1O^9ZmX1FV[_'rL`+S(BRi+0RX!dP4BVU>hj\NEStUd'hc#TDC`c\_IYN!
%+%mc%`V:m9==F9C"!$#EK7k2/L54bs,t#m+!^9+U;"\-_-aVO&%$_!&1i7DVlg3":B#@W[FhoC0:4[P-^o,$W3H:oM[k`L!p[J/n
%*D!b8&NHakE46ZDBhj=H2@a3hAae+6%pCUk?/[qH7dEt*,P"GE#>!Z?+PFWZ,i<!C@a_5qMD]`0IKFXFU/D09+$sA"D9#jXC&OV)
%'!cZF8<,jcDBpV%i#^3;jo-2kcUm@=*1r3M&=4-_c1_4iKhr0`'9@\_:r?g+Pf#ZojW(16Y`R[ag?X>+Ftq%C<j*B@er',cN=)?Z
%frFJt7ZF`jT&A.@m#lqDgR>l/TQmG+0CM81.U>)JeFF_qLmrsLAZt*K!Z>E%_W'PX6`*7#CKqGqZ><,9m_;9eD]hFWS-F]Jq9K(4
%iPEBdUNQg<!@TPR+Ykf4I!8<dQ@ToNb+#a5,=BU8+fhr"NW5nD$kdJ1mO6WdlpUgYDbMED@NobE(k2p"LlHfQ2IcVQ$X=3H#`UcW
%5e4ABWU6*r6(bbKF9D#?hYFWf(HEFJrmQtT<!FhLiY.=&EEC^se.NYAb9)$KoTgBu0=BLG*<G[e`EUrM><*3XnMG?003`KWr7N7.
%m;?B9OBb*!1PAlSSL$P?/%tFeiSH!b90XROmQQY`0/Wig8[?ao1ZXe)iRFadgd4Lp>KaXf;=`<R,a4T2+D+f#q0]QVC](9k8Ql`+
%<k??fl35VA8U@81f=YY=8d1mV4"lS9%7U"%oSoC>pk@J][H8m:p,ACIVG@*kLtr'X60EHl0X=d,h-ESZYlkHF\QX0WIdu")n8Ge^
%bH*tG$S#[Gm4aPp8jd@OLolL"B4+qC<a&o63\3B,[SNUp&DS`G1lpHK3$OHGXBC5(?jK'^\Fe,*hXJ=?1].QQTI\;PP_^5'C$f+a
%1@VBfDW$:+j'K1tk#2^.I7phpmCq?C#%d(P].NU(SU=1hke39j[H3!roUkoL6itU*N-EJ$GK>W,;;loYnP=>%!I?k=WQpTq,LsQF
%3obu7<Sc.hjUPh-$[VWFS6%faE5;6bR<1Sk)/@lK/YB@*$?cd[)9Bf]?n+nrPhF5<*&b<(\%1&+coIjX-?#iK*ksnJTR-t-'8Y\]
%9W1$oRD,JnZ+5=mEo,n)h2$$T:ru?gAmW`pi*MpcS*I@Kmn)]^b%Sf6M&Zd6&a!nab?4"+LCEL%,S8.<[&Afm'tt,u>p5WWZ/+de
%F9sc/mX;Z7m'-/38U&q,Y49%#.lNCC5UR_&dP,C:7Uh6&NLkfhXmqli!`m+t[m*n%Bq,:9'&V[W]c>31:^B__1gB?(S@k!=7B)H?
%UM<V)JK^n38t\B7@krX2l#NjqqU2$8nN(FZ-8c:k;]QY0aYE%Za[I=O80#"%-nYaPIiB"ad<^AcE17pEreFsZ,)ba,U![_.=WhFs
%gQ#Tqk_qjd9uEj5Mk$*16"LK7BXF4'$=OMi7#9ggChmg3!a$Y*F1ME-g+]s36J/GNmkFq*kr4u&;48XX;r?JF;W9YqZ5AC4l:MUN
%H)hcc0J/GF:U0l"fE-[/4UAQCs,"P4VR64L@d,B#_mSPYF?J&1%!U=)`dWOF;#Yj7m/M?i+=kAtnRbHAmRuHH<`G-i_12(rA_Qoi
%aI9p^Yu+MPm-9B-Ic#/7[J""YlJR19nY@a,qA>gC&<FV5.Xk1EdNg`+9j1_.)Mr;sr"(pjDfKRkr+.20c9mu#/VM*EK$I[0#1Zmr
%2<g&g[mb`g!VOHk+0Jsao\)Ni!/Na,^IJm"WIu6,\]YU@3Ec+C^4,4/2F92"o)#h9+*/guog65Gb`o=GqG'cY>;BglVgpUi99Y#K
%E["+-N'()Ci.@fsS.f:LSb)6so#%o/JGd.)Sdbe_KT8Yg6Ah5_qH$#$UeRXJ4L`6_Uq\eY`D'EE%"uSm2dKU'>W\5e2&<J(*oY.Q
%!&gg#=[2Z_n/+Y-&X#t8C0;e\r_SMZmf?5YHUe&'1JMR'!X@(=,LXcG]H=/Q6a=79"5+C3%#R2&(!uk_Q63KOeEAg1nNV%Q+WHsT
%m?R0mAM.3f\S\fb+X)B<f9URc<!PO=&.4i16LDT*@7Oh%+FN3-bKm2Nl,ds^6n8P-8=T!X`hNo'oggsAp?7'mSc=^gZ;;</iCo4R
%e%!LM@hN'Z(p8j"b;\(j^VDP[ook3?UJI='13'i+10pbZ9I<7D[?mSg$Nsrc"4nsU='"Zbq#U7,@Ko\(Cu=&^j5a\p#I]f8DO2O<
%!YJnf?IWBu(>?uB11h3n-#bsYUKojFn4FnkJY`Fe60q?$N-iIs/KPcF-8Vf@#DBj,F;OkhcuiYJX,h<5ngL5oj_A)d1^if7>>^bH
%fl+e\G761Bf<_4jUHL>.;>a^2!f5da7\JgEXBJ^u]L0PCB<ATNb**Kis+1lK?Q%TWa+fub`"m+6*QKAL]p&hS'e9Ell^:#$eK/ed
%kV[i(1o8?;[bP<\E@C."Ees%aLc&&s]=J852fZk3Z\MuIkGD(\TeVlRQ7m3L>AK4V.R=Jp!KH+u.TmhkB1gJTM<k5OP5UKGpaRh8
%%f7Ek5)D]BNZ-2-0I1X(MsoZ\,W64p.uc)l:.;lDZcgAWf\TMB"q=@+h]`-"8>oF5![gU_%L(&^amo2LI)J8oPQFO7Ghg9CH3EJt
%QCg65lp+SUg\?5rceMD@$kT<i6OeBA_DnpRn<6DoOF#"rJ+b!`f@RfJWm6(V:g51P@mi!cR>PhEq!u&aM(ACdK78Ud<DjEj&'i2M
%i*TkYIWmT..V^V(d,ENN*;BfYMbeYM!HdeYIjeX8_1uNOkrYU<<jIJu=^aJY+^aGl8\<(!,S&i'TeY=A<j4>/)]^hDhRh_PH&;J5
%BXG&A@J#@lE6l/rEPsc=_634u!W2s<%RiT:eII9QXWO6cd;GaBOA5Z5%ci-oCI(qq7_tHJbUg-Ar5sn)GN*m<hRaD>09_1mX\Kp!
%IUGa&f`]h*k"a8/dn"DNT;gDh2:e*>WtFY$eR^Q-YTluDWG@rGs+msKfG]b=!,O)cd&.dr7^a;9s0+tAP]7eH;<q;ZE/()!f?-S)
%:+aVIrb19>ZDAK`L39?$@)]>[,=%N9(H6B._?`0p=#Z-KH3#tWX)PZ.K4#=f9E$>R]r-4tac%XeIKnsFmgJqA$X0n.k$DB?14>\[
%Hq2=H6^O5b(DQ[d:`EAk5,.-6&bO@I5"^^aUF^XO4)ZoDrRiaN]PfW!T?sm]+]UN=aqlX6ksS\FFGY=:m<auNThN++S1@YX22/mP
%/L<o-'`<t!\3%<R$"G\$r/VktU]:oT)%[c+q[p@O1/^sb+9Cg?,r<"2h/k+XZ'Hj'%dBS_X/kt.-*Cbt&fe;opNTeM#l*ZNH^*18
%AW=_#@p;-i%:KWPH]%PQWa1WeM$]HMJ_4X/iJL9.-c8^UHVds,]h,1]OB[<*]d]h3o7)E-Y)S\dhpM3p/`]ng,sF1MJRD8YCKUNq
%r1WR+K%8"imkRK4\1;[04d_VGLRV9BDoQ/0)WBeA$q(LkG0c?]i$;6mR(]rrTo.*USM\UsU#CW'_5jmCrYpqr@5HUD7CU?^!VjH"
%-"g80/]'-,M1Jo\aud9q?:'#ME"\/?LGlGUCam\1dBJt@h]6t@l0:#C[-Z'4mR])Z>1D!/V2P8n$AE\rPgo'*^0dZ5f5q75S.k.p
%i`R)T3D$D@oZLtgq\_+)WZ'prUaQTlTag:a2W=iGMF=;ELkhF`XI=K));9tfm&]KK@_hns7pcjj=27"r:bY$u$e)fhX5p<R-Q8iX
%CVX'rcqe#/c,X9dm89.YLrC!PeIO6o^/U%;?FJi-5^TM8R&g4VX<*d+>1<#srq-tX*p/i[dUZf6MRgHsW'I7@3e'XHEnV8F#9>e_
%*h!p5>j2S#KeUc*8SNKD/g8.@XlLT;WO?7[[SSAu%HQWs/W*e\\)iS3VAB$,^),hSR)eVRbiAILPb`+A^:Mc+Q-:iu=_EUNH\rW=
%ImCdb>E!L!)Nmmo\J'X7E'agI'>nLnqtJPm_Rc)1m@XbPg%gQW'6q+^KN#hC07j?DM;nn-#d(2Or"$e7lDU+rgbE"GP49gelpt6m
%J3&JfR`BKQWb]!,@tcg)U]js_L*L1;luPZ.$ot`(7rI<TfUBaf&@WhbIU:t8,=$OQQ9cdpi?"+Y$n?cgO@mmoZ!.omb*u98pDs!=
%'+S%'a]T.?qa(*07t3Vb$D#s!;dui/WlC,%p<b/I3dJJ0L$41[ZgSJNC9XG_H9j]eQ1tn0Gnc$Z:)H`f@kPm=$3F<WmJ]X/h#7pX
%]4VUrIqLZ0/('EahbVNTWDn95f]8$u*1&h1BP7.g6]3EuX(&[bR2O7%POP6c?'MDKL04)qLq6fdQ8U[K-BU*mW)%Y-2S7\lNACa[
%6Ao_bW+?)(k93hSq0R4\ejT'RC61O.M:/dJhiYZ;M7a_?L\FQTi<_?C?u5,U&!Z1";?JM-R`j+QUEccN7fb8j+MQ'I);RrWWI1dT
%'C=&nZ=E?:>7addqc*9FB#,lG"H0CQR73&0Z.]Kr2nV6N]e09IaUu!+2^uI/SJj*m#Us)BH_99!U\1P$*^Gj>_sh,\ohG=*&'@c3
%4\k(AgW%@OH;!0/$=Fi&C72:Cp111J&JFQ57Tc\R&XHPcQW_9[=T$JX$HBj9[\qRu$ipkup=q5lmD*,B'GrRFr<hrR;`#K;"hRkc
%=]uD[;?ohlUW06^\SjV"1,`aB0p5D+^E7]?&7'b16jMD^]ErCj\&t0"R.,Y6MsdjL+!p1cS7G+WDX%@uC38kf6a/Vt(lg1Se1Z76
%SSMijj>^6k\aFPLTN"=!+!S)I"@U*Y+)5nX[-1.,FR/cL>F38,jgO2d"8R7HmWsbZ8I^-?HDK]!YWlGD.qZi\hV(q_.&p@[1L8sb
%W%_*G`cU2h4#^u^(.fh'S7<4B*ZOY,6r[TIghs,HYa0VEaZV!kf/!j+A>0g\_Q8Da5-6,b'ZTrEr&"4T*q$@)lk32DR-Z&&^2pC3
%+!^4^;NlcpaGbifKFD)2puDft0N^NS6mY@P%O^9N+\%4)VXOl=+ASja.TYG!"M\Y6@P7il,3Y\%Z&6%JPtPssm@>brmZeci(:ejb
%RA<WE.prWdMu&Qk6='Jkio0<h;)*e!g-T,R?aLu&`!m5k-9R^#Cl2#Eesuq;Ws]bknKU-u4%um,c4nC<Zl\YReJ%V5h6[<>?k(k\
%B;90Dd0L@Te#'?OYY-8nX$+LPDcr#1V>fT4I+u7LbZs-UIY`uST5P!*f^GOHS0kcfdC0#;#@)kqE:$.3*8T<@,CXh;;s1ZN=9_)D
%n5@mijQ@)G]a3PY,j_g"C(TP&6r1[MM:buYW/68FffVX\La=laaK5Z_(V.:)@XR-5?Z@);33&o\a$pdVigRB7^Pk&*T50X&m*Ai,
%'!*RU2=P>8PB,m;C)afq8IB:EpNI9^<pa>_Uqp5\3Ir"S-<4(%Ct&#hqnKnh8ej1CM/7mX8@PNK#qK&EXMqnTnZ4SE+_L8&M]a2m
%JGKKsKu1h5qbT@E_!lgE=J/]upC+"^*qAu,@h'tKbXW^Y$'AC<J`o-0gj:m`KP(StDP]Q:h7#T`$@T@Zo&]X-:DD9[dZDEWmWW]7
%U:5mk!Yei,?Xa*.@8".G6.W-ggXpXj>3LrH7).)Nf$S2V)\jACd"Fe^hmJ.S>ZG9&5:>p5LditfqS!CUqY,@4A[F0$-S)@<k':51
%Hp,_Sk!@\%2:Q8q%HGf=>)V+B(r(M/V@Ibpp1u%l?^ADeaE'Ep\paE9>F7tEFTdX7-!H%^F&bUja%/,XX7MRDl%NrA[mSK.WX8gq
%=q6t6'4r'.5i#,)#6<n,k]n5H7bp6,3RmRR&8f3La@D'qo)H^R:"#.gcX^h_&RWlo]to/rXE5%Z3F\^\$3dI\dKjU3<?W:hOV,!#
%(g2U1ao8#\MD)=/r#W;6qs-g.3n%\Dj<<-ug(<_fU6]>L7?i.)/\W-;a=2_'pP)j+mSK'9hh@0HT3hda4pP&rS:&*5U1ICTRcPS"
%2,`8<MCZjWe]TUB2C_%eOHcjEG,/MPZCdYUr]Jt`fF";>$t^g+fjU6uN_)V-4o)>aG']`8K;PKsU9E?]WXCd`-(qr\r^+mTW*trE
%D=^((73ZhR8Nr/0kT(Nsl^-T(mt&t!I1G2lO;C'R*%0@dWIVgu-R]tZ)o0<;PHH*OI:16$^o=Xu.Y1;/HVDr/:T?fLie'Dd3n[u0
%Wc[pC!fN,sDG\&?IsWP4$D1BsG*/3,8-;%/6Uiri8*b<Yq-N[\5/tE7!lbQ<6k>dHOXCR#YJKocJg+%'hq2Wc\rAMokeFl.]$8.q
%oVVtkDZH)iLl@t7Q)Gl1+"r"CY`\b80+5F77TulfC?o1+G`ib8&J$/UdOit_.gS&gI`/)28ITkT?i2*Zd4^)b867O[YjF>=$jOW+
%IfYe6!DC6'@MefN[!`kNUhQ-h2,T!Y?"&Ad[,jh$n?K"b)2mN_\$'Hr_lN$eWT).$E')S3G5`%,iEMHs*&U(sbD9'47XorH9LS:*
%d\Z;rGlT<3R5^,q(IWt(oj<PT(tZ<me$13+*"0ka$o]%1OUGG(U^$c?XNUN)fY0"(@9*=ZX,nAO.TL%(O(e=KB[X5geJ%H2Q*jGF
%4`<%j1he35JRtt0e)`7\R)7Ob[OARH+,$V3(4Yeb']5(jW_k&+?MbI134kZJ'p1NRTER?N3J86>H:`QJ'71=fqF^b%nJ'j"7I9E.
%U%UVm1lO.Jfm-d9[5sRZFJUqPfB2gle=%2N7[4+W@,Kd+S,.OfPg)1`(D8d?\*+0=5=\Dt,ECY&Tb.iOTplp3Eb\$oqB2YZ$CVO6
%Z2,GRoi^@C4#7FC,<,N7hT@R('keK-<E$`d;QjJ!^Pm>`&"LeT-Sm/U#hRp+gK>PZN3t/]^f()XK8XtW>>ttq)`b@H9=A4kA$WDT
%7BM:!$/^r2)8>cjp"+G^[DpdB=Us-`KIr.U/HNf]E-mIgfjP?HDrZdVPY+IfnDPA+$VC"\*9K$</G46%rlNboa4G:7F5l%I&j*sD
%6sopEqN+n@c#ZSt7C\VeSnh8Yb%MQdc</SdjdYB]@+Yc(=X3D7LrFALKrdWY,'EU%SG5L3Z9*s-"D6[cW6QE;'#3q'me7\uA7(/?
%6@Ohm6ibFI[rEHt?W$k)/rY@f?Uid7#[\G2\66j(PeAQDs5dE.QjZWk,3D:E5TNHkH-U%K@>s+^2>K<lP`pJ-T5GEF`MA*1A.L1a
%7'-"79HJ,KPJO<b>t<,3eRL)>3!s[\eL*o,C$OU/?V!>3TT:7B2LXL/`TK->8ZQCm5s>\QRD4](9EX1C^7S2]K\e2iDcC)qj*i<Z
%H)@*$PX5LJXn]1^RT..a]b(m5IQrpRFl7N;dNI',3f@W=MfMZ%b3cn75ZQr=WQP[4nT!g)*7rb/eP0hQB29fe!W#*-<qgJWNnL3N
%GFo/\l'C^6'D(q/^P=o5_(mT730qqdG9/.5UbB`',J\plGn?d[ZD+a^l6YO@LD3kY9[F^3'e+gSTE\lJ>272fMM7k#Wa`YMC"'i7
%?=4Rf`E#0P@Yn*Qnn9Kb>%9RgB$<nU2RWgU_kuQ=CakcS\2d!;1eV=&FT'C%qsIi!91XN3IbJ("H$WNph:u<(XW4d2:!hJ[(Pqb@
%e-#p60k%3Q<>#*n0XFUFXchb'i1Oi(>*%n7.\mJ3E9ipl<VgU?ZKpNemcl@R5aL4$0Pu#&Q_D\sn9,k3B9c:qX,o>:USjrHQRZYH
%bA^r4IMVo$&aYRdND^IUT>9HA63&kRn10%.O!:f^UMN@7OZ?rqmWCO``K,o,4*nFN>PtEfM;u4"M]]pKY:G3u'4(MA9ZcXhn02^0
%AB-(38/q3MHFs6tO,D$A&Q.bK0[ae)T^..Gisll>.MH=Y:VS+B@tKX]0rO>rGi1t-5G:r4[5VM`<$&M.c6pmS`S+:-?\-3F!I#Re
%`U-4Va"QYnLS%CQgd,ad@ZBpMCC>F1#r[7f2AF/5dDh5us6Vf'E$I74E9cG::V8E>J>skM!QU8+/6OnFEK#L2gAhKajS1I@TTJZ#
%3VFZ$"FDN[pbAr$=uR?f*M\kq2Ls!P4+@+GCPj86`#YW>h7iV[qZ%[%+VbJ5E((g4IRU`H;'5!V.YB&\qBu"3&T'77[XsQ;doRIP
%MEZIlmS^Y4pbD2?YA<-Y;2B8MH6d\7OR^>n'Y:+SJW*$ADfkf++DF1oQ%C:aK;9bP1sUK_5ffl<DS0[P+_au,2*Wd*gi_X]l8W;g
%f$.h5TMH[c.LMMP!(@obr-0+q;HY@]q+8^q>7#1TOWR$h>Dh^`"-!.[LroS'"c`F.>.pIMr&WfXNs-@1C8q_*ntZ!KFpppH\q2i4
%FJ]iuq2&9YJ[A*AntYuY6*lD>IOO$8#p<#;nq6f%eRCg<9_-*53KK>1R,l;&64"Rc^a).WfMbq;JOt:rgXl/9,X7No0i*/8,X6DE
%,b]'aP4q_BU=R6VNrBD5)-)g.f#<[S./D9!8S(OJ<0B2jo1W1eP%G]$oYMo@>Q4[M5=4l$MO;@N-=alY>jDcdN$=f_4'pQMI)jZ\
%s8)]F5L@Nd=gu``Sa^/@nsY/W1@[re.EOu+],Uh48$1@TG9Gt5HiJUE5:U:6HRKG#N:J3$Q9)`;6-<O0q?h6+M,M?M:l\pa9UPC"
%lFB3h4^L*Z<!"^W]Y!'IncPkMZY?V:QoUk_W).d\S[m.Qb)aPE3J78d_9//>ehrG:]Cc]EZ6-&m6u42Vq2rFt,8iB?bE()\-_`%'
%Z0^4IMNl6a=iN([nT@pWntYX@H,cF76-G<[E?g"GTU%-@35G9!:Y>5U,A3]jmL@tBA*K6fHI<.*I[[liT[+:]r)f-G4Sfibb9["9
%/jIkAg:J-LKJ#Jg3c/\^'=tQMOs*&`b@h5`i.N^I$B/oDO^?[O1g:92JsXks"dk-Q7bd;=*A@3YU[YdW]],:*>ffMT!+n&F,_%.m
%g"Ws\]GV:Ca,34NMN;R_Qll"ZV,a]Ak.NR6O;WG#!FgKhShABQ<tOsjV9JP$NImPFLeffm9UcHj9G$gE/6<Aq`P9'^IfV:a1R5/S
%TU>'k1B5W)`f.h*!]c`0->cn/n-W^S\jpRE+IQY52tCN-PSn8IFRo.D10OB_K&%qrJsj!.jaB:*k/Ymo/Hqhj_O36E"A*aVJS2u8
%HNFHN2XVZC-?nB`82!N?hj;.I`&+4sk57tN1O?X!aJtf0Afh`<g4V?Z^,S1CX#dC$T,]BJ"`/o&Z=eb2*SL?]I*70M-aXcJa`5kk
%Kl+ib@l-ku1CfM;NV&QWs+!'*T$t*$-GK<?>5`:=326]t/D#Gld^8U[[26b!6a?^i`&KuI"@>FcJt1d%?!FP6-d)7il;/_d5@MiV
%\2O8UM0%+B^;LuSUq)g_Qq/UBhgtk&gW3`(BC*,Sp!\5;STNF"<I<*<:D>Z1IPg!.O0tIQPHB)ma6H$'X8<!DIcNe0J5*s<f#Um<
%r+SEf0d[4`'D)-(3JqqQ$$q=.fbNEll5:YIcHCl()'jbiYhQ?irr>7Y5KF:%(iLOhEJKa2j9^7S4Xq'`'Dm`6]<:0'I`BkX,de'Q
%1Br-!s"iW[GfP\%XnZN;[))U,!,*pQHL2(A)Ct1@FcRjP)Ja>F<BW'5qCWubkI6$B5X@WchqCSNGJKk.'6==j(cZ3I,`ZqMJC'@2
%\B5OT"""X!>ql"e5bYH#10Pk8$]QH5O3%6h?tddJR1(Ke1c-QZ!!Sa/BY5TTPnaghpK94i-Qr8jJDH&FpY4&E5b]?9IRH6[`'cg*
%bh\YK!K,<YbtKC+TVA'WeC3MG-7hc1MY+T=Mag2qC2ZgS[(iRb;F2`d)AAPG>>8cfk!">f9l)ZCdFKJ3$'*$k49,R43r6+3?Ud-T
%Hf.-Xd>o$FbTL*jd^[8mF$C5aO&^E=k+*(Ja-(>)o6XoA0mto^(8QSYIIXW"-;$lL&e*q2-=ojTcAr2XV9Mp"Glji4QBcu(Oj];e
%]QVS_$'frj%4Ho)gW88[BtWVE&$FhY9Db+/rB"7&l_\%t:V?>K9,5Dp2?D8jT/_lF1&XKX8#-"b1At;lE,Q>ES=&Q]ien%"jTJ;)
%I$*ZbW$uSfJn&GcYj'23M*#E;'/tp>`qm-Y%/^?N)KSo!B,D*A2"#^@iD8es]!/M5-?pG79h3r>oJ?ck!Bf>i:R$DE"rd:$a#_k$
%K:;l+-d(e+g("7N-F/^V2fo>u@r[ucF`V/&W&.`P3BnX$]HJadrqUE`5@Du:e5b>I)b9ipq'8_B$)E#$):m/)R7QV`MEoqHXbm.U
%I]R11P'&Rc<+[RJG0L.gq^UhGbs53;4`TIFE9\g.PEF]Wn^NU'm&gu#iWE#:#rU7C,-%96dn,qc[up^+<$TP-[MPn=YqdAXPnR/W
%3uEsJYj08T8G=U503gBsme#ZE=H/YkZ$f;V2;[s'<TFt')Co944ZPlGojc\##)4hJeQ?9^fD(m"C95Dq0oH(9p&H&7e+^A%!3@7m
%^ZWF#)@.k<2,p+o`7c5>A?.&sb&*!N`PS5i/'V%2#>uQjCTO!,pc)\_g;ltOB#VPg@n&*h$3Ot$<I8109r'XQ;E4eaRo!n5:,B1:
%ek4OCKSRtQbK,1+XWK&6VTr#-E,56Ub'Zpr2;DOZN![!`K_"?D>8)"95&?TF'69)(mMqc2F7!nGf3]AfCWpIS\h[+6R/Do'gk8tn
%-1.O-r<D[.n+24L2LsD?AVCY4rnGMD5d/,keA\UEm.D#lJ#^_t%_dCda<(0j'7Gk-Hg)0`'7TnI3M?rW`*Y`@^F6ZK!Ee'ePkU'N
%I]W@3=m-NNNHkE!<RS>[*_orcjVJ4"0o]XP=.1Ngj%3*ul*mAd^gTI)9:br.5LtD<Nu2Yre2i]DO+mKG$_C2]8&Y+;*DdbYlpo!V
%/TcTL+*#DT9_jOb"upWD*Q]=@lmHaCU8JZcrJ4RmU4!$pNu8=7$S*Do1TW$![/nBuU(!eg1;=7r#:N6DO/1R"?Dq[.(Yt<&/GnZX
%;P>fU>W2)UgRq+k@.kfdI@s@nOkGeo[J&p:Aj8W.Xb=d6`+D47;H'?;K!PKt\T(Adp1&54Wthc+m)Pp1*?D_JcN[d?W$V8od!nQ!
%@IlpJs!\(n79Oc`B+YK>XadIT(#U?Fc_V5c.a.k>`PJ4?DRSmodSplWD55Y6`W+o+fN3;"Zh:NY)V+V%f65UJ^bLtOE:ZOC+JJ(h
%Tf:5ns#;"XO_i.7Pri/h"&d_AF#*b/l\dQ6UINP_eE_a6a4Z?)n.bunV7!=N5mGDT#UT5.r2//:g#T)%cY';R^2da[5<j@<aMiWM
%nhc?_b^#.JAJP'20hGWYk&7@)FH7Ehbb^S+.q=9Do.uiV;*?01JPYsm[l3buOHb?)gMHi3<[(jS?%*9G6?i3MaO;tliuLYUX678A
%SjNJ,]"FZ5F\\L(mLYt9-CDSt_3]S`+#7%RFFRZda26&@eXiBT4h/0fA2^RYk@kqel`YNu=G$,fcU+29H*-\ko@H$!Wb^N[4?j@]
%ppPQD1_g"cf=/hUZ:/#=q%a-LZ$PQ!9]aEeM&X\-rFtQoK(g4DY:YG&1u\4Rj$>i^qD@%\KZENP)Na=@/>5(nLfYS0"R+=GpL<'1
%]ipVB/cRqoctT]glfcH(q9Nh8*3J72h[T)"?R)^d1@9J+dkZ7/%;5"joj=oR3P=MmEtZ3rjooP>/W>S0(FF/Um[dC/#.pG.J%]$L
%b/n/V*d@CmFh,EiF3,"9J?:ses0&UD'&e#IDt:9<h0AAWHg>^-s7b6^Jh(u_d=bI9+9-0Uld^lLOo(&`mdPShEX*YaQmqmUF+a;W
%g=d#ei:[W/RXDRno6]eMbFPbN2kHrGhR_LYl'DrK^=Tmm^TZ422P0m=pX]"ghtNZP,^p#BdD+uH^)@I)7+-M4\t/_Q>CXB`FuM@I
%B4S3`Ia63='nm/0VKXQ7)3hFu7n(BO9Zu+]VeOhDB&e6u)5I#@FYRqg@#W&op;?gFs8-]i!ai<K7o\YNF6gp5[lg,YZgNRC0t'X$
%^2OnNYEPE]pZM02@qf,TS#:DbDI0HCjQ>VKJA37X0KM!nhRiPrrTi8H<57m?9CSQWQTI>$nS4U.2gb3kn*KqPBq>IbDs&''e`DpS
%KRLSpFS^\iU$@=*4Ba%"*gk2Fe%$uS4BqgIVsHK8?8$@I_YppQ``8@4NY[+)TC?)EqscMf%_mI.\NBApSdT7Yp\/I)J+mgJ&m)Sl
%9EG^CT%6JhSCM,_.4Lgnp0P'j2Hjld>;)eofZ<F=o@nC=cU4;/bcX'&Zd5h#TY;^u6-Fs=m9<^@ibQ2T,07=K%pAVL7$nju^##aJ
%;5NYqPGZq$F!=E]+ca3?8CK$11FHZ2p,*HR+jYkK.o4X\oBWjmqd6O^5\1?Fq<Z8UGl'm2gpjJIp7qkq4J\O/Rp'(l>$m5O*COf&
%rFllfcF#knTmu\+kP=L+L[uD0FgE;ge*QVjVo=jJI8;aAAaRV6BZGloBhJ>)S<4TXHO95Y7U;83Wn9Uk/@dT7(`oo%2Ru'`P.@dh
%3a/bVi=fIo@R9U`UWK.RB07!USif`RbNj'Y=tD(j4;ZFf[/F+=nho4m?'sN[NnEfP0HO,mcQ150h:Fr^.U<',?h47PX_cb&?:\!M
%GWP^]J,:/.I)pBfm)md6qu$<Xfk]Ft(Xb^nZDB'YiuR#GZ4'S,0bM\*`+q'LYTL'<<[mkAO,3j1+g/:Z8EC;*\k=..DdS-b%s]dt
%?("D_T@_sMlTfi>\WA/6,G)&cO*>shiri:TD=8jl4MaMQEe6GKo,&B?mh>&uE1C<T%_#7g)*]-9J%nbEkJGo9VePeup![na5F9XD
%qWZ&HZ$m^_j4Ea0F5HLKd@R4\oW?qpNm6b(H#1e*4MP/Ln9N+(n_'2*C%h?[q=E6d/tBuE1GrP"rAljgM0R=GB/&pFH^a*EpR6n`
%Cd&Z\A+Q+Eq:jLhb_J:scE99(Zd5i4c=?IVE#tKE=2)]OF_n4Q`H,5-S'E8GBphKKX$?4.I/5X[c.S`P\*G$ZB0=ejN]^%Ba02,\
%A+R6M*h,rl^IJ+lfHb'9lZ'Ruc.Vq5BhQo7qe"<'CbF>!A+NZa=tQ'9e'[eK2O=ea:S+H:jn6+SfR,<Aa6(g8YMoIC2IH&0c`6.<
%o0cfO`mOOLLO!\g(QN!Hl/V^/CG>?'c\8\U:Xe\%laPp,>V7#:k0fNunbtX/h\.`iWoX`N6sH,"dJ'5gEGR6DNam.pj8A:[0_6I6
%KsN;9l07g9gNdTf(QN"sl,raFa,0l=\CY^f?iM,;5hK.L^X6e"dY3AKdkl:+g%="/QOCjZ9nJHA5*t/eVDp<M6fs(u=.Z;:jk!;M
%)R""kN#'M0b926Dp;\Goods#$?^!0JTDguJF!.gR2$qH[@hM<h\=-gCr9\0D9u:u1e!6hFFSYUY4pfDD@hP(nr#G(L8Kds[8DD=?
%HfNPddIN6j\%F(r?8fi2?tnfUgl83*pud?,2kHnogXf6Apn,alpu_X+%.e\in^C1+])/pfNh8d]$n0[FNI+iqB\_#q5_r3'FX4>4
%3`PW`']F_Y]#GmXAnY$cDN-7%H;JotiZt-C%4s.;j2V;)ncOi]LBH&>V\^3ABt8t7mdfrX;mSZ<cdMALN_e\eBK_=WCO.$U&ZMZU
%/"lS-H3LZ>OjmFTqK'jUP!/:sA2Z#if%TsgWBY*LI?rVP['"r>dQ4TtW#dW!(;LNFa;.bW=2Zia9/ZKGaRNc[qS<3:ggR\+*eF1N
%5u66e3\J\Gro4Q#auB6.oCA?9juJ28-'k!HVHP.]K.N)8X"q^Q[2"j`]2F#L6J$8`Mj*L3>G(PpXflMS?3&&Jo2q+#PFc@_FR$:#
%T-:ku]q]G28Is,f+PUi3no`W-a=U]4:18aq?s,_?:p3l:Bn"oq8f]9ZLn@s\BmZTS9C$A/d?N*$HF4q5#Pi5FdSqZ6^#5#ggCf6I
%S!Q,,g=u_HjZ*EC>WT6BP07aRJ<K=*<Nbrk3LO;aXc-mT/IP1TZn<cCdQ5GD4C_.*pX[$.OrmW<TMhqcjS^#c8k:I9E5/5l_>TZ]
%r8.8S,pTnHqN`W]aU<lBfCnrUQKGS&b>%u0q2J'#)r6*>hOEL>FK6.!>?VhjD7RRQX`%`*kWXC&.l-q-Xr(]RqCGtO&'[=^kLodu
%aaE%8X`&/6=E@N9>LCR#H(C+0U]#u1f0d=ArB(g8"0n:"U0Ln--3uC:Ic.p?MK)giBkopkTK1$Drprh4]@eAt5>2B([oM1OcSEmo
%!@_[!Z:X_d+$7shb<Ihu+j(=@mSoWZ&^$rTK86nbKF5eN(mj];!@X9DBgF.]-"Eu.!,&ZM;C\<ZXDQ/SZS\l_cb&u]NpuY9JI!lV
%>(Fb<MdI%7=7ZMd/uIbqZnAh4B'.W)Vf6fqcL^E%g+lH[YBTVu;gstQfrk:$5uW.SnDmZ$,7&nLYLYU0/Psr!i=Q]jYGf7F?L%NS
%(4]roq1=^0:O4XAHF1'(cG+hB>Is;tY=iRsAnL;TpXoKe]-+cY]OG'L%AHj$YP5,cUKZN\!aD+`_]Q4:T_sZap837fFnPS'HW'!Y
%Q:kkGQF>K@pWomO52Oaa>?u6[hhF<B"jQ)5p>8Fr:PCPAb>$($fF^q_gU,PSoj^nXn5m/rbGDSFqt]mWq>"f.c]aYfB9/@PcHa1;
%"cXXF8_-O+f4jFFNIHk8bfWDdijO"QAqeLorNb)/pU%D2)o<\0r>HD^m;pFR95/_R_<]G)F#or#>WOpQ1sN2,^MZcp@"!5WQ/d+3
%kA/joSJ7n"o(<'j=D[1P?4.qldKhoa;/7+c/P3@[#9+!_FOaZA0"$ZgU_@QJJ%i]rl][W-B9/@eg%kBgO,JeUf;3[q6+C@jr7BTa
%3\c>0*Ic3>>&jFd!m"$:fDE;C;j&^&Ss8<N>(0c"T@]Z@?(F30O(pjm\TDrWBmRAiqXql);!E#2e2;;PCPTVo53IT8OR)g!-"OV-
%a#_dBM)nqV93[\M?@U2@7R_V9?e7rQIeW9pr:PD5o0LQrZU7C?kkb2.HS9fQ?:eA(YBTUrnG2Iq"*$VQecTnKY6X(82G^[`3a!!3
%jjJDs%P25jq1@>%:O4XAHF1'(cG+i-(^%sXdhm=UoKDp:j*1S+f@+ZKnN8+a[X"O[q_aDojiVig0AW)3Ia.-KT]OVTTquW"rVc>5
%*&!Z(j*9h9f?h9nj4C(hLYm0:kE&s&k'?flPik#4/tL&Qe(<dGY@0Ri=tZ@/>)#("s.5L$*&!Z(j*6uWYH`R!a0-"eSpj>Ajrq:B
%c1CQjWd,R;Qd4W9RAfrQpRKMV/XMJ-/PWS;l`Zr@G[C1ca%LWj`r1$"Y9;M=ps%s_OBgP[H+IH[bAk1"3fi;-@]_k%i3)`EbGDO8
%9AAh2qrd!!?8!>>n_3fBZ%!e75A$aaId9/:+h>%@oCP0po/L&0*QR^(ebSh2W90;091Oc/VPia`?dIbW]lY7798C5Orpr*u:WY`t
%epE?SEbua#l?c:gEP,W3O5mXGo@NFsbm,hec42FCU[.AUO5kJuEZE,8IsqlTc3ReeX*b(O]-IMO7^MocgeIo0=kgsY]gA"-hS3AX
%pAPAHY!68Ide-2TV6`ZfgXGuMcaQHEDm)fJ6^qQLdJ);.An=D7QTiXUV6=[h(tORM0!hii3bDr4U$L#@cua]aEp;r<e+Rn_p%(0o
%l_S)lQ6(I8rHhQdk]Q8ZDd@_d1sIa<Gih%3c\6F,"us3nGX53Ya"3S&hE5XN^L'3T-=jZ/:<;eKf;QHH=>E6baJ+h2S3rOWbd%[5
%cj06G$N!43Y1AV^WO8PH+P9JRgIZ+o,*W%E7f":t%>%o"\gOeeH\1i)\]i@Efqn5]s.$dR\Dj)3Uud\6=3@!@Pq>s1q)#/RU[Dr3
%hH18ps4S,gLlZ#ua51sJPLp`"4Z/g\)0q#%c)ah:FB8Zur:iEiJS6!03?292cOXUTgnU#4lh%8Vr]:0ab+f0].Ue^@JETh`W_mE8
%KeP,?X=sto<?D;t6f[FdqiA:#-rD&,At:Ak(XHP/5Q!>g#2-s,:-#9?Gi\W[`4>/XaX($^4AdOiZMQFmI[9X(*r+W"Z-!#a,bUu)
%RZ=-R7=i1%:akXM4B,#nPs%LP!i7%3r_s[q<*l>+'B2^Z'U^?a9Z^/=:Do-m?9VO@ajk((8$j>!;@X-V+0/N>s52G]oP/8R7sJsf
%s5@k.j?O>,M-Ndo'-KOBP5s8@NMPMN+L$L,OWa[Qpf&8+<8Z;OAQumP,Z<^^q5@5WOOpTM/M6T7qsOl\F.2!DH^pn:Z,T_1b*Ae3
%MZiTj9R-6.JSuU^_lN;k<Xgh*'kX3JVa`9n)[1`(?USa-"5bF"f<6an?rnH67U&e8<t2Ko?4+[\8uARsDAG)aB(Pnq)AL%tZJ.:B
%39%K:3^S$)T4ei^XD$^(=FkLIq3Fp0GQATtp\:eX>:^PRG>P&"GR6gJ<QZF./6p9CQa[d+rFi%3)/0[U?o1K9<\e3U(cCq9P&FpJ
%AC\-95*ip6R*2.299b-79FZqOYY-?EK(]YTFd83g(/"(*f4nKEB\2W+3.aVL_ZTUlimf:TQF)L_:`kA!mC*3!hGVp?I@Y&uU`rPT
%r>AH]dfSC5b,W,ol!oP]E.CYV=mS\N#5AJ&G:1Hr<gd!3_%%oXa]3U%bSY:BVf"!L4sja&,&I;)=bKSPO]C0jrA@$ma/i0OTF.&+
%#+b;5$p@%/GmI&XQ:`fHPS!VGf0oKOP6k[:/tp(bZ5@btr.M[8@1,3\9\hNk9Hh%FrE)9f*tf\2eH-DV%?F\dq\RF'"'C'i6+#.V
%T)Z%@7XrBG*:g?/iO]kpEq*0:`QS3V$\>/<KQWR^X/%5<]3;"e%c^aNlW-kDo^@QtQAt#mY_U%]P1?!0Z!!8Y(!J`#>#u.7=*#:d
%&h".m9+Llo>*7\Qo<C9d;9:LoBifs>77UC)7q)RGo?,\,"-H(%0H,Q'I!P%MC&$QYD]GH%i-k_+h>S/a#N&+c@(Rt0[hL14dCoCM
%dGGfF]\%_Q%I"2E0Y[\SC[aa`JO:\PnPD0)=FEa7oS7bW^>.Ys4I^fr*9%2r!n*$K'mZ>a$Yl@%BcAln@qKk^NMXt?)2&tL!S&A-
%bC2M>$>M&0F"H+HQ\6pa-m=OTJqgiF2$LS\X)#X8XCLdAWAk//,;qC#1o!*CnrA.'^g"%9kgMnt[C5[QHI22tYRJ(DBTJ(NhdCnq
%jReA(cg-6VG!8?XR76Uo>Wn%?2hQ+[Z91&X%%0U,lM*4>3VL%P'H2kLJ<aS$&!K>(o-(69%DU'XSkuh2P,7!7.@:_qH66d[OeMP!
%8u.'+MGtn'%@B;9Z>YN16h2_)XhZ!L]lq=.@Fe8.>U;ngO!WL!@]o;P=R5jHIq2NW_S^5^&2=G&02]uPg9(LEeBWXtNdg^J\)&S^
%OA$EO%SP[<o4s3S=f!;mdEi>[8`g:e2)rTEDf*WFI'IGJ/'Z'X&n@#&;A%[A;>'irkk6fSHs8;9<Tq3_p#I@-;O%P@Q5:'T95*J>
%1/uL?6[gR+BM)-+9os?JHZZ`4eMfQ3>>sR;H?2+3@/k"4ke<Q`"lZl=@)oPqMn%.a?OK#4.6^fC!j]h3G<pJ*4d6kCrJ31J8#UiU
%1NoaYP0`!.JW*@L5OF.+EF"lgZE+/gO#2ejHR-[D=uOGeFm_Oo^5e6+kBK45Ans*P.S;\/MqgQO$P'GMl$PoQ:Ro1W47jt0#t*Do
%8WG&[)Ct4E[fhL;if,9>YPo)D;"GPcp-kGb[W+E.&!.ah>sVY[Xd\)5PU7/74))=4"P-l%'U%d&5IXk06Yg_+E[T86>%Ed=G6fS1
%+7J5@JfD)="VO3M*&d=_iCH3[$,<OM'<Dq]IW"]blXnRkrbBP"J8)*9+t#nCKi$ml"NQ;PZ_A8</V9s"9`@&(QR9"BU]D"HDkOp#
%q$7)jl=Ykl*l7p4R;K(r=@gNsJ4WSe<6^g:IX*J07(GJL#5ce/_>=o-,V/?9ige9s)!(:7p]YH<(eFMs/T9BQPrE\ubFRn;GX(n@
%hum6Op*dg$WF2'G)sj#_aLAShFcssmA@=WOS>"c!^c2`*;ZY^J$&&ssipqKkmPlZ@-/[@XB/\/XD'G(tc&U4QTc/&]jgQ$.I4Ppu
%?;S`8571j0G/buE._*@Jq:\"lPkaoG*^9L';B*Q-NpmF:65.I+?WEUMW&3c[AgB6>!K7X1q@WW"?/qmDLk2Lnk<Tgn@p<p[_s^RX
%?K(u+%m7dhfnV)H/6Nmsgl6_Ve9,Hu^)Q*&WrdTDk_YuSm)PFTKCG4G/#c.C>Ds72Q\2&5/.T%#W@j)sbn86s[!*Z@O/0S:Y(b[E
%';:s@#oSBu_N&k?IBiP8O$=.FVjPo[A:2S;Ynqn&W>r1u>-6E:8rpbjEC\$J;+cQ@,q0["iSP18Yo$kI#A+KBG6jt5:;&a-E)MQO
%-s,0;"/]UV&RpKc+I8I4*?,&AdR2Wq4T[M4NPf/WB-Hh3#RhsV;ac0p7R7ZeLUF3fDfp#'7lO"1!$%jIlL+j2%FE_4`F9B[DZ9a4
%aH!5qJM>Kj68J95!'bL/pQ/NE8j^ak3b8h\1*7014IFeia<D7)rq>9iKG6Dto';Ec.qeKV9>4[__@`T=G.]\a$;t#boM:a:iZ.'i
%CI:%*k<!_KfITjo[]K^I;@MHs8a;\1?fLB.;d/$V@UCf0'cKQ9%I4_cVn.m@R82]bo,DN8eU!;ge\Xc0Dh$9aIgk^\J)MRe@X="?
%=lIXqF:^>[oc."RGbX\-7rolEZaa:C6tKi=X3mQ]r[g0*\3r53F&FMiiS7,9@Aj&_cGF/Ucn$^hT_O?q-Vo\F_tWO?XT-_o](?ua
%/`GDsbt*etcs%[F`nJLu;!$+]Q&E&)e=V";k%SG&DhA4,*O907fo,;*K=3a\#o]9)_9Kk;)9Y^0WR&![!6XE',b]**rGr2YaSLTY
%L]I<6*9p,7^X@^tNNcM&0mpXIb,8ld9(RX"l<%d(5YY[=JrqXp@!7>5ai33!*c$`#]?:HqHk*L22"r2TgiH_Tj)J@I)7"7YI877-
%-/o:9THZMUj`'54m6*5Q.kHUA_Ym"'q5A3*>;l%OS*VYVr7P.\s,c:h:p#o/p9I4`i(Yd[^6'Zhqq7m;Lp]/?i$*j[D*S6fE?fV6
%5Lbp7_Bd;\`0EEcZqe1i7h09t0(7atrR8">=[JM&kaXAerLn8:q<A1b#^nEEpL)Y:UN`mo8>8YHU8FdR[PYj04f+Gr7n?gomk)qb
%a_7"\p$8F&V.THS6[gO;+W?3;2OgFDjd7<<bnf;s#]6G`50&]"&9LR`O`jp%(%Q<#k`s>NT$?8f*HurOS-[&UlCObtBaBK,]OC/7
%%j42!4<oAADY?IYdCY"2fKZ[J7hMj,!ZP:$N;^JKg>fK8=<1eh)X+'%s*riD,jlO.R=/b_5\PaD9U(h*-[m</)4FNQJETmpXXC5U
%Jg`=R;FQ1JjI!@P[1B5X^uE(!Eu*"F%!CRc-0tR0X2I:3:VlHAYHNs%IV/pK^,9KZ#0U(;cF:O0\gqZqMh=$C$<6GX;@t>(!"2(N
%ED0q&Y8G.4>sUA&LPn6Or05irPeE<9<'ub[Dr8')qMX,@e,1XYCj4)uj`Ba\+j3K&T$#^IZ:_eI_*L[D,[U+3hN'T2DkBg'>PjmY
%rOcq_[_>'1R(QQ)Mj,Y)IM+\O"'0YY]A]`&(Bs!\VLr0b?h#b%M,O*tMhnZo;HIfdMdMhl\Y+c>A?St%YYgSJp_44Wd1dbPCfr;f
%eL`<Yphl=roCSY^%;&G?OdoFBM_&?3%`4p(40Oq&MF:[8@\IAWjec<Zl>MeT/"t`6Fq]Ko-BO*GLPT*G<m0#@1$=jqV3LPKZ3]sV
%m[Nmi9O]Q$,/W!me1NqkeIE5!\`@5W,j*aZ[&d5$3P=$#>tRhVX]+LNgL^'S4r4M5d<b:a^)R*>(s\R;<2:f4:IcHGNGI"j#c7G3
%Cm[&.pFWj7>IC4FY0.g=7K!MqUXa/o`)bX\r7RcW>p@\a<(#!ZSPITc57XZZ!h]hbE+!)(In;Cr;X!TbE%!V!f3/LZ4BGU!g(m[0
%,h!QlO]QO'kRYLEYn*m5!l[dndPjq!,ffg0jP3<\nVCa,@=?K??.Fs#hOTVuj](esrBNUPHs,f/OnG\%$HaK/=qFM[pS0/3g[G46
%U8H68:OR@p=t(r=Mk&=Ih:G^3Th+#ic>'^p)mqdl@VN+22V#"Uo(=Bn,^2)sGEEKqJb&ta*+k!NBGcD:9IU/O!ctP0P,>5f'GBjp
%=<SrYiX0@*K;+[<X8)2*jR,3%cEnaK.G6XB#2..r,0YmM><SJ^h%ncOAG"0Lh9OAW-,+<XR&]OkO40U=l`r`jmd?leQMVLfpEU'p
%`S)<,lL'Co1TTk,Q/0!r/=(.Q]5nSQD</^++&$0h[NrXfGrNk@Eg1Vp]t=$=29YY\mG0>TgDSN'U\LG!_R$k80rj\.]O%H(1!8r<
%B46ZFh<VU>o(OcP-QNOW6J84C]O+mb_Q*g3FL(Y/fq1-Hrdu5VgJil&10BIRpS&)B2(IQ7Uec..\8bQ@I2(]>n`4!2Q2#T*J$Q$f
%+3h&k*#l<\,TjZfAikn?05'7)j%ceD^6.0V*1t.VFB1mV;3/3KD%/%V$h@Pt>IQaGo#[dm=g:he\)?[,KsjjBB0HnhAHgs[GsC*-
%DH,`2r[NBn<L3B,YL:(SlLH[9.\]@?hHsY"WPkaZ^E!,l6"+dW9poeghB"fF.aEA[8VUtZkM7D3i`a[iH#%7TP.aqF53\00.M@dD
%4kB\;TpIT9k^D'8]^&RlpM<F8kc3$ONNh;LX]LXVbBQ.[h,ScFBig.sN&(@4Oaj`mZB]%nUJRS)VWc)?Q27;okKn349(hPBQ"[YO
%[JD.Mh@aEtXQNKYRlB6TqBYfad5&DYomZJr%ib1fY;FB$>QoJWTb[0tfVdZF@N%_X50;8iqEgrhs(^&E`IeDCb)<s6p0>SsNJt<g
%p9@U'FKW2<f77QUq,+Xt9$R!.Z/([lVEiCjGNh<5Y<EZW:UU)0W<=;5n_R3PE'00GICpeX?uu.8bIb[aX+$\Z+`p7X+:@ls`r4l=
%O]JZ=1%#Z<?^`2QDe.AeEOo>LC.8e".GJB1Q)TY5j9dcO322A(j9]ZqmmS7hql(G0.-19I4!-=0q-IJB,oWWXUtf/Jaidr4O-rC5
%@2/=DKS64VH!JUD2<<r+.1tb!omAAYK-3eD5K//1Oql_Od:Y]P+G=Sal#S_GR_NV6>X8Y-S#oQ;k>M%k3N__L^@0Z$\D1Zo,Yg/#
%4H-kchsCu"Cb"d!O[^&n?:8@sCW+4s^.S:kL\p%-7HR)J@&iV+7shKS5)T5/Ut(sb5Y$)aR2E/1;"CdX-i'ctji!n-T3RNNjrXd+
%,aFG%ITPH'+UA\gbnY[pjn4GA`1L#<>B_ZTWQ+Bc-pDK<O[$BmDXm<qjaT,ocQ`fJ(\kYTbjVF$F)=,6>j5$6FnRbOn[),mB8ak'
%caA5YB#>^1GI<A-8X8WB:.DKQ)4Y["1u6]2h`+B4;=75[e5f3bNI&?Hp94bH<:G+pIBeOTW;%`?3;5Z[7`k\l1jlg=.#a89Sr<S>
%Z"kZII?jcAL<IF-)0LF0@"W(XGSL.@dk(@JU[k#k'hCN*<;r*@U-m1:;sE0qdrNQSm6A-dD9eWLr?i`n(9=6+`IC*8DfbH@EDg[;
%A#4*ZptFU9rjebD2O%pYs!L)G`.iaB!+I=uUE'Vj,fu_h3OTe,O=UKU11^OiOGp0$[2^<>,[ki;29mV#\?!!m"q2V'/;)XHJcWe_
%)Wl;)!0UoMenr$M!6M_X*MW]Cn7q//Hd^CWFVrq:J>?r)8Rh&g"#tI;*(Le`+=Sa[A6rYq"*b8eJ)7sC3+CUg;n2l/8a)jRj=M#h
%+=9OQ!Ws's"HqFqcN=j=Pp$I2)&2#,Y>/(%.NjT)6qq)+/E#(2T51BP9pp[e$k,Z:iKrT;OTD`MjNJ*IJ:jK^[N@:`JG3/J)Z'[J
%E:hY^DnaU"Ne^[5k8>?!HhKt=)]t0+AE]%^]`A1`8">tR+5f\5AZc+WOH_u^A/5A7i74bjFG3OY>EqRj+T`.aG"QNP,@F9>9'b+0
%$"/lk4%p;[^e9_$f*)h,BXH\N%%KSgo[jX)is#j80)A6_(K/'-B%H;YW.5]%d8iU7#$/N8QD2S,(,0[Si]@<Ii74KmlNYoiM$IC4
%!H4Qh?u#`H@ZNOiA&NnmRRU*3";u/\Zmu"eQiT]u./FD"5VdTj">:F'+E"^S_[8<;;fP3^Tuq%sd(="'9Y^\LW=-\D)`a"SW^[.P
%TEFZ'qr)i%0rCu"%3BJ=[ID9CH6=YVSgh\jp]/'7gd3^R#ElTJEIIsSi)R1sJ_150#EY3cjocjs9G#AU$isEJ*Rj0T,4P?qSl2%T
%"Fb%!hg3*E*"OJc2/i[O#5e%\WLWC)egD_oUMATSJ.d)WD0YOP9AoTAT`-Wr$(TF'Lmn#Fp78%*hZ%`6#or0qUdZXn6/7T.1]R]>
%4Bn\=*Jf;l\$_9?JeU0ah)QqhVSM^c)QNs>n7&UD/J8D=GukXLL(ttbI[J@t<fi7iikl105nY7':pkEG$f'@t#+Z'(OG"E7.1TY9
%!af0IN=B\i&gX8\@qTb3gDK/h]"eJ@6I16s?g*(efJ]>G"(.-8d(3+F\c;q+R]e5jmQ_VNq:Xsd3G4.6Or.eB(^"90<:l;.hZ+Om
%8[j0Lc,g,EkZ@Wt?+BV/)0G&:gK^_=&!0*W.r;0Dko4.uO)NpMXKi4F^k2qX3ALf__!b>M)*]8RP''LL*Aa>m8Ks[O3STNN8/<^U
%BJG&Igt\FeU.o;'DTbebh#&Jd9:eP-Y^nb&"J8i-\I!5:XC:SQm>X(r.XO0S1IDY8i)iEnYShMD!a-gKq#DGR_Nb>mKfX0P[Ku[k
%_%(:]ZLUUDmblpo!$9c*/[TjhO9aF0DDnN-XahI#;p#!r\Qmbh/tRIRque)qANZPOk=-PTo-M4sXr%(f97lE#(BPbjN8>rFJfp-k
%-4-n>i!+[QQ-+A/C#(0?VZ?Q_5Ah;>!?>X+PQqF'+gPlu&Y":VEDRc04sLYUR5W&L6P5JhhKbq=2.7)[,qmf>0YdrcMO@Jj)fUI3
%-LB2tql/5*KR<tLoIU=>J7+0684Z3k-mK=[KVSZgTt!0O'%d;RNkTH;-@oJp'o'1*Pi0"5S\k,[8oU!fYo.jq=FqJL&#&V#/g1P^
%EDUA@E!bkDY(GON^k?5=-KL^NA3poR=D`FA1a/h!m0HnVJPBO)j5R09!D[Ttp)tRJKMGpRM#-,::%3f]EG&pr-[YumTpnT(KEjaC
%Ma`5ZGoI$C=5W7,#GV="k#IfF)l&LLctStH$;O_TG^'=fi1O3./d&!_l')CUnI8Iegho^p9h5G3eeWGr5UrSnUfq]4Jrd2P%,21j
%nCM"-[S0d,1QPKA[LTNn)%@(u:]mihC?V:!;YlU@NHj@rOruS2%hHHB'(eP)R=SI2K#gqAO#LSM.omiDShLOI>.PC?!\N().E\5e
%W.dcdT6l%((@8EhV<0.CJ]ph'/&29mGVQ9caf*^23M+S$-VFsNcNCf;'Vsg60CXRWS..a'N*[VuF<\rcB)$tY5$KiBil3Vs9B41f
%QiRUe@.e-Fq12rCr`aS@pOFqCKDZ2/RkP7B!7G@S&2\qTCbPlT4\uQjk2ISfjQNmMmYt`GM-Cde\.at?F:3M8b4iT3%,hicp1jcQ
%O<e3t,5f53Qn)cQ6;I>C1LN7'_TrP5^pUnZ(U_-bSAEes>R-jO98,ueGlSbmXBFCu6pjj6h?f+Y"_gNmaQm/VSM:RcRcu!Wq>`C?
%lt<Gpq$pBAjO.A=L1H]JFf!s!#3T>P'\4X:K+kKMncl85)7W&,T`K!!km!5u68g)HO=P4^JIUa53m"rBA4(CX6l)^GTFFIU$!S'T
%o`dAMngT[o5WAIA;kM$Z2`MbiYek""K/9MX.rE-^3<-Rg0m*I9Ch4EVrWg<Vg##`ddg>%'C6cNQ3;hP'hk0r5`ufd,o=sYlnX!V^
%lgpJCs8"=DIc72SrUTR3J,f6(n,N@ZgQ+Ssr7dS<rVH6LQX>4?rQFY:s/5n#\"CE`rU'>d^O:P-m;Kc=+'86bon/lcqTE7Gq8XTV
%!C"Q@!<~>
%AI9_PrivateDataEnd
